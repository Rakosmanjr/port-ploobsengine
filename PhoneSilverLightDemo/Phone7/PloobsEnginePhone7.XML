<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PloobsEnginePhone7</name>
    </assembly>
    <members>
        <member name="T:PloobsEngine.Utils.MathUtils">
            <summary>
            Lots of Math Helper Functions
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.PointInsideBoundingBox(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Check if a point lies inside a <see cref="T:Microsoft.Xna.Framework.BoundingBox"/>
            </summary>
            <param name="point">3D Point</param>
            <param name="box">Bounding box</param>
            <returns>
            True if point lies inside the bounding box
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.PointInsideCone(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Double)">
            <summary>
            Check if a point lies inside a conical region. Good for checking if a point lies in something's
            field-of-view cone.
            </summary>
            <param name="point">Point to check</param>
            <param name="coneOrigin">Cone's origin</param>
            <param name="coneDirection">Cone's forward direction</param>
            <param name="coneAngle">Cone's theta angle (radians)</param>
            <returns>
            True if point is inside the conical region
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.PointInsideBoundingSphere(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.BoundingSphere)">
            <summary>
            Check if a point lies inside of a <see cref="T:Microsoft.Xna.Framework.BoundingSphere"/>.
            </summary>
            <param name="point">3D Point</param>
            <param name="sphere">Sphere to check against</param>
            <returns>
            True if point is inside of the sphere
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.PointInsideSphere(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Check if a point lies in a sphere. Good for checking is a point lies within a specific
            distance of another point, like proximity checking.
            </summary>
            <param name="point">3D Point</param>
            <param name="sphereCenter">Sphere's center</param>
            <param name="sphereRadius">Sphere's radius</param>
            <returns>
            True if point is inside of the sphere
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.IsPowerOfTwo(System.Int32)">
            <summary>
            Check if the parameter is power of two
            </summary>
            <param name="Value">The value.</param>
            <returns>
              <c>true</c> if [is power of two] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.Interpolate(System.Single,System.Single,System.Single)">
            <summary>
            SImple Linear interpolation
            </summary>
            <param name="alpha">The alpha.</param>
            <param name="x0">The x0.</param>
            <param name="x1">The x1.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.Interpolate(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Linear Interpolates with the specified alpha.
            </summary>
            <param name="alpha">The alpha.</param>
            <param name="x0">The x0.</param>
            <param name="x1">The x1.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.Clip(System.Single,System.Single,System.Single)">
            <summary>
            Constrain a given value (x) to be between two (ordered) bounds min
            and max.
            </summary>
            <param name="x">The x.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>
            Returns x if it is between the bounds, otherwise returns the nearer bound.
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.RemapInterval(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            remap a value specified relative to a pair of bounding values
            to the corresponding value relative to another pair of bounds.
            Inspired by (dyna:remap-interval y y0 y1 z0 z1)
            </summary>
            <param name="x">The x.</param>
            <param name="in0">The in0.</param>
            <param name="in1">The in1.</param>
            <param name="out0">The out0.</param>
            <param name="out1">The out1.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.RemapIntervalClip(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Like remapInterval but the result is clipped to remain between
            out0 and out1
            </summary>
            <param name="x">The x.</param>
            <param name="in0">The in0.</param>
            <param name="in1">The in1.</param>
            <param name="out0">The out0.</param>
            <param name="out1">The out1.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.IntervalComparison(System.Single,System.Single,System.Single)">
            <summary>
            classify a value relative to the interval between two bounds:
                returns -1 when below the lower bound
                returns  0 when between the bounds (inside the interval)
                returns +1 when above the upper bound
            </summary>
            <param name="x">The x.</param>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.ScalarRandomWalk(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Scalar random walk.
            </summary>
            <param name="initial">The initial.</param>
            <param name="walkspeed">The walkspeed.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.BlendIntoAccumulator(System.Single,System.Single,System.Single@)">
            <summary>
            blends new values into an accumulator to produce a smoothed time series
            </summary>
            <param name="smoothRate">The smooth rate.</param>
            <param name="newValue">The new value.</param>
            <param name="smoothedAccumulator">The smoothed accumulator.</param>
            <example>blendIntoAccumulator (dt * 0.4f, currentFPS, smoothedFPS)</example>
            <remarks>
            Modifies its third argument, a reference to the float accumulator holding
            the "smoothed time series."
            The first argument (smoothRate) is typically made proportional to "dt" the
            simulation time step.  If smoothRate is 0 the accumulator will not change,
            if smoothRate is 1 the accumulator will be set to the new value with no
            smoothing.  Useful values are "near zero".
            </remarks>
        </member>
        <member name="M:PloobsEngine.Utils.MathUtils.BlendIntoAccumulator(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Blends the parameter into the accumulator.
            </summary>
            <param name="smoothRate">The smooth rate.</param>
            <param name="newValue">The new value.</param>
            <param name="smoothedAccumulator">The smoothed accumulator.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.ICuller">
            <summary>
            Culler Specification
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.ICuller.GetNotCulledObjectsList(System.Nullable{PloobsEngine.Material.MaterialType})">
            <summary>
            Get all the objects that pass the culling phase
            </summary>
            <param name="Filter">Or Filter, null for all</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.ICuller.StartFrame(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Called by the engine Once in the start of each rendering pass
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.ICuller.onObjectAdded(PloobsEngine.SceneControl.IObject)">
            <summary>
            Called when an object is added to the world
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.ICuller.onObjectRemoved(PloobsEngine.SceneControl.IObject)">
            <summary>
            Called when an object s removed from the world
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.ICuller.RenderedObjectThisFrame">
            <summary>
            Gets the number of objects rendered in this frame.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.OctreeCuller.#ctor(System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Vector3,PloobsEngine.Features.DebugDraw.DebugShapesDrawer)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.OctreeCuller"/> class.
            </summary>
            <param name="worldSize">Size of the world.</param>
            <param name="loose">The loose.</param>
            <param name="maxDepth">The max depth.</param>
            <param name="center">The center.</param>
            <param name="DebugDrawer">The debug drawer. We strong recomend you to DONT JUST this DebugDrawer for nothing anymore, if you need, create another</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.IDeferredLightMap">
            <summary>
            Deferred LightMap generation specification
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredLightMap.SetLightMap(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Sets the light map.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredLightMap.ResolveLightMap(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Resolves the light map.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredLightMap.DrawLights(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IDeferredGBuffer,PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Draws the lights.
            Perform the light pass
            </summary>
            <param name="gameTime">The game time.</param>
            <param name="world">The world.</param>
            <param name="deferredGBuffer">The deferred G buffer.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredLightMap.LoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,System.Boolean,System.Boolean)">
            <summary>
            Loads the content.
            </summary>
            <param name="engine">The engine.</param>
            <param name="useFloatBuffer">if set to <c>true</c> [use float buffer].</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IDeferredLightMap.Item(PloobsEngine.SceneControl.DeferredLightMapType)">
            <summary>
            Get the generated Images by this pass
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.DeferredLightMapType">
            <summary>
            Generated Buffers by the lightmap pass
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.DeferredLightMapType.LIGHTMAP">
            <summary>
            LightMap
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.IScreen">
            <summary>
            IScreen, base class for all screens
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.IScreen"/> class.
            </summary>
            <param name="gui">The GUI Component, if null you cant use GUI in this screen.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.AddScreenUpdateable(PloobsEngine.IScreenUpdateable)">
            <summary>
            Attach one IScreenUpdateable to this screen
            </summary>
            <param name="updateable">The updateable.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.RemoveScreenUpdateable(PloobsEngine.IScreenUpdateable,System.Boolean)">
            <summary>
            Removes the IScreenUpdateable.
            </summary>
            <param name="updateable">The updateable.</param>
            <param name="callCleanUp">if set to <c>true</c> [call clean up].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.LoadContent(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IContentManager)">
            <summary>
            Load graphics content for the screen.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.InitScreen(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.EngineStuff)">
            <summary>
            Init Screen
            </summary>
            <param name="GraphicInfo">The graphic info.</param>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.AfterLoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Called after all the screens LoadContent is called
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update the Screen
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            This is called when the screen should draw itself.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScreen.CleanUp(PloobsEngine.Engine.EngineStuff)">
            <summary>
            Cleans up resources that dont are exclusive of the screen        
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScreen.Gui">
            <summary>
            Gets the GUI interface.
            REMEMBER, you need to provide an implementation in the Screen Constructor, if you dont, you cant access this property
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScreen.ScreenState">
            <summary>
            Gets or sets the state of the screen.
            </summary>
            <value>
            The state of the screen.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScreen.ScreenManager">
            <summary>
            Gets the manager that this screen belongs to.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScreen.GraphicInfo">
            <summary>
            Gets the graphic info.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScreen.GraphicFactory">
            <summary>
            Gets the graphic factory.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.AfterLoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Function called After all the stuffs LoadContent is called
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update the Screen
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            This is called when the screen should draw itself.
            </summary>
            <param name="gameTime"></param>
            <param name="render"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.LoadContent(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IContentManager)">
            <summary>
            Load content for the screen.        
            </summary>
            <param name="GraphicInfo"></param>
            <param name="factory"></param>
            <param name="contentManager"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.InitScreen(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.EngineStuff)">
            <summary>
            Init Screen
            </summary>
            <param name="GraphicInfo">The graphic info.</param>
            <param name="engine"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DScene.SetWorldAndRenderTechnich(PloobsEngine.SceneControl._2DScene.RenderTechnich2D@,PloobsEngine.SceneControl._2DScene.I2DWorld@)">
            <summary>
            Sets the world and render technich.
            </summary>
            <param name="renderTech">The render tech.</param>
            <param name="world">The world.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DScene.RenderTechnic">
            <summary>
            Gets the render technics.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DScene.World">
            <summary>
            Gets or sets the world instance.
            </summary>
            <value>
            The world.
            </value>
        </member>
        <member name="T:Bnoerj.AI.Steering.Trail">
            <summary>
            Provides support to visualize the recent path of a vehicle.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.Trail.#ctor">
            <summary>
            Initializes a new instance of Trail.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.Trail.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of Trail.
            </summary>
            <param name="duration">The amount of time the trail represents.</param>
            <param name="vertexCount">The number of smaples along the trails length.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.Trail.Record(System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Records a position for the current time, called once per update.
            </summary>
            <param name="currentTime"></param>
            <param name="position"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.Trail.Draw(Bnoerj.AI.Steering.IDraw)">
            <summary>
            Draws the trail as a dotted line, fading away with age.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.Trail.Clear">
            <summary>
            Clear trail history. Used to prevent long streaks due to teleportation.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.Trail.TrailColor">
            <summary>
            Gets or sets the color of the trail.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.Trail.TickColor">
            <summary>
            Gets or sets the color of the ticks.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Culler.I2DCuller.GetNotCulledObjectsList">
            <summary>
            Get all the objects that pass the culling phase
            </summary>
            <param name="Filter">Or Filter, null for all</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Culler.I2DCuller.StartFrame(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Called by the engine Once in the start of each rendering pass
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Culler.I2DCuller.onObjectAdded(PloobsEngine.SceneControl._2DScene.I2DObject)">
            <summary>
            Called when an object is added to the world
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Culler.I2DCuller.onObjectRemoved(PloobsEngine.SceneControl._2DScene.I2DObject)">
            <summary>
            Called when an object s removed from the world
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Culler.I2DCuller.RenderedObjectThisFrame">
            <summary>
            Gets the number of objects rendered in this frame.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.IPhysicObject">
            <summary>
            Specification of a physic Object
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicObject.ApplyImpulse(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Applies an impulse.
            </summary>
            <param name="force">The force.</param>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.FaceVector">
            <summary>
            Vector pointing to the front
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.WorldMatrix">
            <summary>
            Gets the world matrix.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.Velocity">
            <summary>
            Gets or sets the velocity.
            </summary>
            <value>
            The velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.isMotionLess">
            <summary>
            Gets or sets a value indicating whether this instance is motion less.
            </summary>
            <value>
            	<c>true</c> if this instance is motion less; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.ObjectOwner">
            <summary>
            Gets or sets the IObject owner.
            </summary>
            <value>
            The IObject owner.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.PhysicObjectTypes">
            <summary>
            Gets the physic object type.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.BoundingBox">
            <summary>
            Gets the bounding box IN WORLD COORDINATES
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicObject.AngularVelocity">
            <summary>
            Gets or sets the angular velocity.
            </summary>
            <value>
            The angular velocity.
            </value>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TerrainObject.SetMaterialDescription(PloobsEngine.Physics.MaterialDescription)">
            <summary>
            Sets the material description.
            </summary>
            <param name="materialDescription">The material description.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TerrainObject.GetMaterialDescription">
            <summary>
            Gets the material description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TerrainObject.#ctor(PloobsEngine.Engine.GraphicFactory,System.String,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,PloobsEngine.Physics.MaterialDescription,System.Single,System.Single,System.Single)">
            <summary>
            Create a Terrain Physic Object
            </summary>
            <param name="gfactory">The gfactory.</param>
            <param name="heighmapName">Name of the heighmap texture</param>
            <param name="translation">The translation.</param>
            <param name="rotation">The rotation.</param>
            <param name="XSpacing">The X spacing.</param>
            <param name="ZSpacing">The Z spacing.</param>
            <param name="heightMultipler">Default 10 - controla a altura, menor mais alto</param>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TerrainObject.MaxHeight">
            <summary>
            Gets the height of the max.
            </summary>
            <value>
            The height of the max.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TerrainObject.MinHeight">
            <summary>
            Gets the height of the min.
            </summary>
            <value>
            The height of the min.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TerrainObject.Terrain">
            <summary>
            Gets the terrain.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TerrainObject.HeightMap">
            <summary>
            Gets the height map.
            </summary>
        </member>
        <member name="T:PloobsEngine.Light.PointLightPE">
            <summary>
            Deferred Point Light
            </summary>
        </member>
        <member name="T:PloobsEngine.Light.DeferredLight">
            <summary>
            Deferred Light Specification
            </summary>
        </member>
        <member name="T:PloobsEngine.Light.ILight">
            <summary>
            Specification of a Light
            </summary>
        </member>
        <member name="P:PloobsEngine.Light.ILight.CastShadown">
            <summary>
            Gets or sets a value indicating whether [cast shadown].
            </summary>
            <value>
              <c>true</c> if [cast shadown]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.ILight.Name">
            <summary>
            Gets or sets the name of the light.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.ILight.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.SHADOWBIAS">
            <summary>
            Gets or sets the SHADOWBIAS.
            </summary>
            <value>
            The SHADOWBIAS.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.ViewMatrix">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>
            The view matrix.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.ProjMatrix">
            <summary>
            Gets or sets the proj matrix.
            </summary>
            <value>
            The proj matrix.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.Name">
            <summary>
            Gets or sets the name of the light.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DeferredLight.CastShadown">
            <summary>
            Gets or sets a value indicating whether [cast shadown].
            </summary>
            <value>
              <c>true</c> if [cast shadown]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:PloobsEngine.Light.PointLightPE.#ctor">
            <summary>
            Serialization 
            </summary>
        </member>
        <member name="M:PloobsEngine.Light.PointLightPE.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Point Light
            </summary>
            <param name="lightPosition">Position in World</param>
            <param name="color">Color</param>
            <param name="lightRadius">Radius</param>
            <param name="lightIntensity">Intensity</param>
        </member>
        <member name="P:PloobsEngine.Light.PointLightPE.LightPosition">
            <summary>
            Gets or sets the light position.
            </summary>
            <value>
            The light position.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.PointLightPE.LightRadius">
            <summary>
            Gets or sets the light radius.
            </summary>
            <value>
            The light radius.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.PointLightPE.LightIntensity">
            <summary>
            Gets or sets the light intensity.
            </summary>
            <value>
            The light intensity.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.PointLightPE.UsePointLightQuadraticAttenuation">
            <summary>
            Gets or sets a value indicating whether [use point light quadratic attenuation].
            </summary>
            <value>
            	<c>true</c> if [use point light quadratic attenuation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.PointLightPE.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="F:PloobsEngine.Features.DebugDraw.DebugBox.effect">
            <summary>
            The basic effect used to draw boxes.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugBox.#ctor(Microsoft.Xna.Framework.BoundingBox,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new box.
            Visible by default
            </summary>
            <param name="BoundingBox">The bounding box.</param>
            <param name="color">The box's color.</param>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugBox.Draw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draws the box.
            </summary>
            <param name="render">The render.</param>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="T:PloobsEngine.Entity.IEntity">
            <summary>
            Represents a generic entity
            </summary>
        </member>
        <member name="M:PloobsEngine.Entity.IEntity.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>the id</returns>
        </member>
        <member name="M:PloobsEngine.Entity.IEntity.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:PloobsEngine.SceneControl.SimpleCuller">
            <summary>
            Culler that uses the bepu scene control
            </summary>
        </member>
        <member name="T:PloobsEngine.MessageSystem.MessageDeliver">
            <summary>
            Responsible to Deliver the messages to the Recievers
            o interessante eh q eu uso uma interface combinada com um delegate (fico muito loco , vo patentia ...)
            funciona assim , voce extende um interface q tem um metodo do tipo CanIhandleThisMessage q recebe um
            tipo de mensagem , se ele consegue dar handler ele devolve um delegate pra o tratador de mensagem q ele implementou
            .... veja o exemplo do Sampleagente q ficara mais facil de entender
            o que importa eh q a pessoa implementa apenas 2 funcoezinhas e ja ta OK para enviar
            e receber mensagens e o sistema ja sabe como trata-las...
            o sistema faz o "roteamento" das mensagens pra encontrar o destinatario
            eh possivel fazer broadcast e enviar apenas para um grupo usando as tags 
            USEI components (nessa arquitetura) pra ficar mais facil de "plugar"    
            </summary>
        </member>
        <member name="T:PloobsEngine.Components.IComponent">
            <summary>
            Component Specification
            Components can Recieve Commands and send messages
            Designed to be VERY low coupled
            </summary>
        </member>
        <member name="T:PloobsEngine.Commands.IReciever">
            <summary>
            Specification for everyone that recieves ICommands    
            </summary>
        </member>
        <member name="M:PloobsEngine.Commands.IReciever.getMyName">
            <summary>
            The name of the reciever
            MUST BE UNIQUE
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update
            Its called deppending of the ComponentType
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.PreDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Pres draw.
            Its called deppending of the ComponentType
            </summary>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.PosWithDepthDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Pos With Depth draw.
            Its called deppending of the ComponentType
            </summary>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.AfterDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Afters draw.
            Its called deppending of the ComponentType
            </summary>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.LoadContent(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Loads the content.
            </summary>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>
            the id
            </returns>
        </member>
        <member name="M:PloobsEngine.Components.IComponent.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:PloobsEngine.Components.IComponent.ComponentType">
            <summary>
            Gets the type of the component type.
            </summary>
            <value>
            The type of the component.
            </value>
        </member>
        <member name="M:PloobsEngine.MessageSystem.MessageDeliver.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Deliver the messages
            </summary>
            <param name="gt"></param>
        </member>
        <member name="M:PloobsEngine.MessageSystem.MessageDeliver.SendMessageWithChecking(PloobsEngine.MessageSystem.Message)">
            <summary>
            Check is performed NOW,if the message is send later problems may occur
            </summary>
            <param name="mem">The mem.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.MessageSystem.MessageDeliver.SendMessage(PloobsEngine.MessageSystem.Message)">
            <summary>
            Put the message in the Sender Queue
            </summary>
            <param name="mem">The mem.</param>
        </member>
        <member name="M:PloobsEngine.MessageSystem.MessageDeliver.getMyName">
            <summary>
            Gets The component Name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.MessageSystem.MessageDeliver.NumMessagerdeliveredByFrame">
            <summary>
            Gets or sets the messagerdelivered by frame.
            </summary>
            <value>
            The num messagerdelivered by frame.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.MessageDeliver.ComponentType">
            <summary>
            Gets the type of the component.
            </summary>
            <value>
            The type of the component.
            </value>
        </member>
        <member name="T:PloobsEngine.MessageSystem.MessageComparer">
            <summary>
            Message Comparer
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.MessageComparer.Compare(PloobsEngine.MessageSystem.Message,PloobsEngine.MessageSystem.Message)">
            <summary>
            Compares the messages
            </summary>
            <param name="nodeA">The node A.</param>
            <param name="nodeb">The nodeb.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.MessageSystem.DelayComparer">
            <summary>
            Delay Comparer
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.DelayComparer.Compare(PloobsEngine.MessageSystem.Message,PloobsEngine.MessageSystem.Message)">
            <summary>
            Compare the delays of the messages
            </summary>
            <param name="nodeA">The node A.</param>
            <param name="nodeb">The nodeb.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Material.IMaterial">
            <summary>
            Material Specification
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.IMaterial.Initialization(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializations the specified Material.
            </summary>
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Material.IMaterial.PreDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pre drawn Function.
            Called before all the objects are draw
            </summary>
            <param name="mundo">The mundo.</param>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.IMaterial.PosDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pos drawn Function.        
            Called after all objects are Draw
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.IMaterial.Drawn(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Normal Drawn Function.
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.IMaterial.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Update.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="obj">The obj.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="P:PloobsEngine.Material.IMaterial.Shadder">
            <summary>
            Gets or sets the shadder.
            </summary>
            <value>
            The shadder.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.IMaterial.MaterialType">
            <summary>
            Gets or sets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.IMaterial.CanCreateShadow">
            <summary>
            Gets or sets a value indicating whether this material is [Create shadow on others objects].
            </summary>
            <value>
              <c>true</c> if [affected by shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.IMaterial.CanAppearOfReflectionRefraction">
            <summary>
            Gets or sets a value indicating whether this instance can appear of reflection and refraction.
            </summary>
            <value>
            	<c>true</c> if this instance can appear of reflection/refraction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.IMaterial.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.Material.MaterialType">
            <summary>
            Material Type
            </summary>
        </member>
        <member name="F:PloobsEngine.Material.MaterialType.DEFERRED">
            <summary>
            When this type is set AND the render is Deferred,
            Only the Pre Draw and the Draw call are called
            </summary>
        </member>
        <member name="F:PloobsEngine.Material.MaterialType.FORWARD">
            <summary>
            When this type is set AND the render is Deferred,
            Only the Pos Draw call is called.
            </summary>
        </member>
        <member name="T:PloobsEngine.PrincipalConstants">
            <summary>
            Here we have all the importants Engine Constants
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.DefaultInitConfFileName">
            <summary>
            Where to search for the init conf file
            This funcionality is not on yet
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.EventSenderId">
            <summary>
            Id used when an event send a message
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.InvalidId">
            <summary>
            Invalid id constant
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.MessageDeliverId">
            <summary>
            The messegeDeliver component id
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.RecieverNotFound">
            <summary>
            Message recieved when the reciever is not found
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.CombinedImage">
            <summary>
            the combined image alias (Post processing)
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.CurrentImage">
            <summary>
            The current image alias (Post Processing)
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.extra1RT">
            <summary>
            extra render target name
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.colorRT">
            <summary>
            Color (diffuse) render target name
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.normalRt">
            <summary>
            Normal render target name
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.lightRt">
            <summary>
            Light Render target name
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.DephRT">
            <summary>
            Depth Render target name
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.SEPARATOR_CHARACTER">
            <summary>
            Separator character used when parsing files
            </summary>
        </member>
        <member name="F:PloobsEngine.PrincipalConstants.NotEffectByLightIdBiggerThan">
            <summary>
            SHADER ID bigger than this value is Not affect by light
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.ILocalSpace">
            <summary>
            A local coordinate system for 3d space
            <para>
            Provides functionality such as transforming from local space to global
            space and vice versa.  Also regenerates a valid space from a perturbed
            "forward vector" which is the basis of abnstract vehicle turning.
            </para>
            <para>
            These are comparable to a 4x4 homogeneous transformation matrix where the
            3x3 (R) portion is constrained to be a pure rotation (no shear or scale).
            The rows of the 3x3 R matrix are the basis vectors of the space.  They are
            all constrained to be mutually perpendicular and of unit length.  The top
            ("x") row is called "side", the middle ("y") row is called "up" and the
            bottom ("z") row is called forward.  The translation vector is called
            "position".  Finally the "homogeneous column" is always [0 0 0 1].
            </para>
            <code>
            [ R R R  0 ]      [ Sx Sy Sz  0 ]
            [ R R R  0 ]      [ Ux Uy Uz  0 ]
            [ R R R  0 ]  ->  [ Fx Fy Fz  0 ]
            [          ]      [             ]
            [ T T T  1 ]      [ Tx Ty Tz  1 ]
            </code>
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.ResetLocalSpace">
            <summary>
            Resets the transform to identity.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.LocalizeDirection(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Transforms a direction in global space to its equivalent in local space.
            </summary>
            <param name="globalDirection">The global space direction to transform.</param>
            <returns>The global space direction transformed to local space .</returns>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.LocalizePosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Transforms a point in global space to its equivalent in local space.
            </summary>
            <param name="globalPosition">The global space position to transform.</param>
            <returns>The global space position transformed to local space.</returns>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.GlobalizeDirection(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Transforms a direction in local space to its equivalent in global space.
            </summary>
            <param name="localDirection">The local space direction to tranform.</param>
            <returns>The local space direction transformed to global space</returns>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.GlobalizePosition(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Transforms a point in local space to its equivalent in global space.
            </summary>
            <param name="localPosition">The local space position to tranform.</param>
            <returns>The local space position transformed to global space.</returns>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.SetUnitSideFromForwardAndUp">
            <summary>
            Sets the "side" basis vector to normalized cross product of forward and up.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.RegenerateOrthonormalBasisUF(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Regenerates the orthonormal basis vectors given a new forward.
            </summary>
            <param name="newUnitForward">The new unit-length forward.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.RegenerateOrthonormalBasis(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Regenerates the orthonormal basis vectors given a new forward.
            </summary>
            <param name="newForward">The new forward.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.RegenerateOrthonormalBasis(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Regenerates the orthonormal basis vectors given a new forward and up.
            </summary>
            <param name="newForward">The new forward.</param>
            <param name="newUp">The new up.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.LocalRotateForwardToSide(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Rotates, in the canonical direction, a vector pointing in the
            "forward" (+Z) direction to the "side" (+/-X) direction as implied
            by IsRightHanded.
            </summary>
            <param name="value">The local space vector.</param>
            <returns>The rotated vector.</returns>
        </member>
        <member name="M:Bnoerj.AI.Steering.ILocalSpace.GlobalRotateForwardToSide(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Rotates, in the canonical direction, a vector pointing in the
            "forward" (+Z) direction to the "side" (+/-X) direction as implied
            by IsRightHanded.
            </summary>
            <param name="value">The global space forward.</param>
            <returns>The rotated vector.</returns>
        </member>
        <member name="P:Bnoerj.AI.Steering.ILocalSpace.Side">
            <summary>
            Gets or sets the side.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.ILocalSpace.Up">
            <summary>
            Gets or sets the up.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.ILocalSpace.Forward">
            <summary>
            Gets or sets the forward.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.ILocalSpace.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.ILocalSpace.IsRightHanded">
            <summary>
            Indicates whether the local space is right handed.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physic.Constraints.IPhysicConstraint">
            <summary>
            Specification of a physic Constraint
            </summary>
        </member>
        <member name="P:PloobsEngine.Physic.Constraints.IPhysicConstraint.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="T:PloobsEngine.Physic2D.Farseer.ConvertUnits">
            <summary>
            Convert units between display and simulation units.
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.AnimatedModel">
            <summary>
            Concrete Animated Model
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.IAnimatedModel">
            <summary>
            New Kind of Model specific for Animations
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.IModelo">
            <summary>
            Model Specification
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.getTexture(PloobsEngine.Modelo.TextureType,System.Int32,System.Int32)">
            <summary>
            Gets one texture of the model.
            </summary>
            <param name="type">The type.</param>
            <param name="meshIndex">Index of the mesh.</param>
            <param name="meshPartIndex">Index of the mesh part.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.SetTexture(System.String,PloobsEngine.Modelo.TextureType,System.Int32,System.Int32)">
            <summary>
            Sets the texture.
            </summary>
            <param name="textureName">Name of the texture.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.LoadModelo(PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Load the model
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.LoadModel(PloobsEngine.Engine.GraphicFactory,PloobsEngine.Modelo.BatchInformation[][]@,PloobsEngine.Modelo.TextureInformation[][]@)">
            <summary>
            Loads the batch info, called by the constructor if callLoadContent is true
            </summary>
            <param name="factory">The factory.</param>
            <param name="BatchInformations">The batch informations.</param>
            <param name="TextureInformation">The texture information.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.SetTexture(Microsoft.Xna.Framework.Graphics.Texture2D,PloobsEngine.Modelo.TextureType,System.Int32,System.Int32)">
            <summary>
            Sets the texture.
            </summary>
            <param name="tex">The tex.</param>
            <param name="type">The type.</param>
            <param name="meshIndex">Index of the mesh.</param>S
            <param name="meshPartIndex">Index of the mesh part.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.GetModelRadius">
            <summary>
            Gets the model radius.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.IModelo.GetBatchInformation(System.Int32)">
            <summary>
            Gets the batch information.
            </summary>
            <param name="meshNumber">The mesh number.</param>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Modelo.IModelo.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>
            The tag.
            </value>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Modelo.IModelo.MeshNumber">
            <summary>
            Gets the mesh number.
            </summary>
        </member>
        <member name="P:PloobsEngine.Modelo.IModelo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedModel.GetAnimation">
            <summary>
            Gets the animation Information from Model
            It can be for example the Bone hierarchy of the model
            The result need to be casted (vary toooo much between animation APIs, better to keep as Object)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedModel.#ctor(PloobsEngine.Engine.GraphicFactory,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.Animation.AnimatedModel"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="modelName">Name of the model.</param>
            <param name="diffuseTextureName">Name of the diffuse texture.</param>
            <param name="bumpTextureName">Name of the bump texture.</param>
            <param name="specularTextureName">Name of the specular texture.</param>
            <param name="glowTextureName">Name of the glow texture.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedModel.GetAnimation">
            <summary>
            Gets the animation Information from Model
            It can be for example the Bone hierarchy of the model
            The result need to be casted (vary toooo much between animation APIs, better to keep as Object)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedModel.getModelTag">
            <summary>
            Gets the model tag.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Modelo.Animation.AnimatedModel.MeshNumber">
            <summary>
            Gets the mesh number.
            </summary>
        </member>
        <member name="P:PloobsEngine.Modelo2D.AnimationClass.IsLooping">
            <summary>
            Default = true
            </summary>
        </member>
        <member name="P:PloobsEngine.Modelo2D.AnimationClass.Frames">
            <summary>
            Total Frames
            </summary>
        </member>
        <member name="P:PloobsEngine.Modelo2D.AnimationClass.Rotation">
            <summary>
            Animation Rotation
            </summary>
        </member>
        <member name="T:PloobsEngine.Material.ForwardAnimatedMaterial">
            <summary>
            Forward Phone7 Animated Material
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.#ctor(PloobsEngine.Modelo.Animation.IAnimatedController,PloobsEngine.Material.ForwardSimpleAnimationShader)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardMaterial"/> class.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.Initialization(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializations the specified Material.
            </summary>
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.PreDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pre drawn Function.
            Called before all the objects are draw
            </summary>
            <param name="gt">The gt.</param>
            <param name="mundo">The mundo.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.PosDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pos drawn Function.
            Called after all objects are Draw
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.Drawn(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Normal Drawn Function.
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardAnimatedMaterial.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Update.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="obj">The obj.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardAnimatedMaterial.Shadder">
            <summary>
            Gets or sets the shadder.
            </summary>
            <value>
            The shadder.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.ForwardAnimatedMaterial.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.ForwardAnimatedMaterial.CanCreateShadow">
            <summary>
            Gets or sets a value indicating whether this material is [affected by shadow].
            </summary>
            <value>
              <c>true</c> if [affected by shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:PloobsEngine.Features.DebugDraw.DebugSphere.effect">
            <summary>
            The basic effect used to draw boxes.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugSphere.#ctor(Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new box.
            Visible by default
            </summary>
            <param name="BoundingBox">The bounding box.</param>
            <param name="color">The box's color.</param>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugSphere.Draw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draws the box.
            </summary>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="T:PloobsEngine.DataStructure.IHasRectangle">
            <summary>
            Interface to define Rect, so that QuadTree knows how to store the object.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.IHasRectangle.Rect">
            <summary>
            The rectangle that defines the object's boundaries.
            </summary>
        </member>
        <member name="T:PloobsEngine.DataStructure.QuadTree`1">
            <summary>
            A QuadTree Object that provides fast and efficient storage of objects in a world space.
            </summary>
            <typeparam name="T">Any object iheriting from IHasRect.</typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.#ctor(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a QuadTree for the specified area.
            </summary>
            <param name="rect">The area this QuadTree object will encompass.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a QuadTree for the specified area.
            </summary>
            <param name="x">The top-left position of the area rectangle.</param>
            <param name="y">The top-right position of the area reactangle.</param>
            <param name="width">The width of the area rectangle.</param>
            <param name="height">The height of the area rectangle.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Add(`0)">
            <summary>
            Add an item to the object list.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Remove(`0)">
            <summary>
            Remove an item from the object list.
            </summary>
            <param name="item">The object to remove.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.ObjectCount">
            <summary>
            Get the total for all objects in this QuadTree, including children.
            </summary>
            <returns>The number of objects contained within this QuadTree and its children.</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Subdivide">
            <summary>
            Subdivide this QuadTree and move it's children into the appropriate Quads where applicable.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.GetDestinationTree(`0)">
            <summary>
            Get the child Quad that would contain an object.
            </summary>
            <param name="item">The object to get a child for.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Clear">
            <summary>
            Clears the QuadTree of all objects, including any objects living in its children.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Delete(`0)">
            <summary>
            Deletes an item from this QuadTree. If the object is removed causes this Quad to have no objects in its children, it's children will be removed as well.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.Insert(`0)">
            <summary>
            Insert an item into this QuadTree object.
            </summary>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.GetObjects(Microsoft.Xna.Framework.Rectangle,System.Collections.Generic.List{`0}@)">
            <summary>
            Get the objects in this tree that intersect with the specified rectangle.
            </summary>
            <param name="rect">The rectangle to find objects in.</param>
            <param name="results">A reference to a list that will be populated with the results.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.QuadTree`1.GetAllObjects(System.Collections.Generic.List{`0}@)">
            <summary>
            Get all objects in this Quad, and it's children.
            </summary>
            <param name="results">A reference to a list in which to store the objects.</param>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.QuadRect">
            <summary>
            The area this QuadTree represents.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.TopLeftChild">
            <summary>
            The top left child for this QuadTree
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.TopRightChild">
            <summary>
            The top right child for this QuadTree
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.BottomLeftChild">
            <summary>
            The bottom left child for this QuadTree
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.BottomRightChild">
            <summary>
            The bottom right child for this QuadTree
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.Objects">
            <summary>
            The objects contained in this QuadTree at it's level (ie, excludes children)
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.QuadTree`1.Count">
            <summary>
            How many total objects are contained within this QuadTree (ie, includes children)
            </summary>
        </member>
        <member name="T:PloobsEngine.Commands.CommandProcessor">
            <summary>
            Reponsible for sending Commands
            </summary>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.getCommandProcessor">
            <summary>
            Gets the command processor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.SendCommandSyncronous(PloobsEngine.Commands.ICommand,System.String)">
            <summary>
            Send a command NOW
            </summary>
            <param name="command">The command.</param>
            <param name="recieverId">The reciever id.</param>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.SendCommandSyncronous(PloobsEngine.Commands.ICommand)">
            <summary>
            Sends a command Now
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.SendCommandAssyncronous(PloobsEngine.Commands.ICommand,System.String)">
            <summary>
            Schedules a Command to be send when possible
            </summary>
            <param name="command">The command.</param>
            <param name="recieverId">The reciever id.</param>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.SendCommandAssyncronous(PloobsEngine.Commands.ICommand)">
            <summary>
            Schedules a Command to be send when possible
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.ProcessCommands">
            <summary>
            Process the Assyncronous Commands        
            </summary>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.Register(PloobsEngine.Commands.IReciever)">
            <summary>
            Registers the specified reciever.
            </summary>
            <param name="rec">The rec.</param>
        </member>
        <member name="M:PloobsEngine.Commands.CommandProcessor.UnRegister(PloobsEngine.Commands.IReciever)">
            <summary>
            Unregister a specified reciever
            </summary>
            <param name="rec">The rec.</param>
        </member>
        <member name="T:PloobsEngine.IA.Genetic.Genome">
            <summary>
            Summary description for Genome.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.StatisticsUtils.GetAverage(System.Double[])">
            <summary>
            Get average
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.StatisticsUtils.GetVariance(System.Double[])">
            <summary>
            Get variance
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.StatisticsUtils.GetStdev(System.Double[])">
            <summary>
            Get standard deviation
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.StatisticsUtils.GetCorrelation(System.Double[],System.Double[],System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the correlation between X and Y
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
            <param name="covXY">Covariance X,Y</param>
            <param name="pearson">Pearson X,Y</param>
            <param name="MultiplierX">Multiplier of X ( COVXY / VARX )</param>
            /// <param name="MultiplierY">Multiplier of Y ( COVXY / VARY )</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.IDummy">
            <summary>
            Specification of a Dummy
            Dummy is everything that can be put in a world and recovered later
            Its NOT USED by the engine for nothing (the engine just keep it there)
            Usefull to pass information from an editor to the game, cause dummies
            are serializable
            </summary>
        </member>
        <member name="T:PloobsEngine.Engine.UnhandledException">
            <summary>
            Delegate Called when a unhandle exception is found in the engine
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.UnhandledExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:PloobsEngine.Engine.InitialEngineDescription">
            <summary>
            InitialEngineDescription
            </summary>
        </member>
        <member name="M:PloobsEngine.Engine.InitialEngineDescription.Default">
            <summary>
            Defaults this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.InitialEngineDescription.#ctor(System.String,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.GraphicsProfile,System.Boolean,System.Boolean,System.Boolean,PloobsEngine.Engine.Logger.ILogger,System.Boolean,System.Boolean,Microsoft.Xna.Framework.DisplayOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Engine.InitialEngineDescription"/> struct.
            </summary>
            <param name="ScreenName">Name of the screen.</param>
            <param name="BackBufferWidth">Width of the back buffer.</param>
            <param name="BackBufferHeight">Height of the back buffer.</param>
            <param name="isFullScreen">if set to <c>true</c> [is full screen].</param>
            <param name="graphicsProfile">The graphics profile.</param>
            <param name="useVerticalSyncronization">if set to <c>true</c> [use vertical syncronization].</param>
            <param name="isMultiSampling">if set to <c>true</c> [is multi sampling].</param>
            <param name="isFixedGameTime">if set to <c>true</c> [is fixed game time].</param>
            <param name="logger">The logger.</param>
            <param name="useMipMapWhenPossible">if set to <c>true</c> [use mip map when possible].</param>
            <param name="UseAnisotropicFiltering">if set to <c>true</c> [use anisotropic filtering].</param>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.UpdateInterval">
            <summary>
            Update per second
            Default TimeSpan.FromTicks(333333);
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.UseAnisotropicFiltering">
            <summary>
            Use Anisotropic Filtering when possible
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.ScreenName">
            <summary>
            Screen Name
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.UseVerticalSyncronization">
            <summary>
            use V-Sync
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.BackBufferHeight">
            <summary>
            BackBufferHeight 
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.BackBufferWidth">
            <summary>
            BackBufferWidth
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.Logger">
            <summary>
            Logger implementation, can be null for no logging
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.InitialEngineDescription.useMipMapWhenPossible">
            <summary>
            Use MipMap When creating the Render Targets
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:PloobsEngine.Engine.InitialEngineDescription.GraphicsProfile" -->
        <member name="T:PloobsEngine.Engine.SoundMasterOptionDescription">
            <summary>
            Sound Options Desciption
            </summary>
        </member>
        <member name="T:PloobsEngine.Engine.EngineStuff">
            <summary>
            Engine Entry point
            </summary>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.#ctor(Microsoft.Xna.Framework.SharedGraphicsDeviceManager,Microsoft.Xna.Framework.Content.ContentManager,PloobsEngine.Engine.InitialEngineDescription@)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Engine.EngineStuff"/> class.
            </summary>        
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.GetEngineDescription">
            <summary>
            Gets the engine description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.ApplyEngineDescription(PloobsEngine.Engine.InitialEngineDescription@)">
            <summary>
            Applies the engine description.
            NOT RECOMENDED IN WP7 + XNA
            </summary>
            <param name="initialDescription">The initial description.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.GetSoundMasterOptionDescription">
            <summary>
            Gets the sound master option description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.SetSoundMasterOptionDescription(PloobsEngine.Engine.SoundMasterOptionDescription@)">
            <summary>
            Sets the sound master option description.
            </summary>
            <param name="soundMasterOptionDescription">The sound master option description.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.LoadContent">
            <summary>
            Load the content
            </summary>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.AddComponent(PloobsEngine.Components.IComponent)">
            <summary>
            Adds the component.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.RemoveComponent(System.String)">
            <summary>
            Removes the component by name
            </summary>
            <param name="componentName">Name of the component.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.GetComponent``1(System.String)">
            <summary>
            Gets the component by name.
            </summary>
            <typeparam name="T">Component type</typeparam>
            <param name="componentName">Name of the component.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.HasComponent(System.String)">
            <summary>
            Determines whether the specified component name exist.
            </summary>
            <param name="componentName">Name of the component.</param>
            <returns>
              <c>true</c> if the specified component name has component; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.ShowMissingRequirementMessage(System.Exception)">
            <summary>
            This is used to display an error message if there is no suitable graphics device or sound card.
            </summary>
            <param name="exception">The exception to display.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.LeaveScene(System.Boolean)">
            <summary>
            Remove All Screens and stop the timer
            </summary>
            <param name="removeComponents"></param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.StartScene(PloobsEngine.SceneControl.IScreen,Microsoft.Phone.Controls.PhoneApplicationPage)">
            <summary>
            Add a new scene to the Engine
            REMOVE ALL PREVIOUS ONES
            </summary>
            <param name="Screen">The screen.</param>
            <param name="PhoneApplicationPage">The phone application page.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the engine, called by XNA
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:PloobsEngine.Engine.EngineStuff.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Reference page contains code sample.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.#ctor(PloobsEngine.Physic2D.I2DPhysicWorld,PloobsEngine.Particles.IParticleManager,PloobsEngine.SceneControl._2DScene.Culler.I2DCuller)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.IWorld"/> class.
            </summary>
            <param name="PhysicWorld">The physic world.</param>
            <param name="particleManager">The particle manager.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.AddObject(PloobsEngine.SceneControl._2DScene.I2DObject)">
            <summary>
            Adds an object to the world.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.ContainsObject(PloobsEngine.SceneControl._2DScene.I2DObject)">
            <summary>
            Contains the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.RemoveObject(PloobsEngine.SceneControl._2DScene.I2DObject)">
            <summary>
            Removes an object from the world.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.UpdateWorld(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the world.
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.AddDummy(PloobsEngine.SceneControl.IDummy)">
            <summary>
            Add a Dummy to the world
            Its like a position, 
            usefull to serializable position from a world editor
            </summary>
            <param name="dummy">The dummy.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.RemoveDummy(PloobsEngine.SceneControl.IDummy)">
            <summary>
            Removes the dummy.
            </summary>
            <param name="dummy">The dummy.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.AddSoundEmitter(PloobsEngine.Audio.ISoundEmitter2D,System.Boolean)">
            <summary>
            Adds the sound emitter.
            </summary>
            <param name="em">The em.</param>
            <param name="play">if set to <c>true</c> [play].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DWorld.RemoveSoundEmitter(PloobsEngine.Audio.ISoundEmitter2D)">
            <summary>
            Removes the sound emitter.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.GraphicsInfo">
            <summary>
            Gets or sets the graphics info.
            </summary>
            <value>
            The graphics info.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.GraphicsFactory">
            <summary>
            Gets or sets the graphics factory.
            </summary>
            <value>
            The graphics factory.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.PhysicWorld">
            <summary>
            Gets or sets the physic world.
            </summary>
            <value>
            The physic world.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.Dummies">
            <summary>
            Gets all the dummyes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.Objects">
            <summary>
            Gets the objects.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DWorld.SoundEmiters2D">
            <summary>
            Gets the objects.
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.LocalityQueryDB">
            <summary>
            This structure represents the spatial database.  Typically one of
            these would be created, by a call to lqCreateDatabase, for a given
            application.
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.LocalityQueryDB.ClientProxy">
            <summary>
            This structure is a proxy for (and contains a pointer to) a client
            (application) obj in the spatial database.  One of these exists
            for each client obj.  This might be included within the
            structure of a client obj, or could be allocated separately.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.IVehicle.Acceleration">
            <summary>
            Gets the acceleration of the vehicle.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.Bepu.BepuEntityObject">
            <summary>
            Base class for Bepu entities
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.SetMaterialDescription(PloobsEngine.Physics.MaterialDescription)">
            <summary>
            Sets the material description.
            </summary>
            <param name="materialDescription">The material description.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.GetMaterialDescription">
            <summary>
            Gets the material description.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.RecoverIPhysicObjectFromEntity(BEPUphysics.Entities.Entity)">
            <summary>
            [Utility] Recovers the physic object from entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.RecoverObjectFromEntity(BEPUphysics.Entities.Entity)">
            <summary>
            [Utility] Recovers the object from entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.RecoverObjectFromCollidable(BEPUphysics.Collidables.Collidable)">
            <summary>
            [Utility] Recovers the object from collidable.
            </summary>
            <param name="collidable">The collidable.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.RecoverObjectFromBroadPhase(BEPUphysics.BroadPhaseSystems.BroadPhaseEntry)">
            <summary>
            Recovers iobject from broad phase entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.RecoverIPhysicObjectFromBroadPhase(BEPUphysics.BroadPhaseSystems.BroadPhaseEntry)">
            <summary>
            Recovers physicobject from broad phase entry.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.BepuEntityObject.#ctor(PloobsEngine.Physics.MaterialDescription,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.BepuEntityObject"/> class.
            </summary>
            <param name="md">The md.</param>
            <param name="mass">The mass.</param>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.Scale">
            <summary>
            Gets or sets the scale.
            CARE USING THIS, the scale will be uniform to all axis
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.FaceVector">
            <summary>
            Vector pointing to the front
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.WorldMatrix">
            <summary>
            Gets the world matrix.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.Velocity">
            <summary>
            Gets or sets the velocity.
            </summary>
            <value>
            The velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.ObjectOwner">
            <summary>
            Gets or sets the IObject owner.
            </summary>
            <value>
            The IObject owner.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.BepuEntityObject.BoundingBox">
            <summary>
            Gets the bounding box IN WORLD COORDINATES
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.collisionPairCollector">
            <summary>
            A box positioned relative to the character's body used to identify collision pairs with nearby objects that could be possibly stood upon.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.collisionPairCollectorPositionOffset">
            <summary>
            The displacement vector from the center of the character body capsule to the center of the collision pair collector box entity.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.rayOriginOffset">
            <summary>
            The displacement vector from the center of the character body capsule to the origin of the ray used to find supports.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.supportHeight">
            <summary>
            The distance above the ground that the bottom of the character's body floats.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.Acceleration">
            <summary>
            Rate of increase in the character's speed in the movementDirection.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.Body">
            <summary>
            The character's physical representation that handles iteractions with the environment.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.HasTraction">
            <summary>
            Whether or not the character is currently standing on anything that can be walked upon.
            False if there exists no support or the support is too heavily sloped, otherwise true.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.IsSupported">
            <summary>
            Whether or not the character is currently standing on anything.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.JumpSpeed">
            <summary>
            Initial vertical speed when jumping.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.MaxSlope">
            <summary>
            The maximum slope under which walking forces can be applied.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.MaxSpeed">
            <summary>
            Maximum speed in the movementDirection that can be attained.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.MovementDirection">
            <summary>
            Normalized direction which the character tries to move.
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.SlidingDeceleration">
            <summary>
            Deceleration applied to oppose horizontal movement when the character does not have a steady foothold on the ground (hasTraction == false).
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.Bepu.CharacterController.TractionDeceleration">
            <summary>
            Deceleration applied to oppose uncontrolled horizontal movement when the character has a steady foothold on the ground (hasTraction == true).
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.#ctor(Microsoft.Xna.Framework.Vector3,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Constructs a simple character controller.
            </summary>
            <param name="position">Location to initially place the character.</param>
            <param name="characterHeight">The height of the character.</param>
            <param name="characterWidth">The diameter of the character.</param>
            <param name="supportHeight">The distance above the ground that the bottom of the character's body floats.</param>
            <param name="mass">Total mass of the character.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.BEPUphysics#UpdateableSystems#IEndOfTimeStepUpdateable#Update(System.Single)">
            <summary>
            Handles the updating of the character.  Called by the owning space object when necessary.
            </summary>
            <param name="dt">Simulation seconds since the last update.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.FindSupport(BEPUphysics.Entities.Entity@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,System.Single@)">
            <summary>
            Locates the closest support entity by performing a raycast at collected candidates.
            </summary>
            <param name="supportEntity">The closest supporting entity.</param>
            <param name="supportLocation">The support location where the ray hit the entity.</param>
            <param name="supportNormal">The normal at the surface where the ray hit the entity.</param>
            <param name="supportDistance">Distance from the character to the support location.</param>
            <returns>Whether or not a support was located.</returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.IsSupportSlopeWalkable(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Determines if the ground supporting the character is sloped gently enough to allow for normal walking.
            </summary>
            <param name="supportNormal">Normal of the surface being stood upon.</param>
            <returns>Whether or not the slope is walkable.</returns>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.Support(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Maintains the position of the character's body above the ground.
            </summary>
            <param name="supportLocationVelocity">Velocity of the support point connected to the supportEntity.</param>
            <param name="supportNormal">The normal at the surface where the ray hit the entity.</param>
            <param name="supportDistance">Distance from the character to the support location.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.HandleHorizontalMotion(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Manages movement acceleration, deceleration, and sliding.
            </summary>
            <param name="supportLocationVelocity">Velocity of the support point connected to the supportEntity.</param>
            <param name="supportNormal">The normal at the surface where the ray hit the entity.</param>
            <param name="dt">Timestep of the simulation.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.Jump">
            <summary>
            If the character has a support, it leaps into the air based on its jumpSpeed.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.Activate">
            <summary>
            Activates the character, adding its components to the space. 
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.Deactivate">
            <summary>
            Deactivates the character, removing its components from the space.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.OnAdditionToSpace(BEPUphysics.ISpace)">
            <summary>
            Called by the engine when the character is added to the space.
            Activates the character.
            </summary>
            <param name="newSpace">Space to which the character was added.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.CharacterController.OnRemovalFromSpace(BEPUphysics.ISpace)">
            <summary>
            Called by the engine when the character is removed from the space.
            Deactivates the character.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.CharacterController.Position">
            <summary>
            Gets and sets the position of the character.
            </summary>
        </member>
        <member name="T:PloobsEngine.Commands.ICommand">
            <summary>
            Command Pattern
            Its a Class that encapsulates a function call
            </summary>
        </member>
        <member name="M:PloobsEngine.Commands.ICommand.execute">
            <summary>
            Executes the command Call.
            </summary>
        </member>
        <member name="M:PloobsEngine.Commands.ICommand.setTarget(System.Object)">
            <summary>
            Sets the command target.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.Commands.ICommand.TargetName">
            <summary>
            Gets the name of the command target.
            </summary>
            <value>
            The name of the target.
            </value>
        </member>
        <member name="T:PloobsEngine.Events.SimpleEvent">
            <summary>
            Evento Simples com alvos simples
            </summary>
        </member>
        <member name="T:PloobsEngine.Events.IEvent`1">
            <summary>
            Coloca um objeto em uma mensagem e envia para quem tiver interessado
            Content eh o conteudo (objeto acima mencionado)
            </summary>
        </member>
        <member name="T:PloobsEngine.Cameras.CameraStatic">
            <summary>
            Static camera
            </summary>
        </member>
        <member name="T:PloobsEngine.Cameras.ICamera">
            <summary>
            Specification of a camera
            </summary>
        </member>
        <member name="M:PloobsEngine.Cameras.ICamera.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates .
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Hasmoved">
            <summary>
            Gets a value indicating whether this <see cref="T:PloobsEngine.Cameras.ICamera"/> has moved.
            </summary>
            <value>
              <c>true</c> if hasmoved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Up">
            <summary>
            Gets or sets up vector.
            </summary>
            <value>
            Up.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
            <value>
            The field of view.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.AspectRatio">
            <summary>
            Gets or sets the aspect ratio.
            </summary>
            <value>
            The aspect ratio.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.NearPlane">
            <summary>
            Gets or sets the near plane.
            </summary>
            <value>
            The near plane.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.FarPlane">
            <summary>
            Gets or sets the far plane.
            </summary>
            <value>
            The far plane.
            </value>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.View">
            <summary>
            Gets the view.
            </summary>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Projection">
            <summary>
            Gets the projection.
            </summary>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.ViewProjection">
            <summary>
            Gets the view projection.
            </summary>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.BoundingFrustum">
            <summary>
            Gets the bounding frustum.
            </summary>
        </member>
        <member name="P:PloobsEngine.Cameras.ICamera.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraStatic.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Static Camera Constructor
            </summary>
            <param name="position">Position</param>
            <param name="Target">Target Vector (Used to create the view matriz - LookAt method)</param>
        </member>
        <member name="M:PloobsEngine.IA.WaypointHandler.Clear">
            <summary>
            ReInicia a Instancia do handler
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.WaypointHandler.LoadUnconnectedWaypoints(System.String)">
            <summary>
            Loads the unconnected waypoints.
            If it is connected, it will be unconnected
            </summary>
            <param name="FileName">Name of the file.</param>
        </member>
        <member name="T:PloobsEngine.Modelo.SimpleModel">
            <summary>
            Implementation of the most simple Model in the engine
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.SimpleModel.#ctor(PloobsEngine.Engine.GraphicFactory,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.SimpleModel"/> class.
            </summary>
            <param name="factory">The graphic factory.</param>
            <param name="modelName">Name of the model.</param>
            <param name="diffuseTextureName">Name of the diffuse texture.</param>
            <param name="bumpTextureName">Name of the bump texture.</param>
            <param name="specularTextureName">Name of the specular texture.</param>
            <param name="glowTextureName">Name of the glow texture.</param>
            <param name="CallLoadContent">if set to <c>true</c> [call load content].</param>
        </member>
        <member name="T:PloobsEngine.Input.TurnOffInputMaskCommand">
            <summary>
            Turn n Input Mask OFF
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.TurnOffInputMaskCommand.#ctor(PloobsEngine.Input.InputMask)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Input.TurnOffInputMaskCommand"/> class.
            </summary>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:PloobsEngine.Input.TurnOffInputMaskCommand.execute">
            <summary>
            Executes the command Call.
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.TurnOffInputMaskCommand.setTarget(System.Object)">
            <summary>
            Sets the command target.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.Input.TurnOffInputMaskCommand.TargetName">
            <summary>
            Gets the name of the command target.
            </summary>
            <value>
            The name of the target.
            </value>
        </member>
        <member name="T:Bnoerj.AI.Steering.LocalSpace">
            <summary>
            LocalSpaceMixin is a mixin layer, a class template with a paramterized base
            class.  Allows "LocalSpace-ness" to be layered on any class.
            </summary>
        </member>
        <member name="F:Bnoerj.AI.Steering.SteerLibrary.hisPositionAtNearestApproach">
            XXX globals only for the sake of graphical annotation
        </member>
        <member name="T:PloobsEngine.Physics.PhysicObjectTypes">
            <summary>
            Physic Types allowed
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.MobilePhysicObject">
            <summary>
            Mobile Physic Obj
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.TERRAIN">
            <summary>
            Terrain
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.DETECTOROBJECT">
            <summary>
            Detector object like a trigger, dont has physic part
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.COMPOUNDOBJECT">
            <summary>
            Compound (lots of shapes)
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.CYLINDEROBJECT">
            <summary>
            Cilinder
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.BOXOBJECT">
            <summary>
            Box
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.CAROBJECT">
            <summary>
            Car
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.CAPSULEOBJECT">
            <summary>
            Capsule
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.CHARACTEROBJECT">
            <summary>
            Character
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.PLANEOBJECT">
            <summary>
            Plane
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.SPHEREOBJECT">
            <summary>
            Sphere
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.TRIANGLEMESHOBJECT">
            <summary>
            Triangle Mesh
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.HEIGHMAPOBJECT">
            <summary>
            HeightMap
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.GHOST">
            <summary>
            Not added to physicWorld,
            cant colide, cant be detected by raycast or triggers
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.SPECIALIZEDMOVER">
            <summary>
            Object that moves kinematicaly
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.OTHER">
            <summary>
            None of those before
            </summary>
        </member>
        <member name="F:PloobsEngine.Physics.PhysicObjectTypes.NONE">
            <summary>
            Should not be used, here for compatibility
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.IPhysicWorld">
            <summary>
            Physic Object Specification
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.DebugDrawn(Microsoft.Xna.Framework.GameTime,PloobsEngine.Cameras.ICamera)">
            <summary>
            Draw the physic world in debug mode.
            </summary>
            <param name="gt">The gt.</param>
            <param name="cam">The cam.</param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates 
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.AddObject(PloobsEngine.Physics.IPhysicObject)">
            <summary>
            Adds the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.RemoveObject(PloobsEngine.Physics.IPhysicObject)">
            <summary>
            Removes the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.AddConstraint(PloobsEngine.Physic.Constraints.IPhysicConstraint)">
            <summary>
             Adds the constraint
            </summary>
            <param name="ctn"></param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.RemoveConstraint(PloobsEngine.Physic.Constraints.IPhysicConstraint)">
            <summary>
            Removes the constraints
            </summary>
            <param name="ctn"></param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.SegmentIntersect(Microsoft.Xna.Framework.Ray,System.Func{PloobsEngine.Physics.IPhysicObject,System.Boolean},System.Single)">
            <summary>
            Raycast
            </summary>
            <param name="raio">The raio.</param>
            <param name="method">The method.</param>
            <param name="maxDistance">The max distance.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.DetectCollisions(PloobsEngine.Physics.IPhysicObject,System.Collections.Generic.List{PloobsEngine.Physics.IPhysicObject})">
            <summary>
            Detects the collisions of a physic object
            </summary>
            <param name="po">The po.</param>
            <param name="resp">The resp.</param>
        </member>
        <member name="M:PloobsEngine.Physics.IPhysicWorld.GetPhysicsObjectsInRange(PloobsEngine.Physics.IPhysicObject,System.Single,PloobsEngine.Physics.CullerConditionAvaliator{PloobsEngine.Physics.IPhysicObject,PloobsEngine.SceneControl.IObject},System.Collections.Generic.List{PloobsEngine.Physics.IPhysicObject})">
            <summary>
            Get the objects near the object passed as parameter
            </summary>
            <param name="po">The po.</param>
            <param name="distance">The distance.</param>
            <param name="CullerAvaliator">The culler avaliator.</param>
            <param name="resp">The resp.</param>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicWorld.isDebugDraw">
            <summary>
            Gets or sets a value indicating whether this instance is debug draw.
            </summary>
            <value>
            	<c>true</c> if this instance is debug draw; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicWorld.PhysicObjects">
            <summary>
            Gets the physic objects.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.IPhysicWorld.PhysicConstraints">
            <summary>
            Gets the physic constraints.
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.QuadRender">
            <summary>
            Helper class to render full screen quads
            VertexPositionTexture
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.QuadRender.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Loads the quad.
            </summary>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.QuadRender.DrawQuad(Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Draws the quad.
            </summary>
            <param name="effect">The effect.</param>
        </member>
        <member name="T:PloobsEngine.Modelo.ModelBuilderHelper">
            <summary>
            Helper to extract Information from XNA MOdels
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.ModelBuilderHelper.Extract(Microsoft.Xna.Framework.Graphics.Model,PloobsEngine.Modelo.BatchInformation[][]@)">
            <summary>
            Creaters a BATCHInformation from a xna Model
            </summary>
            <param name="model">The model.</param>
            <param name="batchInformationS">The batch information S.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.ModelBuilderHelper.Extract(Microsoft.Xna.Framework.Matrix[],Microsoft.Xna.Framework.Graphics.ModelMeshPart,PloobsEngine.Modelo.BatchInformation@)">
            <summary>
            Creates a BatchInformation from a XNA ModelMesh
            </summary>
            <param name="BonesAbsoluteTransforms">The bones absolute transforms.</param>
            <param name="mesh">The mesh.</param>
            <param name="batchInformationS">The batch information S.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.ModelBuilderHelper.ExtractModelMeshPartData(Microsoft.Xna.Framework.Graphics.ModelMeshPart,Microsoft.Xna.Framework.Matrix@,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector3},System.Collections.Generic.List{System.Int32})">
            <summary>
            Extracts the model mesh part data.
            </summary>
            <param name="meshPart">The mesh part.</param>
            <param name="transform">The transform.</param>
            <param name="vertices">The vertices.</param>
            <param name="indices">The indices.</param>
        </member>
        <member name="T:PloobsEngine.Modelo.OnTextureChange">
            <summary>
            Called when the texture change
            </summary>
            <param name="type">The type.</param>
            <param name="model">The model.</param>
        </member>
        <member name="T:PloobsEngine.Modelo.TextureType">
            <summary>
            Textures Types avaliable
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.ENVIRONMENT">
            <summary>
            EnvironmentMap
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.DIFFUSE">
            <summary>
            Diffuse
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.SPECULAR">
            <summary>
            Specular
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.BUMP">
            <summary>
            Bump
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.GLOW">
            <summary>
            GLow
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.PARALAX">
            <summary>
            Paralax
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.RELIEF">
            <summary>
            Reliefe Mapping (Not used yet)
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.MULTITEX1">
            <summary>
            Multitex used in Terrain
            can be used anywhere
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.MULTITEX2">
            <summary>
            Multitex used in terrain
            can be used anywhere
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.MULTITEX3">
            <summary>
            Multitex used in terrain
            can be used anywhere
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.MULTITEX4">
            <summary>
            Multitex used in terrain
            can be used anywhere
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.TextureType.HEIGHTMAP">
            <summary>
            HEIGHTMAP, can used anywhere
            </summary>
        </member>
        <member name="T:PloobsEngine.Input.InputAdvanced">
            <summary>
            Component responsible for processing Keyboard and Mouse 
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.InputAdvanced.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Input.InputAdvanced"/> class.
            </summary>
            <param name="es">The es.</param>
        </member>
        <member name="M:PloobsEngine.Input.InputAdvanced.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:PloobsEngine.Input.InputAdvanced.getMyName">
            <summary>
            The name of the reciever
            MUST BE UNIQUE
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Input.InputAdvanced.ComponentType">
            <summary>
            Gets the type of the component type.
            </summary>
            <value>
            The type of the component.
            </value>
        </member>
        <member name="T:PloobsEngine.Input.BindAction">
            <summary>
            Possibles Binding Options
            </summary>
        </member>
        <member name="F:PloobsEngine.Input.BindAction.ADD">
            <summary>
            add a bind
            </summary>
        </member>
        <member name="F:PloobsEngine.Input.BindAction.REMOVE">
            <summary>
            Remove a bind
            </summary>
        </member>
        <member name="T:PloobsEngine.Input.InputMask">
            <summary>
            Input Chanels that can be used
            When you register a Command, it will be bind to a mask, you can turn the mask of and all the binds of this mask are 
            turned off, you can turn a mask on and ....
            Usefull When you have Menus and Screens, and you need to change between then, just set the corresponding inputs
            to diferent masks and turn one on and the other off when necessary
            </summary>
        </member>
        <member name="F:PloobsEngine.Input.InputMask.GALL">
            <summary>
            All Binds ON
            </summary>
        </member>
        <member name="F:PloobsEngine.Input.InputMask.GNONE">
            <summary>
            NONE BINDS ON
            </summary>
        </member>
        <member name="F:PloobsEngine.Input.InputMask.GSYSTEM">
            <summary>
            ALWAYS ON, no matter what the mask forced
            </summary>
        </member>
        <member name="T:PloobsEngine.DataStructure.CircularList`1">
            <summary>
            Circular List
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.#ctor(System.Int32)">
            <summary>
            Constructor that initializes the list with the 
            required number of items.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.Next">
            <summary>
            Advances to the next item or wraps to the first item.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.Clear">
            <summary>
            Clears the list, resetting the current index to the 
            beginning of the list and flagging the collection as unloaded.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.SetAll(`0)">
            <summary>
            Sets all items in the list to the specified value, resets
            the current index to the beginning of the list and flags the
            collection as loaded.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.RangeCheck(System.Int32)">
            <summary>
            Internal indexer range check helper.  Throws
            ArgumentOutOfRange exception if the index is not valid.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
              </exception>
        </member>
        <member name="M:PloobsEngine.DataStructure.CircularList`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
              </exception>
        </member>
        <member name="P:PloobsEngine.DataStructure.CircularList`1.Value">
            <summary>
            Gets/sets the item value at the current index.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.CircularList`1.Count">
            <summary>
            Returns the count of the number of loaded items, up to
            and including the total number of items in the collection.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.CircularList`1.Length">
            <summary>
            Returns the length of the items array.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.CircularList`1.Item(System.Int32)">
            <summary>
            Gets/sets the value at the specified index.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.CircularList`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
              </returns>
        </member>
        <member name="T:Bnoerj.AI.Steering.Pathway">
            <summary>
            Pathway: a pure virtual base class for an abstract pathway in space, as for
            example would be used in path following.
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.IAnnotationService">
            <summary>
            Provides methods to annotate the steering behaviors.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.AddTrail(Bnoerj.AI.Steering.Trail)">
            <summary>
            Adds a Trail.
            </summary>
            <param name="trail"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.RemoveTrail(Bnoerj.AI.Steering.Trail)">
            <summary>
            Removes the specified Trail.
            </summary>
            <param name="trail"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.DrawTrails(Bnoerj.AI.Steering.IDraw)">
            <summary>
            Draws all registered Trails.
            </summary>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.Line(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws an opaque colored line segment between two locations in space.
            </summary>
            <param name="startPoint">The start point of the line.</param>
            <param name="endPoint">The end point of the line.</param>
            <param name="color">The color of the line.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.CircleXZ(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a circle on the XZ plane.
            </summary>
            <param name="radius">The radius of the circle.</param>
            <param name="center">The center of the circle.</param>
            <param name="color">The color of the circle.</param>
            <param name="segments">The number of segments to use to draw the circle.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.DiskXZ(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a disk on the XZ plane.
            </summary>
            <param name="radius">The radius of the disk.</param>
            <param name="center">The center of the disk.</param>
            <param name="color">The color of the disk.</param>
            <param name="segments">The number of segments to use to draw the disk.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.Circle3D(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a circle perpendicular to the given axis.
            </summary>
            <param name="radius">The radius of the circle.</param>
            <param name="center">The center of the circle.</param>
            <param name="axis">The axis of the circle.</param>
            <param name="color">The color of the circle.</param>
            <param name="segments">The number of segments to use to draw the circle.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.Disk3D(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a disk perpendicular to the given axis.
            </summary>
            <param name="radius">The radius of the disk.</param>
            <param name="center">The center of the disk.</param>
            <param name="axis">The axis of the disk.</param>
            <param name="color">The color of the disk.</param>
            <param name="segments">The number of segments to use to draw the disk.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.CircleOrDiskXZ(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32,System.Boolean)">
            <summary>
            Draws a circle (not filled) or disk (filled) on the XZ plane.
            </summary>
            <param name="radius">The radius of the circle/disk.</param>
            <param name="center">The center of the circle/disk.</param>
            <param name="color">The color of the circle/disk.</param>
            <param name="segments">The number of segments to use to draw the circle/disk.</param>
            <param name="filled">Flag indicating whether to draw a disk or circle.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.CircleOrDisk3D(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32,System.Boolean)">
            <summary>
            Draws a circle (not filled) or disk (filled) perpendicular to the given axis.
            </summary>
            <param name="radius">The radius of the circle/disk.</param>
            <param name="center">The center of the circle/disk.</param>
            <param name="axis">The axis of the circle/disk.</param>
            <param name="color">The color of the circle/disk.</param>
            <param name="segments">The number of segments to use to draw the circle/disk.</param>
            <param name="filled">Flag indicating whether to draw a disk or circle.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.CircleOrDisk(System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws a circle (not filled) or disk (filled) perpendicular to the given axis.
            </summary>
            <param name="radius">The radius of the circle/disk.</param>
            <param name="axis">The axis of the circle/disk.</param>
            <param name="center">The center of the circle/disk.</param>
            <param name="color">The color of the circle/disk.</param>
            <param name="segments">The number of segments to use to draw the circle/disk.</param>
            <param name="filled">Flag indicating whether to draw a disk or circle.</param>
            <param name="in3d">Flag indicating whether to draw the disk/circle in 3D or the XZ plane.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.AvoidObstacle(System.Single)">
            <summary>
            Called when steerToAvoidObstacles decides steering is required.
            </summary>
            <param name="minDistanceToCollision"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.PathFollowing(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Called when steerToFollowPath decides steering is required.
            </summary>
            <param name="future"></param>
            <param name="onPath"></param>
            <param name="target"></param>
            <param name="outside"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.AvoidCloseNeighbor(Bnoerj.AI.Steering.IVehicle,System.Single)">
            <summary>
            Called when steerToAvoidCloseNeighbors decides steering is required.
            </summary>
            <param name="other"></param>
            <param name="additionalDistance"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.AvoidNeighbor(Bnoerj.AI.Steering.IVehicle,System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Called when steerToAvoidNeighbors decides steering is required.
            </summary>
            <param name="threat"></param>
            <param name="steer"></param>
            <param name="ourFuture"></param>
            <param name="threatFuture"></param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.VelocityAcceleration(Bnoerj.AI.Steering.IVehicle)">
            <summary>
            Draws lines from the vehicle's position showing its velocity and acceleration.
            </summary>
            <param name="vehicle">The vehicle to annotate.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.VelocityAcceleration(Bnoerj.AI.Steering.IVehicle,System.Single)">
            <summary>
            Draws lines from the vehicle's position showing its velocity and acceleration.
            </summary>
            <param name="vehicle">The vehicle to annotate.</param>
            <param name="maxLength">The maximum length for the acceleration and velocity lines.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.IAnnotationService.VelocityAcceleration(Bnoerj.AI.Steering.IVehicle,System.Single,System.Single)">
            <summary>
            Draws lines from the vehicle's position showing its velocity and acceleration.
            </summary>
            <param name="vehicle">The vehicle to annotate.</param>
            <param name="maxLengthAcceleration">The maximum length for the acceleration line.</param>
            <param name="maxLengthVelocity">The maximum length for the velocity line.</param>
        </member>
        <member name="P:Bnoerj.AI.Steering.IAnnotationService.IsEnabled">
            <summary>
            Indicates whether annotation is enabled.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.Bepu.MobileMeshObject">
            <summary>
            Dynamic Mesh Physic Object
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.MobileMeshObject.#ctor(PloobsEngine.Modelo.IModelo,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3,PloobsEngine.Physics.MaterialDescription,BEPUphysics.CollisionShapes.MobileMeshSolidity,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.MobileMeshObject"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="pos">The pos.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="materialDescription">The material description.</param>
            <param name="MobileMeshSolidity">The mobile mesh solidity.</param>
            <param name="mass">The mass.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.MobileMeshObject.#ctor(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3,PloobsEngine.Physics.MaterialDescription,BEPUphysics.CollisionShapes.MobileMeshSolidity,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.MobileMeshObject"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="pos">The pos.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="materialDescription">The material description.</param>
            <param name="MobileMeshSolidity">The mobile mesh solidity.</param>
            <param name="mass">The mass.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.MobileMeshObject.ExtractData(Microsoft.Xna.Framework.Vector3[]@,System.Int32[]@,PloobsEngine.Modelo.IModelo)">
            <summary>
            Helper to get the vertex and index List from the model.
            </summary>
            <param name="vert">The vert.</param>
            <param name="ind">The ind.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.MobileMeshObject.ApplyImpulse(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Cant Aply Impulse on Static Object
            </summary>
            <param name="position"></param>
            <param name="force">The force.</param>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.MobileMesh">
            <summary>
            Gets or sets the Mobile mesh.
            </summary>
            <value>
            The MObile mesh.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.PhysicObjectTypes">
            <summary>
            Gets the physic object type.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.FaceVector">
            <summary>
            Vector pointing to the front
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.WorldMatrix">
            <summary>
            Gets the world matrix.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.AngularVelocity">
            <summary>
            Gets or sets the angular velocity.
            </summary>
            <value>
            The angular velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.Velocity">
            <summary>
            Gets velocity. Always Zero cause this object is static
            </summary>
            <value>
            The velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.isMotionLess">
            <summary>
            This object is always motion less
            </summary>
            <value>
            	<c>true</c> if this instance is motion less; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.ObjectOwner">
            <summary>
            Gets or sets the IObject owner.
            </summary>
            <value>
            The IObject owner.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.MobileMeshObject.BoundingBox">
            <summary>
            Gets the bounding box IN WORLD COORDINATES
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo2D.SpriteFarseer.#ctor(PloobsEngine.Engine.GraphicFactory,FarseerPhysics.Common.Vertices,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            
            </summary>
            <param name="factory"></param>
            <param name="vertices"></param>
            <param name="color"></param>
            <param name="isInSimulationUnits"></param>        
        </member>
        <member name="M:PloobsEngine.Modelo2D.SpriteFarseer.#ctor(PloobsEngine.Engine.GraphicFactory,FarseerPhysics.Collision.Shapes.PolygonShape,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            
            </summary>
            <param name="factory"></param>
            <param name="shape"></param>
            <param name="color"></param>
            <param name="isInSimulationUnits"></param>        
        </member>
        <member name="T:PloobsEngine.Loader.ObjectInformation">
            <summary>
            Struct that represents a Model
            By Now, It creates just pieces of a model, 
            IN THE NEXT RELEASE IT WILL CREATE THE FULL MODEL, RETURN AN IMODELO AND A TRANSFORMATION
            </summary>
        </member>
        <member name="M:PloobsEngine.Loader.ObjectInformation.HasTexture(PloobsEngine.Modelo.TextureType)">
            <summary>
            Determines whether this model has the specified texture type.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if the specified type has texture; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:PloobsEngine.Loader.CameraInfo">
            <summary>
            Camera Info
            </summary>
        </member>
        <member name="T:PloobsEngine.Loader.DummyInfo">
            <summary>
            Dummy Info
            </summary>
        </member>
        <member name="T:PloobsEngine.Loader.ModelLoaderData">
            <summary>
            Data that represents a Model Loaded
            </summary>
        </member>
        <member name="P:PloobsEngine.Loader.ModelLoaderData.DummyInfo">
            <summary>
            Gets or sets the dummyinfo list.
            </summary>
            <value>
            The dummy info.
            </value>
        </member>
        <member name="P:PloobsEngine.Loader.ModelLoaderData.CameraInfo">
            <summary>
            Gets or sets the camera info list.
            </summary>
            <value>
            The camera info.
            </value>
        </member>
        <member name="P:PloobsEngine.Loader.ModelLoaderData.LightsInfo">
            <summary>
            Gets or sets the lights info list.
            </summary>
            <value>
            The lights info.
            </value>
        </member>
        <member name="P:PloobsEngine.Loader.ModelLoaderData.ModelMeshesInfo">
            <summary>
            Gets or sets the model meshes info list.
            </summary>
            <value>
            The model meshes info.
            </value>
        </member>
        <member name="T:PloobsEngine.Loader.IModelLoader">
            <summary>
            Specification for Classes that can Load a Model from a file/stream ...
            </summary>
        </member>
        <member name="M:PloobsEngine.Loader.IModelLoader.Load(PloobsEngine.Engine.GraphicFactory,PloobsEngine.Engine.GraphicInfo,System.String)">
            <summary>
            Extract infos about models
            </summary>
            <param name="name">The name of the File - assume that models is in /Models, textures in /Textures and ModelInfos (when needed) in /ModelInfos</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Features.TaskCommand">
            <summary>
            Command that encapsulates a task
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.TaskCommand.#ctor(PloobsEngine.Features.ITask)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Features.TaskCommand"/> class.
            </summary>
            <param name="task">The task.</param>
        </member>
        <member name="M:PloobsEngine.Features.TaskCommand.execute">
            <summary>
            Executes the command Call.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.TaskCommand.setTarget(System.Object)">
            <summary>
            Sets the command target.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.Features.TaskCommand.TargetName">
            <summary>
            Gets the name of the command target.
            </summary>
            <value>
            The name of the target.
            </value>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm">
            <summary>
            The abstract class describing a learning
            algorithm for a neural network
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.nn">
            <summary>
            The neural network
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.ERROR_THRESHOLD">
            <summary>
            Under this threshold value, learning will be
            considered as complete
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.MAX_ITER">
            <summary>
            Max number of iteration to learn data
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.ins">
            <summary>
            Input matrix of data to learn
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.outs">
            <summary>
            output matrix of data to learn
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.iter">
            <summary>
            Number of learning iterations done
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.error">
            <summary>
            Last sum of square errors computed
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.#ctor(PloobsEngine.IA.NeuralNetwork.NeuralNetwork)">
            <summary>
            Learning algorithm constructor
            </summary>
            <param name="n">The neural network to train</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.Learn(System.Single[][],System.Single[][])">
            <summary>
            To train the neuronal network on data.
            inputs[n] represents an input vector of 
            the neural network and expected_outputs[n]
            the expected ouput for this vector. 
            </summary>
            <param name="inputs">the input matrix</param>
            <param name="expected_outputs">the expected output matrix</param>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.N_Network">
            <summary>
            Get the neural network of the learning algorithm
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.Error">
            <summary>
            Get the last square error
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.ErrorTreshold">
            <summary>
            Get or set the maximum sum of square errors value ( >0)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.Iteration">
            <summary>
            Get the current number of learning iterations done
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LearningAlgorithm.MaxIteration">
            <summary>
            Get or set the maximum number of learning iterations.
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm">
            <summary>
            Implementation of stockastic gradient backpropagation
            learning algorithm
            </summary>
            <remarks>
            <code>
            
                                 PROPAGATION WAY IN NN
                               ------------------------->
            
                   o ----- Sj = f(WSj) ----> o ----- Si = f(WSi) ----> o
                 Neuron j                Neuron i                   Neuron k
               (layer L-1)               (layer L)                 (layer L+1)
            
            For the neuron i :
            -------------------
            W[i,j](n+1) = W[i,j](n) + alpha * Ai * Sj + gamma * ( W[i,j](n) - W[i,j](n-1) )
            T[i](n+1) = T[i](n) - alpha * Ai + gamma * ( T[i](n) - T[i](n-1) )
            
            	with :
            			Ai = f'(WSi) * (expected_output_i - si) for output layer
            			Ai = f'(WSi) * SUM( Ak * W[k,i] )       for others
            
            </code>
            NOTE : This is stockastic version of the algorithm because the error
            is back-propaged after every learning case. There is another version
            of this algorithm which works on global error.
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.alpha">
            <summary>
            the alpha parameter of the algorithm
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.gamma">
            <summary>
            the gamma parameter of the algorithm
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.e">
            <summary>
            The error vector
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.#ctor(PloobsEngine.IA.NeuralNetwork.NeuralNetwork)">
            <summary>
            Build a new BackPropagation learning algorithm instance
            with alpha = 0,5 and gamma = 0,3
            </summary>
            <param name="nn">The neural network to train</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.Learn(System.Single[][],System.Single[][])">
            <summary>
            To train the neuronal network on data.
            inputs[n] represents an input vector of 
            the neural network and expected_outputs[n]
            the expected ouput for this vector. 
            </summary>
            <param name="inputs">the input matrix</param>
            <param name="expected_outputs">the expected output matrix</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.ComputeA(System.Int32)">
            <summary>
            Compute the "A" parameter for each neuron
            of the network
            </summary>
            <param name="i">the index of the curent training data</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.setWeight(System.Int32)">
            <summary>
            Set new neron's weights
            </summary>
            <param name="i">the index of the curent training data</param>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.Alpha">
            <summary>
            get or set the alpha parameter of the algorithm
            between 0 and 1, must be >0
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.BackPropagationLearningAlgorithm.Gamma">
            <summary>
            get or set the gamma parameter of the algorithm
            (Rumelhart coef)
            between 0 and 1.
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm">
             <summary>
             A genetic learning algorithm
             </summary>
             <remarks>
             This is an aplication of genetic algorithm to train neural networks.
             The population is made of GeneticNeuralNetwork instance which is a
             compact representation of neural network. A genetic neural network
             represent a set of weights and threshold for a particular neural network.
             
             Here is the main loop of the algorithm :
             <code>
            	  Create initial random population of POPULATION_SIZE neural networks
            	   -> Evaluate fitness function (square error on learning values)
            	  |   Select best neural networks
            	  |   Cross selected networks to make new generation
                -- apply mutation operator on new generation
            	  Until error > error_threshold  	   
             </code>
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.rand">
            <summary>
            The random number generator
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.POPULATION_SIZE">
            <summary>
            The population size
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.MUTATION_RATIO">
            <summary>
            The mutation ratio during crossover
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.MAX_MUTATION_AMP">
            <summary>
            Maximum mutation amplitude
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.SELECTION_RATIO">
            <summary>
            The ratio of population selected for crossover
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.population">
            <summary>
            The population of GeneticNeuralNetwork
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.CrossOver(System.Int32,System.Int32)">
            <summary>
            Define the crossover operator for 2 GeneticNeuralNetwork
            </summary>
            <param name="i1">index of mother in population</param>
            <param name="i2">index of father in population</param>
            <returns>the child</returns>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.makeNewGeneration">
            <summary>
            Compute the new generation
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.ComputeErrors">
            <summary>
            Computes square error for each GeneticNeuralNetwork in population
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.#ctor(PloobsEngine.IA.NeuralNetwork.NeuralNetwork)">
            <summary>
            GeneticLearningAlgorithm constructor
            </summary>
            <param name="nn">The neural network to train</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.RandomizePopulation">
            <summary>
            Make a new random population
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.Learn(System.Single[][],System.Single[][])">
            <summary>
            To train the neuronal network on data.
            inputs[n] represents an input vector of 
            the neural network and expected_outputs[n]
            the expected ouput for this vector. 
            </summary>
            <param name="inputs">the input matrix</param>
            <param name="expected_outputs">the expected output matrix</param>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.PopulationSize">
            <summary>
            Get or set the population size
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.MutationRatio">
            <summary>
            Get or set the mutation ratio (between 0 and 100)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.MaxMutationAmplitude">
            <summary>
            Get or set the maximum mutation amplitude
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.SelectionRatio">
            <summary>
            get or set the selection ratio
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.MutationValue">
            <summary>
            Get the random amplitude of a mutation
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.Mute">
            <summary>
            Get a bool with MUTATION_RATIO/100 probability to be true
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.RandSelectionIndex">
            <summary>
            Get a random selected neural network in the population
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.Muted_NeuralNetwork">
            <summary>
            get a muted GeneticNeuralNetwork from the neural network
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork">
            <summary>
            Representation of a neural network for the genetic algorithm
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.genes">
            <summary>
            The genes : all neurons weight and threshold
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.sq_err">
            <summary>
            The global square error of the neuron
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.nn">
            <summary>
            The neural network of the Genetic Neural Network
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.#ctor(PloobsEngine.IA.NeuralNetwork.NeuralNetwork)">
            <summary>
            Build a new Genetic NeuralNetwork from the Neural Network given as parameter
            </summary>
            <param name="n">The neural network model</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.Init">
            <summary>
            Initialize Genetic network from Neural Network
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.setWeights">
            <summary>
            Set Genetic neural network weights to the real neural network
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.CompareTo(System.Object)">
            <summary>
            Compare 2 genetic neural network on their square error
            </summary>
            <param name="other">another neural network</param>
            <returns>the comparative value</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.Item(System.Int32)">
            <summary>
            Get or set the genes value
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.Error">
            <summary>
            Get or set the square error of the Network
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GeneticLearningAlgorithm.GeneticNeuralNetwork.N_Genes">
            <summary>
            Get the number of genes of the Genetic Neural Network
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.Genetic.GenomeComparer">
            <summary>
            Compares genomes by fitness
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.VectorUtils">
            <summary>
            Lots of Vector Helpers
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.Perpendicular2DNormalized(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Return the Perpendicular 2D normalized vector.
            </summary>
            <param name="vx">The base vector.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.ToVector2(Microsoft.Xna.Framework.Vector3)">
            <summary>
            transforms the 3dvector to 2d, 
            throw away the Y component
            Projects to XZ PLANE
            </summary>
            <param name="vec">The vec.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.ToVector3(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Transforms a 2D vector to vector3.
            THE Y COMPONENT IS SET TO 0 -> Vector3(vec.X, 0,vec.Y);
            </summary>
            <param name="vec">The vec.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.ToVector3(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Creates a 3D vector -> Vector3(vec.X, y, vec.Y);
            </summary>
            <param name="vec">The vec.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.FindAngleBetweenTwoVectors2D(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Finds the angle between two vectors2.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.rotateVector2(Microsoft.Xna.Framework.Vector2,System.Double)">
            <summary>
            Rotates the vector by an arbitrary angle
            </summary>
            <param name="vector">Vector to rotate</param>
            <param name="angle">Rotation angle</param>
            <returns>
            The rotated vector
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.FindAngleBetweenTwoVectors2D(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Angle between 2 vectors WITH SIGNAL
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.GetSignedAngleBetween2DVectors(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Find the angle between two vectors. This will not only give the angle difference, but the direction.
            For example, it may give you -1 radian, or 1 radian, depending on the direction. Angle given will be the
            angle from the FromVector to the DestVector, in radians.
            </summary>
            <param name="FromVector">Vector to start at.</param>
            <param name="DestVector">Destination vector.</param>
            <param name="DestVectorsRight">Right vector of the destination vector</param>
            <returns>
            Signed angle, in radians
            </returns>
            <remarks>
            All three vectors must lie along the same plane.
            </remarks>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.UnsignedAngleBetweenTwoV3(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Unsigneds the angle between two v3.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.CalculateDeflection(Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns velocity of deflection
            </summary>
            <param name="CurrentVelocity">Velocity vector if item to be bounced</param>
            <param name="Elasticity">Elasticity of item to be bounced</param>
            <param name="CollisionNormal">Normal vector of plane the item is bouncing off of</param>
            <returns>
            Velocity vector of deflection
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RotateAroundPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Translates a point around an origin
            </summary>
            <param name="point">Point that is going to be translated</param>
            <param name="originPoint">Origin of rotation</param>
            <param name="rotationAxis">Axis to rotate around, this Vector should be a unit vector (normalized)</param>
            <param name="radiansToRotate">Radians to rotate</param>
            <returns>
            Translated point
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.QuaternionToEuler(Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Quaternions to euler.
            </summary>
            <param name="q">The q.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.LookAt(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Calculate the rotation for one vector to face another vector
            </summary>
            <param name="position">The position.</param>
            <param name="lookat">The lookat.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.ParallelComponent(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            return component of vector parallel to a unit basis vector
            IMPORTANT NOTE: assumes "basis" has unit magnitude (length == 1)        
            Parallels the component.
            </summary>
            <param name="vector">The vector.</param>
            <param name="unitBasis">The unit basis.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.PerpendicularComponent(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            return component of vector perpendicular to a unit basis vector
            IMPORTANT NOTE: assumes "basis" has unit magnitude(length==1)
            </summary>
            <param name="vector">The vector.</param>
            <param name="unitBasis">The unit basis.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.TruncateLength(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            clamps the length of a given vector to maxLength.  If the vector is
            shorter its value is returned unaltered, if the vector is longer
            the value returned has length of maxLength and is paralle to the
            original input.
            </summary>
            <param name="vector">The vector.</param>
            <param name="maxLength">Length of the max.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PloobsEngine.Utils.VectorUtils.SetYtoZero(Microsoft.Xna.Framework.Vector3)" -->
        <member name="M:PloobsEngine.Utils.VectorUtils.RotateAboutGlobalY(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            rotate this vector about the global Y (up) axis by the given angle
            </summary>
            <param name="vector">The vector.</param>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RotateAboutGlobalY(Microsoft.Xna.Framework.Vector3,System.Single,System.Single@,System.Single@)">
            <summary>
            version for caching sin/cos computation
            </summary>
            <param name="vector">The vector.</param>
            <param name="angle">The angle.</param>
            <param name="sin">The sin.</param>
            <param name="cos">The cos.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.SphericalWrapAround(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Spherical WrapAround.
            if this position is outside sphere, push it back in by one diameter
            </summary>
            <param name="vector">The vector.</param>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RandomVectorOnUnitRadiusXZDisk">
            <summary>
            Returns a position randomly distributed on a disk of unit radius
            on the XZ (Y=0) plane, centered at the origin.  Orientation will be
            random and length will range between 0 and 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RandomVectorInUnitRadiusSphere">
            <summary>
            Returns a position randomly distributed inside a sphere of unit radius
            centered at the origin.  Orientation will be random and length will range
            between 0 and 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RandomUnitVector">
            <summary>
            Returns a position randomly distributed on the surface of a sphere
            of unit radius centered at the origin.  Orientation will be random
            and length will be 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.RandomUnitVectorOnXZPlane">
            <summary>
            Returns a position randomly distributed on a circle of unit radius
            on the XZ (Y=0) plane, centered at the origin.  Orientation will be
            random and length will be 1
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PloobsEngine.Utils.VectorUtils.LimitDeviationAngleUtility(System.Boolean,Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Vector3)" -->
        <member name="M:PloobsEngine.Utils.VectorUtils.LimitMaxDeviationAngle(Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Enforce an upper bound on the angle by which a given arbitrary vector
            diviates from a given reference direction (specified by a unit basis
            vector).  The effect is to clip the "source" vector to be inside a cone
            defined by the basis and an angle.
            </summary>
            <param name="source">The source.</param>
            <param name="cosineOfConeAngle">The cosine of cone angle.</param>
            <param name="basis">The basis.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.LimitMinDeviationAngle(Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Enforce a lower bound on the angle by which a given arbitrary vector
            diviates from a given reference direction (specified by a unit basis
            vector).  The effect is to clip the "source" vector to be outside a cone
            defined by the basis and an angle.
            </summary>
            <param name="source">The source.</param>
            <param name="cosineOfConeAngle">The cosine of cone angle.</param>
            <param name="basis">The basis.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.DistanceFromLine(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Returns the distance between a point and a line.  The line is defined in
            terms of a point on the line ("lineOrigin") and a UNIT vector parallel to
            the line ("lineUnitTangent")
            </summary>
            <param name="point">The point.</param>
            <param name="lineOrigin">The line origin.</param>
            <param name="lineUnitTangent">The line unit tangent.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.VectorUtils.FindPerpendicularIn3d(Microsoft.Xna.Framework.Vector3)">
            <summary>
            given a vector, return a vector perpendicular to it (note that this
            arbitrarily selects one of the infinitude of perpendicular vectors)
            </summary>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.SceneControl.IObjectAttachment">
            <summary>    
            You can bind one IObjectAtachtment to one IObject
            The IObjectAtachtment method Update will be called everytime 
            the method Update of the object is called
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObjectAttachment.Update(PloobsEngine.SceneControl.IObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the atachment.
            </summary>
            <param name="obj">The obj.</param>
            <param name="gt">The gt.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.IContentManager">
            <summary>
            Specification of a Content Loader
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IContentManager.GetAsset``1(System.String,System.Boolean)">
            <summary>
            Gets the asset.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Input.TurnOnInputMaskCommand">
            <summary>
            Turn a Input Mask On
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.TurnOnInputMaskCommand.#ctor(PloobsEngine.Input.InputMask)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Input.TurnOnInputMaskCommand"/> class.
            </summary>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:PloobsEngine.Input.TurnOnInputMaskCommand.execute">
            <summary>
            Executes the command Call.
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.TurnOnInputMaskCommand.setTarget(System.Object)">
            <summary>
            Sets the command target.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="P:PloobsEngine.Input.TurnOnInputMaskCommand.TargetName">
            <summary>
            Gets the name of the command target.
            </summary>
            <value>
            The name of the target.
            </value>
        </member>
        <member name="T:PloobsEngine.Input.IInput">
            <summary>
            Interface for an Input Processor
            </summary>
        </member>
        <member name="T:PloobsEngine.DataStructure.SerializableDictionary`2">
            <summary>
            XML serializabe dictionary (the .net dictionary is not)
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.DataStructure.SerializableDictionary`2"/> class.
            Serialization purpose
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.DataStructure.SerializableDictionary`2"/> class.
            </summary>
            <param name="dic">The dic.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.Concate(PloobsEngine.DataStructure.SerializableDictionary{`0,`1})">
            <summary>
            Concates the specified dic.
            </summary>
            <param name="dic">The dic.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="F:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.PostEffects">
            <summary>
            List off all PostEffects
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.AddPostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Adds one post effect.
            </summary>
            <param name="postEffect">The post effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.RemovePostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Removes one post effect.
            </summary>
            <param name="postEffect">The post effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.ContainsPostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Determines whether [contains post effect] [the specified post effect].
            </summary>
            <param name="postEffect">The post effect.</param>
            <returns>
              <c>true</c> if [contains post effect] [the specified post effect]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.BeforeFirstExecution(PloobsEngine.SceneControl.RenderHelper,PloobsEngine.SceneControl._2DScene.I2DWorld)">
            <summary>
            Befores the first execution.
            </summary>
            <param name="render">The render.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.ExecuteTechnic(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.SceneControl._2DScene.I2DWorld)">
            <summary>
            Executes the technic.
            </summary>
            <param name="render">The render.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.AfterLoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Called after the All the Engine stuffs are loaded
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.RenderTechnich2D.TechnicName">
            <summary>
            Gets the name of the technic.
            </summary>
            <value>
            The name of the technic.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.ICamera2D.ScreenPortion">
            <summary>
            Piece of the screen seen by the camera
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Camera2D.#ctor(PloobsEngine.Engine.GraphicInfo)">
            <summary>
            The constructor for the Camera2D class.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Camera2D.ResetCamera">
            <summary>
            Resets the camera to default values.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.Camera2D.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Moves the camera forward one timestep.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.Position">
            <summary>
            The current position of the camera.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.MinPosition">
            <summary>
            The furthest up, and the furthest left the camera can go.
            if this value equals maxPosition, then no clamping will be 
            applied (unless you override that function).
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.MaxPosition">
            <summary>
            the furthest down, and the furthest right the camera will go.
            if this value equals minPosition, then no clamping will be 
            applied (unless you override that function).
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.Rotation">
            <summary>
            The current rotation of the camera in radians.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.MinRotation">
            <summary>
            Gets or sets the minimum rotation in radians.
            </summary>
            <value>The min rotation.</value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.MaxRotation">
            <summary>
            Gets or sets the maximum rotation in radians.
            </summary>
            <value>The max rotation.</value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.Zoom">
            <summary>
            The current rotation of the camera in radians.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.Camera2D.TrackingBody">
            <summary>
            the body that this camera is currently tracking. 
            Null if not tracking any.
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.SphericalObstacle">
            <summary>
            SphericalObstacle a simple concrete type of obstacle.
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.IObstacle">
            <summary>
            Obstacle: a pure virtual base class for an abstract shape in space, to be
            used with obstacle avoidance.
            
            XXX this should define generic methods for querying the obstacle shape
            </summary>
        </member>
        <member name="T:PloobsEngine.Material.IShader">
            <summary>
            Base Class For all Shaders
            </summary>
        </member>
        <member name="F:PloobsEngine.Material.IShader.firstTime">
            <summary>
            is fist time that this shader is updated
            </summary>
        </member>
        <member name="F:PloobsEngine.Material.IShader.shaderId">
            <summary>
            Shader ID that the object rendered by this shader will have        
            </summary>
            <remarks>
            This parameter lets the object not be affect by light, or be recovered in a post proccess phase
            </remarks>
        </member>
        <member name="M:PloobsEngine.Material.IShader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.IShader"/> class.
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.IShader.Initialize(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.IShader.PreUpdate(PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Called Once only, before all draws
            </summary>
            <param name="ent">The current entity.</param>
            <param name="lights">All The lights </param>
        </member>
        <member name="M:PloobsEngine.Material.IShader.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Updates this shader
            Called every frame once        
            </summary>
            <param name="ent">The ent.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="M:PloobsEngine.Material.IShader.PreDrawPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera)">
            <summary>
            Called every frame before the draw phase.
            In deferred it is called before the GBUFFER is setted
            </summary>
            <param name="gt">The gt.</param>
            <param name="world">The world.</param>
            <param name="obj">The obj.</param>
            <param name="render">The render.</param>
            <param name="cam">The camera</param>
        </member>
        <member name="M:PloobsEngine.Material.IShader.PosDrawPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Called after the draw phase.
            In deferred its responsible for the Forward Pass, in forward its not called        
            </summary>
            <param name="modelo">The modelo.</param>
            <param name="render">The render.</param>
            <param name="cam">The camera.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="M:PloobsEngine.Material.IShader.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Draw
            </summary>
            <param name="modelo">The modelo.</param>
            <param name="render">The render.</param>
            <param name="cam">The cam.</param>
        </member>
        <member name="P:PloobsEngine.Material.IShader.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.IShader.ShaderId">
            <summary>
            Used to Recover the object in PostProcces
            between 0 and 0.9f it will be illuminated, 
            bigger than 0.9 it wont be
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardEnvironmentShader.Initialize(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="ginfo"></param>
            <param name="factory"></param>
            <param name="obj"></param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardEnvironmentShader.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Draw
            </summary>
            <param name="gt">gametime</param>
            <param name="obj">the obj</param>
            <param name="render">The render.</param>
            <param name="cam">The cam.</param>
            <param name="lights"></param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardEnvironmentShader.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="F:PloobsEngine.Loader.WorldLoader.objects">
            <summary>
            Used to retrieve objects
            </summary>
        </member>
        <member name="T:PloobsEngine.Components.ComponentManager">
            <summary>
            Handles the Components
            </summary>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates 
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.GetPreDraw">
            <summary>
            Gets all the pre draw components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.GetPosDraw">
            <summary>
            Gets all the pos draw components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.GetPosWithDepthDraw">
            <summary>
            Gets the pos with Depth draw.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.PreDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draw the Pre Draw components
            </summary>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.AfterDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draw the Afters draw.
            </summary>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.PosWithDepthDraw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draw the Afters with depth draw.
            </summary>
            <param name="render">The render.</param>
            <param name="gt">The gt.</param>
            <param name="activeView">The active view.</param>
            <param name="activeProjection">The active projection.</param>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.LoadContent(PloobsEngine.Engine.GraphicInfo@)">
            <summary>
            Loads the content.
            </summary>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.HasComponent(System.String)">
            <summary>
            Determines whether the component is already added
            </summary>
            <param name="componentName">Name of the component.</param>
            <returns>
              <c>true</c> if the specified component name has component; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.AddComponent(PloobsEngine.Components.IComponent)">
            <summary>
            Adds the component.
            </summary>
            <param name="comp">The comp.</param>
            <returns>FALSE if the component already exist, false otherwise </returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.GetComponent(System.String)">
            <summary>
            Gets the component.
            </summary>
            <param name="componentName">Name of the component.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.GetComponentsNames">
            <summary>
            Return all the Components Names
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Components.ComponentManager.RemoveComponent(System.String)">
            <summary>
            Removes the component.
            </summary>
            <param name="name">The name.</param>
            <returns>TRUE is the component exist and was remove, false otherwise</returns>
        </member>
        <member name="T:PloobsEngine.Audio.ISoundEmitter3D">
            <summary>
            Generic Sound 3D Emiter 
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter3D.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.Cameras.ICamera)">
            <summary>
            Updates .
            </summary>
            <param name="gt">The gt.</param>
            <param name="camera">The camera.</param>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter3D.Pause">
            <summary>
            Pauses the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter3D.Resume">
            <summary>
            Resumes the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter3D.Play">
            <summary>
            Plays the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter3D.Stop(System.Boolean)">
            <summary>
            Stops the sound
            </summary>
        </member>
        <member name="P:PloobsEngine.Audio.ISoundEmitter3D.State">
            <summary>
            Gets the Sound state.
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.StaticRandom">
            <summary>
            Lots of Random Helpers
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PloobsEngine.Utils.StaticRandom.Random" -->
        <member name="M:PloobsEngine.Utils.StaticRandom.Random(System.Single,System.Single)">
            <summary>
            Returns a float randomly distributed between lowerBound and upperBound
            </summary>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomChoice(System.Single)">
            <summary>
            Return True or false depending of the probability passed in the parameter
            </summary>
            <param name="chanceOfTrue">Entre 0 e 1</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomIntInterval(System.Int32,System.Int32)">
            <summary>
            Random between two parameters
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.PickRandomPoint(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Helper function chooses a random location on a triangle.
            </summary>
            <param name="position1">The position1.</param>
            <param name="position2">The position2.</param>
            <param name="position3">The position3.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomDirection">
            <summary>
            Pick a 3D Random Direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomBetween(System.Double,System.Double)">
            <summary>
            Returns a number between two values.
            </summary>
            <param name="min">Lower bound value</param>
            <param name="max">Upper bound value</param>
            <returns>
            Random number between bounds.
            </returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomColor">
            <summary>
            Return a Random Color
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.StaticRandom.RandomPosition(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Random Position inside a Box
            </summary>
            <param name="minBoxPos">The min box pos.</param>
            <param name="maxBoxPos">The max box pos.</param>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Utils.StaticRandom.RandomInstance">
            <summary>
            Gets or sets the random instance.
            </summary>
            <value>
            The random instance.
            </value>
        </member>
        <member name="T:PloobsEngine.Trigger.BepuTrigger">
            <summary>
            Bepu Implementation of a trigger
            </summary>
        </member>
        <member name="T:PloobsEngine.Trigger.ITrigger">
            <summary>
            Trigger Specification
            </summary>
        </member>
        <member name="P:PloobsEngine.Trigger.ITrigger.Event">
            <summary>
            Gets or sets the event fired when the trigger is activated.
            </summary>
            <value>
            The event.
            </value>
        </member>
        <member name="P:PloobsEngine.Trigger.ITrigger.Name">
            <summary>
            Gets or sets the name of the trigger.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.Trigger.ITrigger.GhostObject">
            <summary>
            Gets or sets the ghost object that gives the SHAPE of the trigger.
            </summary>
            <value>
            The ghost object.
            </value>
        </member>
        <member name="M:PloobsEngine.Trigger.BepuTrigger.#ctor(PloobsEngine.Physics.BepuPhysicWorld,PloobsEngine.Physics.Bepu.TriangleMeshObject,PloobsEngine.Trigger.TriggerEvent,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Trigger creation
            </summary>
            <param name="physicWorld">The physic world.</param>
            <param name="triangleMesh">Triangle mesh representing the Volume of the Trigger</param>
            <param name="evt">Event to be fired</param>
            <param name="fireBeginsTouching">if set to <c>true</c> [fire begins touching].</param>
            <param name="fireEndsTouching">if set to <c>true</c> [fire ends touching].</param>
            <param name="fireBeginsContaining">if set to <c>true</c> [fire begins containing].</param>
            <param name="fireEndsContaining">if set to <c>true</c> [fire ends containing].</param>
        </member>
        <member name="P:PloobsEngine.Trigger.BepuTrigger.ContactEntity">
            <summary>
            Gets the contact entity.
            </summary>
        </member>
        <member name="P:PloobsEngine.Trigger.BepuTrigger.Name">
            <summary>
            Gets or sets the name of the trigger.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.Trigger.BepuTrigger.Event">
            <summary>
            Gets or sets the event fired when the trigger is activated.
            </summary>
            <value>
            The event.
            </value>
        </member>
        <member name="P:PloobsEngine.Trigger.BepuTrigger.GhostObject">
            <summary>
            Gets or sets the ghost object that gives the SHAPE of the trigger.
            </summary>
            <value>
            The ghost object.
            </value>
        </member>
        <member name="T:PloobsEngine.SceneControl.ScreenState">
            <summary>
            Enum describes the screen transition state.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.ScreenState.Active">
            <summary>
            Updates and Draw called (normal operation)
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.ScreenState.Paused">
            <summary>
            Updates is not called
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.ScreenState.Hidden">
            <summary>
            Draw is not called
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.ScreenState.Inactive">
            <summary>
            draw and update not called
            </summary>
        </member>
        <member name="T:PloobsEngine.Light.LightType">
            <summary>
            Light Types
            </summary>
        </member>
        <member name="F:PloobsEngine.Light.LightType.Deferred_Directional">
            <summary>
            Deferred Directional Light
            </summary>
        </member>
        <member name="F:PloobsEngine.Light.LightType.Deferred_Point">
            <summary>
            Deferred Point Light 
            </summary>
        </member>
        <member name="F:PloobsEngine.Light.LightType.Deferred_Spot">
            <summary>
            Deferred Spot Light
            </summary>
        </member>
        <member name="F:PloobsEngine.Light.LightType.OTHER">
            <summary>
            None of these
            </summary>
        </member>
        <member name="T:PloobsEngine.Engine.GraphicFactory">
            <summary>
            Creates everything related to Graphics.
            FunctionNameConvention:
            Use Get... To load something and Create... to create something
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl._2DScene.BeingRemoved">
            <summary>
            Called when the object is being removed
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl._2DScene.OnUpdate">
            <summary>
            Called on every update
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl._2DScene.OnRecieveMessage">
            <summary>
            called when the object recieves a message
            </summary>
            <param name="Reciever">The reciever.</param>
            <param name="mes">The mes.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl._2DScene.OnHasMoved">
            <summary>
            Called when the object moves
            </summary>
            <param name="Reciever">The reciever.</param>
        </member>
        <member name="T:PloobsEngine.MessageSystem.IRecieveMessageEntity">
            <summary>
            Entity that can recieve a message
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.IRecieveMessageEntity.HandleThisMessageType(PloobsEngine.MessageSystem.SenderType)">
            <summary>
            Handles a message from determined sender type.
            </summary>
            <param name="type">Sender type.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.MessageSystem.IRecieveMessageEntity.HandleMessage(PloobsEngine.MessageSystem.Message)">
            <summary>
            Handles the message.
            </summary>
            <param name="mes">The mes.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.UpdateObject(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the object.
            </summary>
            <param name="gt">The gt.</param>
            <param name="cam">The cam.</param>
            <param name="luzes">The luzes.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.HandleThisMessageType(PloobsEngine.MessageSystem.SenderType)">
            <summary>
            Handles a message from determined sender type.
            </summary>
            <param name="type">Sender type.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.HandleMessage(PloobsEngine.MessageSystem.Message)">
            <summary>
            Handles the message.
            </summary>
            <param name="mes">The mes.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.RemoveThisObject">
            <summary>
            Removes this object.
            Called internally
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>
            the id
            </returns>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.I2DObject.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="E:PloobsEngine.SceneControl._2DScene.I2DObject.OnRecieveMessage">
            <summary>
            Occurs when [on recieve message].
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl._2DScene.I2DObject.OnBeingRemoved">
            <summary>
            Called when this object is removed from the world
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl._2DScene.I2DObject.OnHasMoved">
            <summary>
            Raised when objects moves
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl._2DScene.I2DObject.OnUpdate">
            <summary>
            Called all the time the object is updated
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DObject.PhysicObject">
            <summary>
            Gets or sets the physic object.
            </summary>
            <value>
            The physic object.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DObject.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl._2DScene.I2DObject.I2DObjectAtachtment">
            <summary>
            Gets or sets the Iobject atachtment.
            </summary>
            <value>
            The I object atachtment.
            </value>
        </member>
        <member name="T:PloobsEngine.Input.SimpleConcreteGestureInputPlayable">
            <summary>
            InputPlaybleMousePosition Implementation for mouse position
            </summary>
        </member>
        <member name="M:PloobsEngine.Input.SimpleConcreteGestureInputPlayable.#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.Action{Microsoft.Xna.Framework.Input.Touch.GestureSample},PloobsEngine.Input.InputMask,PloobsEngine.Input.EntityType)">
            <summary>
            Initializes a new instance of the <see cref="!:SimpleConcreteMousePositionInputPlayable"/> class.
            </summary>
            <param name="mst">The MST.</param>
            <param name="mask">The mask.</param>
            <param name="et">The et.</param>
        </member>
        <member name="T:PloobsEngine.Features.TaskProcessor">
            <summary>
            Task Command Executor
            </summary>
        </member>
        <member name="F:PloobsEngine.Features.TaskProcessor.MyName">
            <summary>
            The Name of the Component
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.TaskProcessor.StartTask(PloobsEngine.Features.ITask)">
            <summary>
            Starts the task.
            </summary>
            <param name="task">The task.</param>
        </member>
        <member name="M:PloobsEngine.Features.TaskProcessor.getMyName">
            <summary>
            The name of the reciever
            MUST BE UNIQUE
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Features.TaskProcessor.ComponentType">
            <summary>
            Gets the type of the component type.
            </summary>
            <value>
            The type of the component.
            </value>
        </member>
        <member name="T:PloobsEngine.Components.ComponentType">
            <summary>
            The component Type
            Its very important, The type decides what methods of the component will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.PRE_DRAWABLE">
            <summary>
            Only the Pre Draw method will be call
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.POS_DRAWABLE">
            <summary>
            Only the Pos draw method will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.UPDATEABLE">
            <summary>
            Only the Update method will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.PRE_DRAWABLE_AND_UPDATEABLE">
            <summary>
            Only the Pre Draw and Update will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.POS_DRAWABLE_AND_UPDATEABLE">
            <summary>
            Only the Pos Draw and Update will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.POS_WITHDEPTH_DRAWABLE_AND_UPDATEABLE">
            <summary>
            Only the Pos With Depth Draw and Update will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.POS_WITHDEPTH_DRAWABLE">
            <summary>
            Only the Pos With Depth Draw will be called
            </summary>
        </member>
        <member name="F:PloobsEngine.Components.ComponentType.NONE">
            <summary>
            None of the methods will be called
            </summary>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.AddCamera(PloobsEngine.Cameras.ICamera,System.String)">
            <summary>
            Adiciona uma camera
            Se a camera tiver o nome DEFAULTCAMERA ela vira a camera atual tb
            </summary>
            <param name="cam"></param>
            <param name="name"></param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.AddCamera(PloobsEngine.Cameras.ICamera)">
            <summary>
            Add a camera and set it active if not yet was setted
            </summary>
            <param name="cam"></param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.RemoveCamera(System.String)">
            <summary>
            Remove uma Camera
            Cuidado, pois ela pode estar Ativa !!!
            </summary>
            <param name="name">nome da camera</param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.HasCamera(System.String)">
            <summary>
            Determines whether the specified camera name was added.
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if the specified name exist; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.SetActiveCamera(System.String)">
            <summary>
            Seta uma camera ativa
            modo de transicao Imediata
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.SetActiveCamera(System.String,PloobsEngine.Cameras.InterpolationType,System.Single)">
            <summary>
            Seta uma camera ativa
            modo de transicao Imediata
            </summary>
            <param name="name"></param>
            <param name="time">tempo de demora ou velocidade  -> para controlar o interpolador</param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.GetActiveCameraName">
            <summary>
            Retorna o nome da camera ativa
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraManager.GetCamerasDescription">
            <summary>
            Retorna uma lista das cameras ativas
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Cameras.CameraManager.ActiveCamera">
            <summary>
            Retorna a Camera ativa
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.Neuron">
             <summary>
             Class representing an artificial neuron
             </summary>
             <remarks>
             <code>
              
              --------------> * W[0] \                              -----  
              --------------> * W[1] - + -------> -threshold -------| f | ---------> O
              --------------> * W[i] /                              -----
                 SYNAPSES      WEIGHT             THRESHOLD       ACTIVATION       OUTPUT
            
             </code>
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.rand">
            <summary>
            Pseudo random number generator to initialize neuron weight
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.R_MIN">
            <summary>
            Minimum value for randomisation of weights and threshold
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.R_MAX">
            <summary>
            Maximum value for randomization of weights and threshold
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.w">
            <summary>
            Weight of every synapse
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.last_w">
            <summary>
            Last weight of every synapse
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.threshold">
            <summary>
            Threshold of the neuron
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.last_threshold">
            <summary>
            Last threshold of the neuron
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.f">
            <summary>
            Activation function of the neuron
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.o">
            <summary>
            Value of the last neuron ouput
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.ws">
            <summary>
            Last value of synapse sum minus threshold
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Neuron.a">
            <summary>
            Usefull for backpropagation algorithm
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.#ctor(System.Int32,PloobsEngine.IA.NeuralNetwork.ActivationFunction)">
            <summary>
            Build a neurone with Ni inputs
            </summary>
            <param name="Ni">number of inputs</param>
            <param name="af">The activation function of the neuron</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.#ctor(System.Int32)">
            <summary>
            Build a neurone with Ni inputs whith a default 
            activation function (SIGMOID)
            </summary>
            <param name="Ni">number of inputs</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.randomizeWeight">
            <summary>
            Randomize Weight for each input between R_MIN and R_MAX
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.randomizeThreshold">
            <summary>
            Randomize the threshold (between R_MIN and R_MAX)
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.randomizeAll">
            <summary>
            Randomize the threshold and the weights
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Neuron.ComputeOutput(System.Single[])">
            <summary>
            Compute the output of the neurone
            </summary>
            <param name="input">The input vector</param>
            <returns>The output value of the neuron ( =f(ws) )</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.N_Inputs">
            <summary>
             Number of neuron inputs (synapses)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Item(System.Int32)">
            <summary>
            Indexer of the neuron to get or set weight of synapses
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Threshold">
            <summary>
            To get or set the threshold value of the neuron
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Output">
            <summary>
            Get the last output of the neuron
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.OutputPrime">
            <summary>
            Get the last output prime of the neuron (f'(ws))
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.WS">
            <summary>
            Get the last sum of inputs
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.F">
            <summary>
            Get or set the neuron activation function
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.A">
            <summary>
            Get or set a value of the neuron
            (usefull for backpropagation learning algorithm)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Last_Threshold">
            <summary>
            Get the last threshold value of the neuron
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Last_W">
            <summary>
            Get the last weights of the neuron
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Randomization_Min">
            <summary>
            Get or set the minimum value for randomisation of weights and threshold
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Neuron.Randomization_Max">
            <summary>
            Get or set the maximum value for randomization of weights and threshold
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.Triangulator2D">
            <summary>
            A static class exposing methods for triangulating 2D polygons.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.Triangulator2D.Triangulate(Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Triangulates a 2D polygon produced the indexes required to render the points as a triangle list.
            </summary>
            <param name="vertices">The polygon vertices.</param>
            <returns>The indexes used to render the points as a triangle list.</returns>
        </member>
        <member name="M:PloobsEngine.Utils.Triangulator2D.GetPoints(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Given the list of point indices and the index, returns the three vertex indices.
            </summary>
            <param name="points">The list of points</param>
            <param name="i">The current point</param>
            <param name="pim1">The index of the previous vertex</param>
            <param name="pi">The index of the current vertex</param>
            <param name="pip1">The index of the next vertex</param>
        </member>
        <member name="M:PloobsEngine.Utils.Triangulator2D.IsPointInShape(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Determines if a given point is located inside of a shape.
            </summary>
            <param name="point">The point to test.</param>
            <param name="verts">The vertices of the shape.</param>
            <returns>True if the point is in the shape; false otherwise.</returns>
        </member>
        <member name="T:PloobsEngine.Utils.Triangulator2D.Triangle">
            <summary>
            A basic triangle structure that holds the three indices that make up a given triangle.
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.TimePassed">
            <summary>
            Helper to wait for a period
            When off always return false in hasPassed Method
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.TimePassed.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Utils.TimePassed"/> class.
            Starts on by Default
            </summary>
            <param name="intervalInSeconds"></param>
        </member>
        <member name="M:PloobsEngine.Utils.TimePassed.#ctor(System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Utils.TimePassed"/> class.
            </summary>
            <param name="intervalInSeconds">The interval in seconds.</param>
            <param name="startOn">if set to <c>true</c> [start on].</param>
        </member>
        <member name="M:PloobsEngine.Utils.TimePassed.InitOrRestart(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Inits or restart.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.TimePassed.hasPassed(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Determines whether the interval has passed.        
            </summary>
            <returns>
              <c>true</c> if this instance has passed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:PloobsEngine.Utils.TimePassed.State">
            <summary>
            On or Off
            </summary>
        </member>
        <member name="P:PloobsEngine.Utils.TimePassed.Interval">
            <summary>
            Gets or sets the interval in seconds
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="F:PloobsEngine.SceneControl.ForwardRenderTecnichDescription.OrderAllObjectsBeforeDraw">
            <summary>
            Function called all frames to order all objects that are not culled
            Use this to sort objects by material and minimize gpu state changes
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.IRenderTechnic">
            <summary>
            Specification of a Render Technic
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.IRenderTechnic.PostEffects">
            <summary>
            List off all PostEffects
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.AddPostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Adds one post effect.
            </summary>
            <param name="postEffect">The post effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.RemovePostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Removes one post effect.
            </summary>
            <param name="postEffect">The post effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.ContainsPostEffect(PloobsEngine.SceneControl.IPostEffect)">
            <summary>
            Determines whether [contains post effect] [the specified post effect].
            </summary>
            <param name="postEffect">The post effect.</param>
            <returns>
              <c>true</c> if [contains post effect] [the specified post effect]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.BeforeFirstExecution(PloobsEngine.SceneControl.RenderHelper,PloobsEngine.SceneControl.IWorld)">
            <summary>
            Befores the first execution.
            </summary>
            <param name="render">The render.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.ExecuteTechnic(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.SceneControl.IWorld)">
            <summary>
            Executes the technic.
            </summary>
            <param name="render">The render.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IRenderTechnic.AfterLoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Called after the All the Engine stuffs are loaded
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IRenderTechnic.TechnicName">
            <summary>
            Gets the name of the technic.
            </summary>
            <value>
            The name of the technic.
            </value>
        </member>
        <member name="T:PloobsEngine.SceneControl.IDeferredFinalCombination">
            <summary>
            Deferred final combination specification
            This is the stage number 3, where the light map and the gbuffer are combined
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredFinalCombination.SetFinalCombination(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Sets the final combination.
            </summary>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredFinalCombination.DrawScene(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IDeferredGBuffer,PloobsEngine.SceneControl.IDeferredLightMap,PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Draws the pass.
            </summary>
            <param name="gameTime">The game time.</param>
            <param name="world">The world.</param>
            <param name="gbuffer">The gbuffer.</param>
            <param name="lightmap">The lightmap.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredFinalCombination.LoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,System.Boolean,System.Boolean)">
            <summary>
            Loads the content.
            </summary>
            <param name="manager">The manager.</param>
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IDeferredFinalCombination.AmbientColor">
            <summary>
            Gets or sets the ambient color factor.
            Uniform for all the scene
            </summary>
            <value>
            The color of the ambient.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IDeferredFinalCombination.Item(PloobsEngine.SceneControl.GBufferTypes)">
            <summary>
            Gets the <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> with the specified type.
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.IForwardPass">
            <summary>
            Specification of the ForwardPass pass
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IForwardPass.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.RenderHelper,System.Collections.Generic.List{PloobsEngine.SceneControl.IObject},System.Collections.Generic.List{PloobsEngine.SceneControl.IObject})">
            <summary>
            Draws all the forward Objects 
            </summary>
            <param name="gt">The gt.</param>
            <param name="world">The world.</param>
            <param name="render">The render.</param>
        </member>
        <member name="T:PloobsEngine.Events.GroupedEvent`1">
            <summary>
            Evento que tem como alvo um grupo , nao precisa adicionar targets
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.Layer">
            <summary>
            A layer of neurone in a neuronal network
            </summary>
            <remarks>
            <code>
                        / N1 ----->        OUTPUTS
            INPUTS ===> - N2 ----->  (1 output for each 
                        \ Ni ----->  neuron of the layer)
            </code>       
            Each neuron of the layer has the same number of
            inputs, this is the number of inputs of the layer
            itself.
            </remarks>
            
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Layer.nn">
            <summary>
            Number of neurons in the layer
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Layer.ni">
            <summary>
            Number of inputs of the layer
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Layer.neurons">
            <summary>
            Neurons of the layer
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.Layer.output">
            <summary>
            Last output of the layer
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.#ctor(System.Int32,System.Int32,PloobsEngine.IA.NeuralNetwork.ActivationFunction)">
            <summary>
            Build a new Layer with neurons neurones. Every neuron 
            has "inputs" inputs and the activation function f.
            </summary>
            <param name="inputs">Number of inputs</param>
            <param name="neurons">Number of neurons</param>
            <param name="f">Activation function of each neuron</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.#ctor(System.Int32,System.Int32)">
            <summary>
            Build a new Layer with neurons neurones. Every neuron 
            has "inputs" inputs and the sigmoid activation function.
            </summary>
            <param name="inputs">Number of inputs</param>
            <param name="neurons">Number of neurons</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.setActivationFunction(PloobsEngine.IA.NeuralNetwork.ActivationFunction)">
            <summary>
            Set the activation function f to all neurons of the layer
            </summary>
            <param name="f">An activation function</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.randomizeWeight">
            <summary>
            Randomize all neurons weights
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.randomizeThreshold">
            <summary>
            Randomize all neurons thresholds
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.randomizeAll">
            <summary>
            Randomize all neurons threshold and weights
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.setRandomizationInterval(System.Single,System.Single)">
            <summary>
            Set the randomization interval for all neurons
            </summary>
            <param name="min">the minimum value</param>
            <param name="max">the maximum value</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.Layer.Output(System.Single[])">
            <summary>
            Compute output of the layer.
            The output vector contains the output of each 
            neuron of the layer.
            </summary>
            <param name="input">input of the layer (size must be N_inputs)</param>
            <returns>the output vector (size = N_neurons)</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Layer.N_Neurons">
            <summary>
            Number of neurons in this layer
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Layer.N_Inputs">
            <summary>
            Number of inputs of this layer
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Layer.Item(System.Int32)">
            <summary>
            Indexer of layer's neurons
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.Layer.Last_Output">
            <summary>
            Return last output vector of the layer
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.IMap.Waypoints">
            <summary>
            Waypoints do Mapa
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.PerlinNoise">
            <summary>
            Perlin Noise
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.PerlinNoise.#ctor(System.Int32,System.Int32)">
            <summary>
            Perlin Noise Constructot
            </summary>
            <param name="width">max</param>
            <param name="height">max</param>
        </member>
        <member name="M:PloobsEngine.Utils.PerlinNoise.GetRandomHeight(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Gets the value for a specific X and Y coordinate
            results in range [-1, 1] * maxHeight
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="MaxHeight"></param>
            <param name="Frequency"></param>
            <param name="Amplitude"></param>
            <param name="Persistance"></param>
            <param name="Octaves"></param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.PerlinNoise.GenerateNoise">
            <summary>
            create a array of randoms
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.Interpolator`1">
            <summary>
            General Interpolator Base
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.Start(`0,`0,System.Double)">
            <summary>
            Start the Interpolator
            </summary>
            <param name="value1">Value to Start interpolation from</param>
            <param name="value2">Value to interpolate to</param>
            <param name="totalDuration">Time to interpolate from value1 to value2 in seconds</param>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.Start(`0,`0,System.Double,System.Boolean)">
            <summary>
            Start the interpolator
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="totalDuration"></param>
            <param name="smoothStep">Use smoothstep rather than lerp</param>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update the interpolator
            </summary>
            <param name="gameTime"></param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.PeekValue(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Peek the next interpolation value without affecting the next update
            </summary>
            <param name="gameTime"></param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.Reset">
            <summary>
            Reset the interpolator
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.Interpolator`1.Interpolate">
            <summary>
            Override to implement interpolation for a concrete data type
            </summary>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Utils.XmlContentLoader">
            <summary>
            XML content loader
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.XmlContentLoader.SaveXmlContent(System.Object,System.Type,System.String)">
            <summary>
            Saves the content of the obj in XML.
            </summary>
            <param name="obj">The obj.</param>
            <param name="tipo">The type.</param>
            <param name="Path">The path.</param>
        </member>
        <member name="M:PloobsEngine.Utils.XmlContentLoader.LoadXmlContent(System.String,System.Type)">
            <summary>
            Loads the content of the XML.
            </summary>
            <param name="name">The name.</param>
            <param name="tipo">The type.</param>
            <returns>object</returns>
        </member>
        <member name="T:PloobsEngine.SceneControl.IScene">
            <summary>
            Describe a 3D World
            </summary>
            
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.AfterLoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Function called After all the stuffs LoadContent is called
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update the Screen
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            This is called when the screen should draw itself.
            </summary>
            <param name="gameTime"></param>
            <param name="render"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.CleanUp(PloobsEngine.Engine.EngineStuff)">
            <summary>
            CleanUp the Scene
            </summary>
            <param name="engine"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.LoadContent(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IContentManager)">
            <summary>
            Load content for the screen.        
            </summary>
            <param name="GraphicInfo"></param>
            <param name="factory"></param>
            <param name="contentManager"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.InitScreen(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.EngineStuff)">
            <summary>
            Init Screen
            </summary>
            <param name="GraphicInfo">The graphic info.</param>
            <param name="engine"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IScene.SetWorldAndRenderTechnich(PloobsEngine.SceneControl.IRenderTechnic@,PloobsEngine.SceneControl.IWorld@)">
            <summary>
            Sets the world and render technich.
            </summary>
            <param name="renderTech">The render tech.</param>
            <param name="world">The world.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScene.RenderTechnic">
            <summary>
            Gets the render technics.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IScene.World">
            <summary>
            Gets or sets the world instance.
            </summary>
            <value>
            The world.
            </value>
        </member>
        <member name="T:Bnoerj.AI.Steering.LocalityQueryProximityDatabase`1">
            <summary>
            A AbstractProximityDatabase-style wrapper for the LQ bin lattice system
            </summary>
        </member>
        <member name="T:PloobsEngine.Resource3">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PloobsEngine.Resource3.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PloobsEngine.Resource3.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.SegmentInterceptInfo">
            <summary>
            Interception Info
            RayCast using PhysicEngine directly
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.SegmentInterceptInfo.PhysicObject">
            <summary>
            Gets or sets the physic object itercepted.
            </summary>
            <value>
            The physic object.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.SegmentInterceptInfo.Distance">
            <summary>
            Gets or sets the distance from the object to the ray source.
            </summary>
            <value>
            The distance.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.SegmentInterceptInfo.ImpactPosition">
            <summary>
            Gets or sets the impact position.
            </summary>
            <value>
            The impact position.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.SegmentInterceptInfo.ImpactNormal">
            <summary>
            Gets or sets the impact normal.
            </summary>
            <value>
            The impact normal.
            </value>
        </member>
        <member name="T:PloobsEngine.Physics.Bepu.ObjectMover">
            <summary>
            Specialized Object Proper to Movimentation
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.BepuPhysicWorld">
            <summary>
            Bepu Implementation of a Physic World
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.BepuPhysicWorld"/> class.
            </summary>
            <param name="gravity">The gravity.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.AddObject(PloobsEngine.Physics.IPhysicObject)">
            <summary>
            Adds the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.RemoveObject(PloobsEngine.Physics.IPhysicObject)">
            <summary>
            Removes the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.RemoveConstraint(PloobsEngine.Physic.Constraints.IPhysicConstraint)">
            <summary>
            Removes the constraint.
            </summary>
            <param name="ctn">The CTN.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.DebugDrawn(Microsoft.Xna.Framework.GameTime,PloobsEngine.Cameras.ICamera)">
            <summary>
            Draw the physic world in debug mode.
            </summary>
            <param name="gt">The gt.</param>
            <param name="cam">The cam.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.SegmentIntersect(Microsoft.Xna.Framework.Ray,System.Func{PloobsEngine.Physics.IPhysicObject,System.Boolean},System.Single)">
            <summary>
            Raycast
            </summary>
            <param name="raio">The raio.</param>
            <param name="filter"></param>
            <param name="maxDistance">The max distance.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.DetectCollisions(PloobsEngine.Physics.IPhysicObject,System.Collections.Generic.List{PloobsEngine.Physics.IPhysicObject})">
            <summary>
            Detects the collisions.
            </summary>
            <param name="po">The po.</param>
            <param name="col">The col.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.GetPhysicsObjectsInRange(PloobsEngine.Physics.IPhysicObject,System.Single,PloobsEngine.Physics.CullerConditionAvaliator{PloobsEngine.Physics.IPhysicObject,PloobsEngine.SceneControl.IObject},System.Collections.Generic.List{PloobsEngine.Physics.IPhysicObject})">
            <summary>
            Gets the physics objects in range.
            </summary>
            <param name="po">The po.</param>
            <param name="distance">The distance.</param>
            <param name="condition">The condition.</param>
            <param name="resp">The resp.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.GetIObjectsInRange(Microsoft.Xna.Framework.BoundingFrustum,PloobsEngine.Physics.CullerConditionAvaliator{PloobsEngine.Physics.IPhysicObject,PloobsEngine.SceneControl.IObject},System.Collections.Generic.List{PloobsEngine.SceneControl.IObject})">
            <summary>
            Gets the Iobjects in range.
            </summary>
            <param name="frustrum">The frustrum.</param>
            <param name="condition">The condition.</param>
            <param name="resp">The resp.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplyDefaultSettings(PloobsEngine.Physics.BepuPhysicWorld)">
            <summary>
            Applies the default settings to the space.
            These values are what the engine starts with; they don't have to be applied unless you just want to get back to the defaults.
            This doesn't cover every single tunable field in the entire engine, just the main ones that this helper class is messing with.
            </summary>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplyRotationSettings">
            <summary>
            Applies some rotation-related settings.
            With these settings enabled, rotation generally behaves better with long shapes.
            Angular motion is more realistic since the momentum is conserved.
            However, these settings can also cause some instability to sneak into the simulation.
            Try using these settings on the Saw Contraption demo to see an example of what can go
            wrong when conservation is enabled.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplySemiSpeedySettings">
            <summary>
            Applies slightly higher speed settings.
            The only change here is the default minimum iterations.
            In many simulations, having a minimum iteration count of 0 works just fine.
            It's a quick and still fairly robust way to get some extra performance.
            An example of where this might introduce some issues is sphere stacking.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplySuperSpeedySettings(PloobsEngine.Physics.BepuPhysicWorld)">
            <summary>
            Applies some low quality, high speed settings.
            The main benefit comes from the very low iteration cap.
            By enabling simplex caching, general convex collision detection
            gets a nice chunk faster, but some curved shapes lose collision detection robustness.
            </summary>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplyMediumHighStabilitySettings(PloobsEngine.Physics.BepuPhysicWorld)">
            <summary>
            Applies some higher quality settings.
            By using universal continuous collision detection, missed collisions
            will be much, much rarer.  This actually doesn't have a huge performance cost.
            The increased iterations put this as a midpoint between the normal and high stability settings.
            </summary>
            <param name="space">Space to configure.</param>
        </member>
        <member name="M:PloobsEngine.Physics.BepuPhysicWorld.ApplyHighStabilitySettings(PloobsEngine.Physics.BepuPhysicWorld)">
            <summary>
            Applies some high quality, low performance settings.
            By using universal continuous collision detection, missed collisions
            will be much, much rarer.  This actually doesn't have a huge performance cost.
            However, increasing the iteration limit and the minimum iterations to 5x the default
            will incur a pretty hefty overhead.
            On the upside, pretty much every simulation will be rock-solid.
            </summary>
            <param name="space">Space to configure.</param>
        </member>
        <member name="P:PloobsEngine.Physics.BepuPhysicWorld.Space">
            <summary>
            Gets or sets the space.
            </summary>
            <value>
            The space.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.BepuPhysicWorld.PhysicObjects">
            <summary>
            Gets the physic objects.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.BepuPhysicWorld.PhysicConstraints">
            <summary>
            Gets the constraint objects.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physic2D.I2DPhysicWorld.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates 
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Physic2D.I2DPhysicWorld.AddObject(PloobsEngine.Physic2D.I2DPhysicObject)">
            <summary>
            Adds the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physic2D.I2DPhysicWorld.RemoveObject(PloobsEngine.Physic2D.I2DPhysicObject)">
            <summary>
            Removes the object.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Physic2D.I2DPhysicWorld.Picking(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Test a Point agains the world
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Physic2D.I2DPhysicWorld.TestAABB(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Tests the AABB against the world.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Light2D.SpotLight2D.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,PloobsEngine.Light2D.ShadowmapSize)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Light2D.SpotLight2D"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="direction">The direction.</param>
            <param name="angle">The angle. IN RADIANS !!!!!!!!!!!!!!!</param>
            <param name="intensity">The intensity.</param>
            <param name="ShadowmapSize">Size of the shadowmap.</param>
        </member>
        <member name="F:PloobsEngine.Features.DebugDraw.DebugLines.effect">
            <summary>
            The basic effect used to draw boxes.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLines.AddLine(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color)">
            <summary>
            Add a Line
            You cant remove it        
            </summary>
            <param name="StartPoint">The start point.</param>
            <param name="EndPoint">The end point.</param>
            <param name="color">The box's color.</param>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLines.ClearLines">
            <summary>
            Clears the lines.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Features.DebugDraw.DebugLines"/> class.        
            Use addline to add lines =P
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLines.Draw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draws the box.
            </summary>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="T:PloobsEngine.Audio.ISoundEmitter2D">
            <summary>
            Generic Sound 3D Emiter 
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter2D.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl._2DScene.ICamera2D)">
            <summary>
            Updates .
            </summary>
            <param name="gt">The gt.</param>
            <param name="camera">The camera.</param>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter2D.Pause">
            <summary>
            Pauses the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter2D.Resume">
            <summary>
            Resumes the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter2D.Play">
            <summary>
            Plays the sound
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.ISoundEmitter2D.Stop(System.Boolean)">
            <summary>
            Stops the sound
            </summary>
        </member>
        <member name="P:PloobsEngine.Audio.ISoundEmitter2D.State">
            <summary>
            Gets the Sound state.
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.IWorld">
            <summary>
            Specification of a world
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.#ctor(PloobsEngine.Physics.IPhysicWorld,PloobsEngine.SceneControl.ICuller,PloobsEngine.Particles.IParticleManager)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.IWorld"/> class.
            </summary>
            <param name="PhysicWorld">The physic world.</param>
            <param name="Culler">The culler.</param>
            <param name="particleManager">The particle manager.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.AddObject(PloobsEngine.SceneControl.IObject)">
            <summary>
            Adds an object to the world.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.ContainsObject(PloobsEngine.SceneControl.IObject)">
            <summary>
            Contains the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.RemoveObject(PloobsEngine.SceneControl.IObject)">
            <summary>
            Removes an object from the world.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.UpdateWorld(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the world.
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.AddLight(PloobsEngine.Light.ILight)">
            <summary>
            Adds the light.
            </summary>
            <param name="light">The light.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.RemoveLight(PloobsEngine.Light.ILight)">
            <summary>
            Removes the light.
            </summary>
            <param name="light">The light.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.AddTrigger(PloobsEngine.Trigger.ITrigger)">
            <summary>
            Adds the trigger.
            </summary>
            <param name="trigger">The trigger.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.RemoveTrigger(PloobsEngine.Trigger.ITrigger)">
            <summary>
            Removes the trigger.
            </summary>
            <param name="trigger">The trigger.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.AddDummy(PloobsEngine.SceneControl.IDummy)">
            <summary>
            Add a Dummy to the world
            Its like a position, 
            usefull to serializable position from a world editor
            </summary>
            <param name="dummy">The dummy.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.RemoveDummy(PloobsEngine.SceneControl.IDummy)">
            <summary>
            Removes the dummy.
            </summary>
            <param name="dummy">The dummy.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.AddSoundEmitter(PloobsEngine.Audio.ISoundEmitter3D,System.Boolean)">
            <summary>
            Adds the sound emitter.
            </summary>
            <param name="em">The em.</param>
            <param name="play">if set to <c>true</c> [play].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IWorld.RemoveSoundEmitter(PloobsEngine.Audio.ISoundEmitter3D)">
            <summary>
            Removes the sound emitter.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.GraphicsInfo">
            <summary>
            Gets or sets the graphics info.
            </summary>
            <value>
            The graphics info.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.GraphicsFactory">
            <summary>
            Gets or sets the graphics factory.
            </summary>
            <value>
            The graphics factory.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.CameraManager">
            <summary>
            Camera Managment
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.PhysicWorld">
            <summary>
            Gets or sets the physic world.
            </summary>
            <value>
            The physic world.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.Dummies">
            <summary>
            Gets all the dummyes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.Lights">
            <summary>
            Gets the lights.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.Culler">
            <summary>
            Gets or sets the culler.
            </summary>
            <value>
            The culler.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.Objects">
            <summary>
            Gets the objects.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IWorld.SoundEmiters3D">
            <summary>
            Gets the objects.
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.VertexMultitextured">
            <summary>
            Vertex Struct used in the Water shader
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.VertexMultitextured.SizeInBytes">
            <summary>
            Size in bytes
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.VertexMultitextured.VertexElements">
            <summary>
            Vertex Elements
            </summary>
        </member>
        <member name="T:PloobsEngine.Light.DirectionalLightPE">
            <summary>
            Deferred Directional Light
            </summary>
        </member>
        <member name="F:PloobsEngine.Light.DirectionalLightPE.nearClipOffset">
            <summary>
            experimentalllll
            </summary>
        </member>
        <member name="M:PloobsEngine.Light.DirectionalLightPE.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Light.DirectionalLightPE"/> class.
            </summary>
        </member>
        <member name="M:PloobsEngine.Light.DirectionalLightPE.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Light.DirectionalLightPE"/> class.
            </summary>
            <param name="direction">The direction.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:PloobsEngine.Light.DirectionalLightPE.FakeViewProjection(PloobsEngine.Cameras.ICamera)">
            <summary>
            Create a Fake view projection matrixes to use in Shadow.
            Calculate a Box that englobes the cam frustrum, put the eye near the center
            and calculates the view matrix, after use an ortograph projection to create
            the projection matrix
            Classic Algorith, dont make assumption on the scene orgnization, but also dont generate an optimal
            depth map (lots of none used pixels)
            </summary>
            <param name="cam">The cam.</param>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.NearClipOffset">
            <summary>
            Parameter to Tune the Shadow Mapping Generation
            Default 800
            </summary>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.Target">
            <summary>
            Used With the Position to generate a Direction
            </summary>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.LightIntensity">
            <summary>
            Gets or sets the light intensity.
            YOU MUST SET BOTH
            </summary>
            <value>
            The light intensity.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.Position">
            <summary>
            Used with the target to generate a Direction
            YOU MUST SET BOTH
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.LightDirection">
            <summary>
            Gets or sets the light direction.
            </summary>
            <value>
            The light direction.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.DirectionalLightPE.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="T:PloobsEngine.Features.ITask">
            <summary>
            Specification of a task
            Task is a class that operates in ANOTHER THREAD    
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.ITask.Result(System.IAsyncResult)">
            <summary>
            Called when the task ends
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:PloobsEngine.Features.ITask.Process">
            <summary>
            Processes the task.
            </summary>
        </member>
        <member name="T:PloobsEngine.Features.TaskEndType">
            <summary>
            Quando a funcao result sera chamada, qd o process terminar
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.ActivationFunction">
            <summary>
            Interface of the activation function of a neuron.
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.ActivationFunction.Output(System.Single)">
            <summary>
            Compute function value
            </summary>
            <param name="x">x</param>
            <returns>f(x)</returns>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.ActivationFunction.OutputPrime(System.Single)">
            <summary>
            Compute the diff of the function
            </summary>
            <param name="x">x</param>
            <returns>f'(x)</returns>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction">
            <summary>
            The sigmoid activation function
            </summary>
            <remarks>
            Here is the definition of the sigmoid activation function
            <code>
                           1
            f(x) = -----------------   beta > 0
                    1 + e^(-beta*x)
            
            f'(x) = beta * f(x) * ( 1 - f(x) )   
            </code>     
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction.beta">
            <summary>
            The beta parameter of the sigmoid
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction.Output(System.Single)">
            <summary>
            <code>
                            1
            f(x) = -----------------   beta > 0
                    1 + e^(-beta*x)
            </code>
            </summary>
            <param name="x">x</param>
            <returns>f(x)</returns>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction.OutputPrime(System.Single)">
            <summary>
            <code>
            f'(x) = beta * f(x) * ( 1 - f(x) )
            </code>
            </summary>
            <param name="x">x</param>
            <returns>f'(x)</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction.Beta">
            <summary>
            Get or set the beta parameter of the function
            ( beta must be positive )
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.SigmoidActivationFunction.Name">
            <summary>
            Get the name of the activation function
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction">
            <summary>
            The linear activation function
            </summary>
            <remarks>
            <code>
                   |1            if x > 0.5/A
            f(x) = |A * x + 0.5  if 0.5/A > x > -0.5/A
                   |0            if -0.5/A > x
            
                        A > 0      
            </code>
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.a">
            <summary>
            The A parameter of the linear function
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.threshold">
            <summary>
            Usefull to compute function value
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.Output(System.Single)">
            <summary>
             Get the activation function value
            </summary>
            <param name="x">x</param>
            <returns>f(x)</returns>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.OutputPrime(System.Single)">
            <summary>
            Get the diff function value
            </summary>
            <param name="x">x</param>
            <returns>f'(x)</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.A">
            <summary>
            Get or set the A parameter of the function
            ( A must be positive )
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.LinearActivationFunction.Name">
            <summary>
            Get the name of the activation function
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.HeavisideActivationFunction">
            <summary>
            The heaviside activation function
            </summary>
            <remarks>
            <code>
            f(x) = 0 if 0>x
            f(x) = 1 if x>0
            </code>   
            </remarks>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.HeavisideActivationFunction.Output(System.Single)">
            <summary>
             Get the heaviside function value
            </summary>
            <param name="x">x</param>
            <returns>f(x)</returns>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.HeavisideActivationFunction.OutputPrime(System.Single)">
            <summary>
            Get the derivative function value
            Simulate an impulse at origin...
            </summary>
            <param name="x">x</param>
            <returns>f'(x)</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.HeavisideActivationFunction.Name">
            <summary>
            Get the name of the activation function
            </summary>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction">
            <summary>
            The gaussian activation function
            </summary>
            <remarks>
            <code>
            
                             1                -(x-mu)^2 / (2 * sigma^2)
            f(x)  =  -------------------- *  e
                     sqrt(2 * pi * sigma)
            
            f'(x)  =  y(x) * -2*K*(x - mu) 
            </code>
            To implement a more efficient computation :
            <code>
            C = 1/sqrt(2 * pi * sigma)
            K = 1/(2 * sigma^2)
            </code>
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.sigma">
            <summary>
            The sigma parameter of the gaussian
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.mu">
            <summary>
            The mu parameter of the gaussian
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.C">
            <summary>
            C parameter (usfull for computing function value)
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.K">
            <summary>
            C parameter (usfull for computing function value)
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.computeCK">
            <summary>
            Compute C and K parameters from sigma
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.#ctor">
            <summary>
            GaussianActivationFunction constructor
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.Output(System.Single)">
            <summary>
            Compute the value of the gaussian function
            <param name="x">x</param>
            <returns>f(x)</returns>
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.OutputPrime(System.Single)">
            <summary>
            compute the derivative value of function
            </summary>
            <param name="x">x</param>
            <returns>f'(x)</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.Sigma">
            <summary>
            Get or set the sigma parameter of the function
            (sigma must be positive)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.Mu">
            <summary>
            Get or set the mu parameter of the function
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.GaussianActivationFunction.Name">
            <summary>
            Get the name of the activation function
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.BundleHandler">
            <summary>
            Handles Bundle like files
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.BundleHandler.getBundle(System.String)">
            <summary>
            Parse files info of the type a=b and t=return a dicionary with keys and values
            % is a comentary
            </summary>
            <param name="filename">file name</param>
            <returns>dic with the parse info</returns>
        </member>
        <member name="T:PloobsEngine.Utils.Circle">
            <summary> 
            Represents a 2D circle. 
            </summary> 
        </member>
        <member name="F:PloobsEngine.Utils.Circle.Center">
            <summary> 
            Center position of the circle. 
            </summary> 
        </member>
        <member name="F:PloobsEngine.Utils.Circle.Radius">
            <summary> 
            Radius of the circle. 
            </summary> 
        </member>
        <member name="M:PloobsEngine.Utils.Circle.#ctor(Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary> 
            Constructs a new circle. 
            </summary> 
        </member>
        <member name="M:PloobsEngine.Utils.Circle.Intersects(Microsoft.Xna.Framework.Rectangle)">
            <summary> 
            Determines if a circle intersects a rectangle. 
            </summary> 
            <returns>True if the circle and rectangle overlap. False otherwise.</returns> 
        </member>
        <member name="T:PloobsEngine.SceneControl.Octree`1">
            <summary>
            Represents an octree spatial partioning system.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.ChildCount">
            <summary>
            The number of children in an octree.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.looseness">
            <summary>
            The octree's looseness value.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.depth">
            <summary>
            The octree's depth.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.center">
            <summary>
            The octree's center coordinates.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.length">
            <summary>
            The octree's length.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.bounds">
            <summary>
            The bounding box that represents the octree.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.objects">
            <summary>
            The objects in the octree.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.children">
            <summary>
            The octree's child nodes.
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.Octree`1.worldSize">
            <summary>
            The octree's world size.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.#ctor(System.Single,System.Single,System.Int32)">
            <summary>
            Creates a new octree.
            </summary>    
            <param name="worldSize">The octree's world size.</param>
            <param name="looseness">The octree's looseness value.</param>
            <param name="depth">The octree recursion depth.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.#ctor(System.Single,System.Single,System.Int32,System.Int32,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new octree.
            </summary>    
            <param name="worldSize">The octree's world size.</param>
            <param name="looseness">The octree's looseness value.</param>
            <param name="maxDepth">The maximum depth to recurse to.</param>
            <param name="depth">The octree recursion depth.</param>
            <param name="center">The octree's center coordinates.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Add(`0,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Adds the given object to the octree.
            </summary>
            <param name="o">The object to add.</param>
            <param name="center">The object's center coordinates.</param>
            <param name="radius">The object's radius.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Add(`0,Microsoft.Xna.Framework.BoundingBox)">
            <summary>
            Adds the given object to the octree.
            </summary>    
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Add(`0,Microsoft.Xna.Framework.BoundingBox,Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Adds the given object to the octree.
            </summary>
            <param name="o">The object to add.</param>
            <param name="bounds">The object's bounds.</param>
            <param name="center">The object's center coordinates.</param>
            <param name="radius">The object's radius.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Draw(Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Collections.Generic.List{`0})">
            <summary>
            Draws the octree.
            </summary>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
            <param name="objects">The objects in the octree.</param>
            <returns>The number of octrees drawn.</returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Draw(Microsoft.Xna.Framework.BoundingFrustum,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.ContainmentType,System.Collections.Generic.List{`0})">
            <summary>
            Draws the octree.
            </summary>
            <param name="frustum">The viewing frustum used to determine if the octree is in view.</param>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
            <param name="containment">Determines how much of the octree is visible.</param>
            <param name="objects">The objects in the octree.</param>
            <returns>The number of octrees drawn.</returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.Octree`1.Split(System.Int32)">
            <summary>
            Splits the octree into eight children.
            </summary>
            <param name="maxDepth">The maximum depth to recurse to.</param>
        </member>
        <member name="T:PloobsEngine.DataStructure.MergeSort">
            <summary>
            Implementation of stable merge sort.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.MergeSort.Sort``1(``0[])">
            <summary>
            Sorts the specified entities.
            </summary>
            <typeparam name="T">is an ICOMPARABLE</typeparam>
            <param name="entities">The entities.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.MergeSort.Sort``1(``0[],System.Comparison{``0})">
            <summary>
            Sorts the specified entities.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entities">The entities.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.MergeSort.Merge``1(``0[],``0[],``0[],System.Comparison{``0})">
            <summary>
            Merges the specified left and right.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="entities">The entities.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.OnPicked">
            <summary>
            Fired when Picking something
            </summary>
            <param name="SegmentInterceptInfo">The segment intercept info.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.Picking">
            <summary>
            Picking Helper
            </summary>
        </member>
        <member name="T:PloobsEngine.IScreenUpdateable">
            <summary>
            Updateable component
            Can be atached to a screen, and everytime the screens's update is called
            this class update is also called
            has an id
            </summary>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.#ctor(PloobsEngine.SceneControl.IScreen)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.IScreenUpdateable"/> class.
            </summary>
            <param name="owner">The screen owner.</param>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.Start">
            <summary>
            Starts this instance.
            The update will be called after this call
            </summary>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.Stop">
            <summary>
            Stops the updating method being called
            </summary>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates this called
            Should be overloaded
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>
            the id
            </returns>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.CleanUp">
            <summary>
            Cleans up.
            </summary>
        </member>
        <member name="M:PloobsEngine.IScreenUpdateable.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:PloobsEngine.SceneControl.Picking.#ctor(PloobsEngine.SceneControl.IScene,Microsoft.Xna.Framework.Input.Touch.GestureType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.Picking"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="pickingRayDistance">The picking ray distance.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.Annotation.AddTrail(Bnoerj.AI.Steering.Trail)">
            <summary>
            Adds a Trail.
            </summary>
            <param name="trail">The trail to add.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.Annotation.RemoveTrail(Bnoerj.AI.Steering.Trail)">
            <summary>
            Removes the specified Trail.
            </summary>
            <param name="trail">The trail to remove.</param>
        </member>
        <member name="M:Bnoerj.AI.Steering.Annotation.DrawTrails(Bnoerj.AI.Steering.IDraw)">
            <summary>
            Draws all registered Trails.
            </summary>
        </member>
        <member name="P:Bnoerj.AI.Steering.Annotation.IsEnabled">
            <summary>
            Indicates whether annotation is enabled.
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.SphereObject.#ctor(Microsoft.Xna.Framework.Vector3,System.Single,System.Single,System.Single,PloobsEngine.Physics.MaterialDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.SphereObject"/> class.
            </summary>
            <param name="pos">The pos.</param>
            <param name="raio">The raio.</param>
            <param name="mass">The mass.</param>
            <param name="scale">The scale.</param>
            <param name="materialDescription">The material description.</param>
        </member>
        <member name="T:PloobsEngine.Modelo.BilboardInstance">
            <summary>
            Represent each bilboard
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.InstancedBilboardModel.#ctor(PloobsEngine.Engine.GraphicFactory,System.String,System.String,PloobsEngine.Modelo.BilboardInstance[])">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.InstancedBilboardModel"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="BilboardsName">Name of the bilboards.</param>
            <param name="diffuseTextuteName">Name of the diffuse textute.</param>
            <param name="instances">The instances.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.InstancedBilboardModel.SetBilboardInstances(PloobsEngine.Modelo.BilboardInstance[])">
            <summary>
            Sets the bilboard instances.
            </summary>
            <param name="instances">The instances.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.InstancedBilboardModel.GetBilboardInstances">
            <summary>
            Gets the bilboard instances.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Audio.LocalMediaAudioPlayer">
            <summary>
            MusicPlayer
            IMPORTANT
            On Windows, MediaLibrary can find songs only if the Windows Media Player previously found songs on the system.
            This means that Windows Media Player first must search the system for music before any songs can be accessed through MediaLibrary.
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.StartQueue">
            <summary>
            Starts the queue of songs
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.PlayAlbum(Microsoft.Xna.Framework.Media.Album)">
            <summary>
            Plays the album.
            </summary>
            <param name="album">The album.</param>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.PlaySpecificMusic(System.String)">
            <summary>
            Plays the specific music.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.AdvanceOneMusicInQueue">
            <summary>
            Advances one music in queue.
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.BackOneMusicInQueue">
            <summary>
            Backs one music in queue.
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.CurrentMusicState">
            <summary>
            Current state of the current music.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.PauseCurrentMusic">
            <summary>
            Pauses the current music.
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.ResumeCurrentMusic">
            <summary>
            Resumes the current music.
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.LocalMediaAudioPlayer.StopCurrentMusic">
            <summary>
            Stops the current music.
            </summary>
        </member>
        <member name="P:PloobsEngine.Audio.LocalMediaAudioPlayer.Loop">
            <summary>
            Gets or sets a value indicating whether this <see cref="!:BackGroundAudioPlayer"/> is loop.
            </summary>
            <value>
              <c>true</c> if loop; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Audio.LocalMediaAudioPlayer.SongCollection">
            <summary>
            Gets the song collection.
            </summary>
        </member>
        <member name="T:PloobsEngine.MessageSystem.SystemMessageFactory">
            <summary>
            Helper to create system messages
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemMessageFactory.NotFoundReciever(System.Int32,System.Int32)">
            <summary>
            Not found message.
            </summary>
            <param name="reciever">The reciever.</param>
            <param name="notfoundid">The notfoundid.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.DataStructure.TreeNode`1">
            <summary>
            Tree Node Implementatio
            </summary>
            <typeparam name="E"></typeparam>
        </member>
        <member name="F:PloobsEngine.DataStructure.TreeNode`1.value">
            <summary>
            The value of this particular Tree Node.
            </summary>
        </member>
        <member name="F:PloobsEngine.DataStructure.TreeNode`1.listOfSubNodes">
            <summary>
            The array of subnodes.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.TreeNode`1.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.TreeNode`1.#ctor(`0,`0[])">
            <summary>
            Constructs a new Tree Node.
            </summary>
            <param name="value">Value for this Node.</param>
            <param name="subNodes">Array of SubNode values.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.TreeNode`1.Get(System.Int32)">
            <summary>
            Returns one TreeNode at a specific index in this TreeNode's Sub Nodes.
            </summary>
            <param name="index">Index of TreeNode to return.</param>
            <returns>TreeNode at index specified.</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.TreeNode`1.ToString">
            <summary>
            Returns a String representation of this TreeNode and all the Sub Nodes.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.TreeNode`1.GetString(PloobsEngine.DataStructure.TreeNode{`0})">
            <summary>
            Helper method for ToString().
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.TreeNode`1.Value">
            <summary>
            Gets and sets the value of this Tree Node.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.TreeNode`1.SubNodes">
            <summary>
            Gets and sets SubNodes.
            </summary>
        </member>
        <member name="T:PloobsEngine.DataStructure.Pool`1">
            <summary>
            A collection that maintains a set of class instances to allow for recycling
            instances and minimizing the effects of garbage collection.
            </summary>
            <typeparam name="T">The type of object to store in the Pool. Pools can only hold class types.</typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.Pool`1.#ctor(System.Int32,System.Boolean,System.Predicate{`0},System.Func{`0})">
            <summary>
            Creates a new pool with a specific starting size.
            </summary>
            <param name="initialSize">The initial size of the pool.</param>
            <param name="resizes">Whether or not the pool is allowed to increase its size as needed.</param>
            <param name="validateFunc">A predicate used to determine if a given object is still valid.</param>
            <param name="allocateFunc">A function used to allocate an instance for the pool.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.Pool`1.CleanUp">
            <summary>
            Cleans up the pool by checking each valid object to ensure it is still actually valid.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.Pool`1.New">
            <summary>
            Returns a new object from the Pool.
            </summary>
            <returns>The next object in the pool if available, null if all instances are valid.</returns>
        </member>
        <member name="P:PloobsEngine.DataStructure.Pool`1.Initialize">
            <summary>
            Gets or sets a delegate used for initializing objects before returning them from the New method.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.Pool`1.Deinitialize">
            <summary>
            Gets or sets a delegate that is run when an object is moved from being valid to invalid
            in the CleanUp method.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.Pool`1.ValidCount">
            <summary>
            Gets the number of valid objects in the pool.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.Pool`1.InvalidCount">
            <summary>
            Gets the number of invalid objects in the pool.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.Pool`1.Item(System.Int32)">
            <summary>
            Returns a valid object at the given index. The index must fall in the range of [0, ValidCount].
            </summary>
            <param name="index">The index of the valid object to get</param>
            <returns>A valid object found at the index</returns>
        </member>
        <member name="T:PloobsEngine.SceneControl.IPostEffect">
            <summary>
            IPost Effect Specification
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IPostEffect.Init(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory)">
            <summary>
            Initiates the specified Post Effect.
            Called by the engine
            </summary>        
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IPostEffect.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.GameTime,PloobsEngine.Engine.GraphicInfo,PloobsEngine.SceneControl.IWorld,System.Boolean)">
            <summary>
            Apply the post effect
            </summary>
            <param name="ImageToProcess">The image to process.</param>
            <param name="rHelper">The r helper.</param>
            <param name="gt">The gt.</param>
            <param name="GraphicInfo">The graphic info.</param>
            <param name="world">The world.</param>
            <param name="useFloatBuffer">if set to <c>true</c> [use float buffer].</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IPostEffect.PostEffectType">
            <summary>
            Gets or sets the type of the post effect.
            </summary>
            <value>
            The type of the post effect.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IPostEffect.Priority">
            <summary>
            Gets the priority in relation with others PostEffects        
            Lower the number, first the effect will be applied
            0 By Default
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IPostEffect.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:PloobsEngine.SceneControl.IPostEffect"/> is enabled.
            Enabled by default
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.SceneControl.PostEffectType">
            <summary>
            Defines in what render the post effect works
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.Deferred">
            <summary>
            Only on Deferred
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.Forward3D">
            <summary>
            only on Forward Hidef
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.Forward2D">
            <summary>
            Works in 2D Also Hidef
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.WindowsPhoneAndReach">
            <summary>
            Works on WindowsPhoneAndReach (2D and 3D) 
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.AllHidef">
            <summary>
            Works in both renders for PC Hidef
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.PostEffectType.All">
            <summary>
            Works in all renders (Designed to run on Phone7)
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.IDeferredGBuffer">
            <summary>
            GBUffer generation specification
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.SetGBuffer(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Sets the G buffer.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.ResolveGBuffer(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Resolves the G buffer.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.ClearGBuffer(PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Clears the G buffer.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.PreDrawScene(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Engine.GraphicInfo,System.Collections.Generic.List{PloobsEngine.SceneControl.IObject})">
            <summary>
            Pre Draw the scene.
            Responsible to the PreDraw phase
            </summary>
            <param name="gameTime">The game time.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.DrawScene(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Engine.GraphicInfo,System.Collections.Generic.List{PloobsEngine.SceneControl.IObject})">
            <summary>
            Draws.
            Generate the GBuffer
            </summary>
            <param name="gameTime">The game time.</param>
            <param name="world">The world.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IDeferredGBuffer.LoadContent(PloobsEngine.SceneControl.IContentManager,PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,Microsoft.Xna.Framework.Color)">
            <summary>
            Loads the content.
            </summary>
            <param name="manager">The manager.</param>
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.IDeferredGBuffer.Item(PloobsEngine.SceneControl.GBufferTypes)">
            <summary>
            Return the generated Buffers
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.GBufferTypes">
            <summary>
            Buffer Types used
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.GBufferTypes.DEPH">
            <summary>
            Depth
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.GBufferTypes.COLOR">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.GBufferTypes.NORMAL">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.GBufferTypes.Extra1">
            <summary>
            Glow
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl.GBufferTypes.FINALIMAGE">
            <summary>
            Final image
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl._2DScene.Basic2DRenderTechnich.UsePreDrawPhase">
            <summary>
            Default false
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl._2DScene.Basic2DRenderTechnich.UseDrawComponents">
            <summary>
            Default false
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl._2DScene.Basic2DRenderTechnich.ambientColor">
            <summary>
            Default
            Color.FromNonPremultiplied(10, 10, 10, 255)
            WHEN NOT USING LIGHTS, this is the background color
            </summary>
        </member>
        <member name="F:PloobsEngine.SceneControl._2DScene.Basic2DRenderTechnich.UsePostProcessing">
            <summary>
            Default false
            </summary>
        </member>
        <member name="T:Bnoerj.AI.Steering.PolylinePathway">
            <summary>
            PolylinePathway: a simple implementation of the Pathway protocol.  The path
            is a "polyline" a series of line segments between specified points.  A
            radius defines a volume for the path which is the union of a sphere at each
            point and a cylinder along each segment.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.Bepu.GhostObject">
            <summary>
            Fake Physic object, not simulated
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.GhostObject.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.GhostObject"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="orientation">The orientation.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.GhostObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.GhostObject"/> class.
            DEfault Object in 0,0,0 identity rotation and 1,1,1 scale
            </summary>
        </member>
        <member name="T:PloobsEngine.Cameras.CameraFirstPerson">
            <summary>
            First Person Camera
            To be used in Ploobs Demos and in Debug Mode.
            It is not a camera to be used in Production Environment
            </summary>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraFirstPerson.#ctor(PloobsEngine.Engine.GraphicInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Cameras.CameraFirstPerson"/> class.
            </summary>
            <param name="graphicInfo">The graphic info.</param>
        </member>
        <member name="M:PloobsEngine.Cameras.CameraFirstPerson.#ctor(System.Single,System.Single,Microsoft.Xna.Framework.Vector3,PloobsEngine.Engine.GraphicInfo,System.Boolean)">
            <param name="useAcelerometer">if set to <c>true</c> [use acelerometer].</param>
        </member>
        <member name="P:PloobsEngine.Cameras.CameraFirstPerson.UseAcelerometer">
            <summary>
            Gets or sets a value indicating whether [use acelerometer].
            Is true is passed, the acelerometer is also started
            </summary>
            <value>
              <c>true</c> if [use acelerometer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.IA.Genetic.GA">
            <summary>
            Genetic Algorithm class
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.Genetic.GA.#ctor">
            <summary>
            Default constructor sets mutation rate to 5%, crossover to 80%, population to 100,
            and generations to 2000.
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.Genetic.GA.Go">
            <summary>
            PlayMusic which starts the GA executing.
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.Genetic.GA.RouletteSelection">
            <summary>
            After ranking all the genomes by fitness, use a 'roulette wheel' selection
            method.  This allocates a large probability of selection to those with the 
            highest fitness.
            </summary>
            <returns>Random individual biased towards highest fitness</returns>
        </member>
        <member name="M:PloobsEngine.IA.Genetic.GA.RankPopulation">
            <summary>
            Rank population and sort in order of fitness.
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.Genetic.GA.CreateGenomes">
            <summary>
            Create the *initial* genomes by repeated calling the supplied fitness function
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.Genetic.GA.Elitism">
            <summary>
            Keep previous generation's fittest individual in place of worst in current
            </summary>
        </member>
        <member name="T:PloobsEngine.Trigger.TriggerEvent">
            <summary>
            Special Event used by triggers
            </summary>
        </member>
        <member name="M:PloobsEngine.Trigger.TriggerEvent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Trigger.TriggerEvent"/> class.
            </summary>
            <param name="groupName">Name of the group.</param>
            <param name="TriggerName">Name of the trigger.</param>
        </member>
        <member name="M:PloobsEngine.Trigger.TriggerEvent.FireEvent(PloobsEngine.Trigger.ITrigger)">
            <summary>
            Fires the event.
            </summary>
            <param name="trigger">The trigger.</param>
        </member>
        <member name="P:PloobsEngine.Trigger.TriggerEvent.TriggerName">
            <summary>
            Gets or sets the name of the trigger.
            </summary>
            <value>
            The name of the trigger.
            </value>
        </member>
        <member name="P:PloobsEngine.Trigger.TriggerEvent.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="T:PloobsEngine.Utils.TextureCreator">
            <summary>
            Create Procedural textures
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateColorTexture(System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates the color texture. (one color all texture)
            squared texture
            </summary>
            <param name="size">The size.</param>
            <param name="texCor">The tex cor.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateColorTexture(System.Int32,System.Int32,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Creates the color texture. (one color all texture)
            rectangular texture
            </summary>
            <param name="sizex">The sizex.</param>
            <param name="sizey">The sizey.</param>
            <param name="texCor">The tex cor.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateCompleteRandomColorTexture(System.Int32)">
            <summary>
            Creates the complete random color texture.
            squared size
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateCompleteRandomColorTexture(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the complete random color texture.
            </summary>
            <param name="sizex">The sizex.</param>
            <param name="sizey">The sizey.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateBlackAndWhiteRandomTexture(System.Int32)">
            <summary>
            Creates the black and white random texture. like random, but with the
            same color on all rgb channels
            square
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreateBlackAndWhiteRandomTexture(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the black and white random texture. like random, but with the
            same color on all rgb channels
            </summary>
            <param name="sizex">The sizex.</param>
            <param name="sizey">The sizey.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreatePerlinNoiseTexture(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Creates the perlin noise texture.
            squared
            </summary>
            <param name="size">The size.</param>
            <param name="frequencia">The frequencia.</param>
            <param name="amplitude">The amplitude.</param>
            <param name="persistence">The persistence.</param>
            <param name="octave">The octave.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.TextureCreator.CreatePerlinNoiseTexture(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            Creates the perlin noise texture.
            </summary>
            <param name="sizex">The sizex.</param>
            <param name="sizey">The sizey.</param>
            <param name="frequencia">The frequencia.</param>
            <param name="amplitude">The amplitude.</param>
            <param name="persistence">The persistence.</param>
            <param name="octave">The octave.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.SceneControl.RenderHelper">
            <summary>
            Renderer
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,PloobsEngine.Components.ComponentManager,PloobsEngine.SceneControl.IContentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.RenderHelper"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="componentManager">The component manager.</param>
            <param name="cmanager">The cmanager.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderPreComponents(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Renders the pre components.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="view">The view.</param>
            <param name="projection">The projection.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderPosComponents(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Renders the pos components.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="view">The view.</param>
            <param name="projection">The projection.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderPosWithDepthComponents(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Renders the pos with depth components.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="view">The view.</param>
            <param name="projection">The projection.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PushRasterizerState(Microsoft.Xna.Framework.Graphics.RasterizerState)">
            <summary>
            Pushes the state of the rasterizer.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PeekRasterizerState">
            <summary>
            Peeks the state of the rasterizer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PopRasterizerState">
            <summary>
            Pops the state of the rasterizer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PushBlendState(Microsoft.Xna.Framework.Graphics.BlendState)">
            <summary>
            Pushes one blendstate.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PeekBlendState">
            <summary>
            Peeks the blendstate..
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PopBlendState">
            <summary>
            Pops one blendstate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.SetSamplerState(Microsoft.Xna.Framework.Graphics.SamplerState,System.Int32)">
            <summary>
            Sets the state of the sampler.
            </summary>
            <param name="SamplerState">State of the sampler.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.SetVertexSamplerStates(Microsoft.Xna.Framework.Graphics.SamplerState,System.Int32)">
            <summary>
            Sets the vertex sampler states.
            </summary>
            <param name="SamplerState">State of the sampler.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.GetSamplerState(System.Int32)">
            <summary>
            Gets the state of the sampler.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PushDepthStencilState(Microsoft.Xna.Framework.Graphics.DepthStencilState)">
            <summary>
            Pushes the DepthState.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PeekDepthState">
            <summary>
            Peeks the DepthState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PopDepthStencilState">
            <summary>
            Pops the DepthState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PushRenderTarget(Microsoft.Xna.Framework.Graphics.RenderTarget2D[])">
            <summary>
            Pushes the render target.
            </summary>
            <param name="renderTarget">The render target.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PopRenderTarget">
            <summary>
            Pops the render target.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.PopRenderTargetAsSingleRenderTarget2D">
            <summary>
            Pops the render target.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.Clear(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.ClearOptions,System.Single,System.Int32)">
            <summary>
            Clears actual target.
            </summary>
            <param name="color">The color.</param>
            <param name="options">The options.</param>
            <param name="depth">The depth.</param>
            <param name="stencil">The stencil.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderBatch(PloobsEngine.Modelo.BatchInformation,Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Renders the batch.
            </summary>
            <param name="bi">The BatchInformation</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderUserPrimitive``1(Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Graphics.PrimitiveType,``0[],System.Int32,System.Int32)">
            <summary>
            Renders user primitive.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="effect">The effect.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
            <param name="verts">The verts.</param>
            <param name="vertexOffset">The vertex offset.</param>
            <param name="primitiveCount">The primitive count.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderUserIndexedPrimitive``1(Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Graphics.PrimitiveType,``0[],System.Int32,System.Int32,System.Int16[],System.Int32,System.Int32)">
            <summary>
            Renders user indexed primitive. 16 bits indices
            </summary>
            <typeparam name="T"></typeparam>
            <param name="effect">The effect.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
            <param name="verts">The verts.</param>
            <param name="vertexOffset">The vertex offset.</param>
            <param name="vertesCount">The vertes count.</param>
            <param name="indices">The indices.</param>
            <param name="indexOffset">The index offset.</param>
            <param name="primitiveCount">The primitive count.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderUserIndexedPrimitive``1(Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Graphics.PrimitiveType,``0[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Renders user indexed primitive. 32 bits indices
            </summary>
            <typeparam name="T"></typeparam>
            <param name="effect">The effect.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
            <param name="verts">The verts.</param>
            <param name="vertexOffset">The vertex offset.</param>
            <param name="vertesCount">The vertes count.</param>
            <param name="indices">The indices.</param>
            <param name="indexOffset">The index offset.</param>
            <param name="primitiveCount">The primitive count.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderBatch(PloobsEngine.Modelo.BatchInformation)">
            <summary>
            Renders the batch.
            </summary>
            <param name="bi">The BatchInformation .</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTextComplete(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Boolean,Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Renders the text complete. (THIS FUNCTION ALREADY CALLS BEGIN AND END)
            </summary>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="transform">The transform.</param>
            <param name="font">The font.</param>
            <param name="resyncState">if set to <c>true</c> [resync state].</param>
            <param name="SpriteSortMode">The sprite sort mode.</param>
            <param name="samplerState">State of the sampler.</param>
            <param name="blenderState">State of the blender.</param>
            <param name="rasterizerState">State of the rasterizer.</param>
            <param name="depthState">State of the depth.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderText(System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Renders the texture.
            CALL THIS ONLY AFTER RenderBegin
            AFTER DRAWING ALL THE TEXTURES CALL RenderEnd
            </summary>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="scale">The scale.</param>
            <param name="color">The color.</param>
            <param name="font">The font.</param>
            <param name="rotation">The rotation.</param>
            <param name="effects">The effects.</param>
            <param name="layerDepth">The layer depth.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderText(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Renders the text.
            </summary>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="scale">The scale.</param>
            <param name="color">The color.</param>
            <param name="font">The font.</param>
            <param name="rotation">The rotation.</param>
            <param name="effects">The effects.</param>
            <param name="layerDepth">The layer depth.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderBegin(Microsoft.Xna.Framework.Matrix,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Begin render Texture.
            DO NOT USE THIS WITH RenderTextureComplete (RenderTextureComplete does all the job inside)
            </summary>
            <param name="transform">The transform.</param>
            <param name="source">The source.</param>
            <param name="SpriteSortMode">The sprite sort mode.</param>
            <param name="samplerState">State of the sampler.</param>
            <param name="blenderState">State of the blender.</param>
            <param name="rasterizerState">State of the rasterizer.</param>
            <param name="depthState">State of the depth.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle})">
            <summary>
            Renders the texture.
            CALL THIS ONLY AFTER RenderBegin
            AFTER DRAWING ALL THE TEXTURES CALL RenderEnd
            </summary>
            <param name="texture">The texture.</param>
            <param name="color">The color.</param>
            <param name="destination">The destination.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Renders the texture.
            CALL THIS ONLY AFTER RenderBegin
            AFTER DRAWING ALL THE TEXTURES CALL RenderEnd
            </summary>
            <param name="texture">The texture.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="rotation">The rotation.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
            <param name="SpriteEffects">The sprite effects.</param>
            <param name="layerdepth">The layerdepth.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTexture(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Renders the texture.
            CALL THIS ONLY AFTER RenderBegin
            AFTER DRAWING ALL THE TEXTURES CALL RenderEnd
            </summary>
            <param name="texture">The texture.</param>
            <param name="position">The position.</param>
            <param name="sourceRectangle">The source rectangle.</param>
            <param name="color">The color.</param>
            <param name="rotation">The rotation.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
            <param name="SpriteEffects">The sprite effects.</param>
            <param name="layerdepth">The layerdepth.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderEnd(System.Boolean)">
            <summary>
            End Rendering the texture
            ONLY USE THIS if you call RenderBegin BEFORE
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTextureComplete(Microsoft.Xna.Framework.Graphics.Texture2D,System.Boolean)">
            <summary>
            Renders the texture (Begin, Texture,End).
            </summary>
            <param name="texture">The texture.</param>
            <param name="resyncState">if set to <c>true</c> [resync state].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTextureComplete(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Matrix,System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Boolean,Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Renders the texture (Begin, render , End)
            </summary>
            <param name="texture">The texture.</param>
            <param name="color">The color.</param>
            <param name="destination">The destination.</param>
            <param name="transform">The transform.</param>
            <param name="source">The source.</param>
            <param name="SpriteSortMode">The sprite sort mode.</param>
            <param name="samplerState">State of the sampler.</param>
            <param name="blenderState">State of the blender.</param>
            <param name="rasterizerState">State of the rasterizer.</param>
            <param name="depthState">State of the depth.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.ResyncStates">
            <summary>
            Resyncs the Device States
            THIS IS BECAUSE THE SPRITEBATCH KILLS THE RENDER STATES, NO SAVE STATE. XNA DOCUMENTATION FAILS !!!!
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTextureToFullScreenSpriteBatch(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.BlendState,System.Boolean)">
            <summary>
            Renders the texture to full screen using sprite batch.
            </summary>
            <param name="scene">The scene.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderTextureToFullScreenSpriteBatch(System.String,Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.BlendState,System.Boolean)">
            <summary>
            Renders the texture to full screen using sprite batch.
            </summary>
            <param name="texture">The texture name (already in this class).</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.RenderHelper.RenderSceneWithBasicMaterial(PloobsEngine.SceneControl.IWorld,Microsoft.Xna.Framework.GameTime,System.Collections.Generic.List{PloobsEngine.SceneControl.IObject},Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix,System.Boolean,System.Boolean)">
            <summary>
            Renders the scene without material.
            Uses XNA Basic Effect
            </summary>
            <param name="world">The world.</param>
            <param name="gt">The gt.</param>
            <param name="objListException">The obj list exception.(objects in this list wont be rendered) - can be null</param>
            <param name="view">The view.</param>
            <param name="projection">The projection.</param>
            <param name="drawComponentsPreDraw">if set to <c>true</c> [draw components with pre draw setting also].</param>
            <param name="useCuller">if set to <c>true</c> [use culler].</param>
        </member>
        <member name="P:PloobsEngine.SceneControl.RenderHelper.Item(System.String)">
            <summary>
            Gets or sets a scene with the specified name.
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.BloomPostEffect">
            <summary>
            Bloom Post Effect
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:PloobsEngine.SceneControl.BloomPostEffect.BrightNess" -->
        <member name="P:PloobsEngine.SceneControl.BloomPostEffect.BloomThreshold">
            <summary>
            Bloom Parameter
            0 TO 255
            </summary>
        </member>
        <member name="T:PloobsEngine.Material.ForwardXNABasicShaderDescription">
            <summary>
            Description that helps building the XNABasicShader
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShaderDescription.#ctor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardXNABasicShaderDescription"/> struct.
            </summary>
            <param name="AmbientColor">Color of the ambient.</param>
            <param name="EmissiveColor">Color of the emissive.</param>
            <param name="SpecularColor">Color of the specular.</param>
            <param name="specularPower">The specular power.</param>
            <param name="alpha">The alpha.</param>
            <param name="EnableLightning">if set to <c>true</c> [enable lightning].</param>
            <param name="EnableTexture">if set to <c>true</c> [enable texture].</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShaderDescription.Default">
            <summary>
            Defaults this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Material.ForwardXNABasicShader">
            <summary>
            XNA basic shader
            Wrapper to xna basic effect
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShader.#ctor(PloobsEngine.Material.ForwardXNABasicShaderDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardXNABasicShader"/> class.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardXNABasicShader"/> class.
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShader.Initialize(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="ginfo"></param>
            <param name="factory"></param>
            <param name="obj"></param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShader.SetDescription(PloobsEngine.Material.ForwardXNABasicShaderDescription)">
            <summary>
            Sets the description.
            </summary>
            <param name="desc">The desc.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardXNABasicShader.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Draw
            </summary>
            <param name="gt">gametime</param>
            <param name="obj">the obj</param>
            <param name="render">The render.</param>
            <param name="cam">The cam.</param>
            <param name="lights"></param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardXNABasicShader.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="T:PloobsEngine.Material.ForwardMaterial">
            <summary>
            Forward Material
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.#ctor(PloobsEngine.Material.IShader)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardMaterial"/> class.
            </summary>
            <param name="shader">The shader.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.Initialization(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializations the specified Material.
            </summary>
            <param name="ginfo">The ginfo.</param>
            <param name="factory">The factory.</param>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.PreDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IWorld,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pre drawn Function.
            Called before all the objects are draw
            </summary>
            <param name="gt">The gt.</param>
            <param name="mundo">The mundo.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.PosDrawnPhase(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Pos drawn Function.
            Called after all objects are Draw
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.Drawn(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight},PloobsEngine.SceneControl.RenderHelper)">
            <summary>
            Normal Drawn Function.
            </summary>
            <param name="gt">The gt.</param>
            <param name="obj">The obj.</param>
            <param name="cam">The cam.</param>
            <param name="lights">The lights.</param>
            <param name="render">The render.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardMaterial.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Update.
            </summary>
            <param name="gametime">The gametime.</param>
            <param name="obj">The obj.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardMaterial.Shadder">
            <summary>
            Gets or sets the shadder.
            </summary>
            <value>
            The shadder.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.ForwardMaterial.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="P:PloobsEngine.Material.ForwardMaterial.CanCreateShadow">
            <summary>
            Gets or sets a value indicating whether this material is [affected by shadow].
            </summary>
            <value>
              <c>true</c> if [affected by shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.Entity.EntityMapper">
            <summary>
            Manage all entities
            Responsable for setting the ids, managing tags and RecieverEntities    
            Its a singleton
            </summary>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.getInstance">
            <summary>
            Gets the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.AddEntity(PloobsEngine.Entity.IEntity)">
            <summary>
            Add and entity and sets its id
            </summary>
            <param name="Agente"></param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.getEntity(System.Int32)">
            <summary>
            Return and entity by id
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.getRecieveEntity(System.Int32)">
            <summary>
            return a RecieverMessageEntity by ID
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.AddgrouptagRecieveEntity(System.String,System.Collections.Generic.IList{PloobsEngine.MessageSystem.IRecieveMessageEntity})">
            <summary>
            Add a list of RecieverMessageEntity 
            int a tag (id the tag do not exist , create it)
            </summary>
            <param name="tag">tag</param>
            <param name="Agente">agents list</param>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.RemovegrouptagRecieveEntity(System.String,PloobsEngine.MessageSystem.IRecieveMessageEntity)">
            <summary>
            Remove one IRecieveMessageEntity from a tag
            </summary>
            <param name="tag"></param>
            <param name="Agente"></param>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.AddgrouptagRecieveEntity(System.String,PloobsEngine.MessageSystem.IRecieveMessageEntity)">
            <summary>
            Add ont IrecieveMessageEntity int a tag(create the tag if sont exist)
            </summary>
            <param name="tag"></param>
            <param name="Agente"></param>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.GetTagRecieveEntity(System.String)">
            <summary>
            Return a list of RecieveEntities that has the parameter tag
            </summary>
            <param name="tag">tag</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.GetAllEntities">
            <summary>
            return all entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.GetAllRecieveEntities">
            <summary>
            return all IRecieveMessageEntity entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.CheckEntity(System.Int32)">
            <summary>
            Checks if entity with parameter id exist.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.RemoveEntity(System.Int32)">
            <summary>
            Remove the entity
            THE ID USED BY THIS ENTITY WILL NOT USED AGAIN (EVEN AFTER THE REMOVE)
            </summary>
            <param name="cod">id</param>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.ClearAllEntries">
            <summary>
            Clears all entries. (REMOVE ALL ENTITIES)
            RESET FUNCTION
            </summary>
        </member>
        <member name="M:PloobsEngine.Entity.EntityMapper.RemoveEntity(PloobsEngine.Entity.IEntity)">
            <summary>
            REMOVE AN ENTITY
            </summary>
            <param name="ent"></param>
        </member>
        <member name="T:PloobsEngine.Engine.Logger.LogLevel">
            <summary>
            Log Levels
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.Logger.LogLevel.FatalError">
            <summary>
            WHen a Fatal error occurrs, Normally the application also throw an exception when this happen
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.Logger.LogLevel.RecoverableError">
            <summary>
            Errors that the engine can handle, but the user should correct
            </summary>
        </member>
        <member name="F:PloobsEngine.Engine.Logger.LogLevel.Warning">
            <summary>
            When something happens that can be an error
            </summary>
        </member>
        <member name="T:PloobsEngine.Engine.OnGraphicInfoChange">
            <summary>
            When GraphicInfo changes
            </summary>
            <param name="newGraphicInfo">The new graphic info.</param>
        </member>
        <member name="T:PloobsEngine.Engine.GraphicInfo">
            <summary>
            Contains Graphics Informations about the current execution
            </summary>
        </member>
        <member name="M:PloobsEngine.Engine.GraphicInfo.CheckIfRenderTargetFormatIsSupported(Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat,System.Boolean,System.Int32,Microsoft.Xna.Framework.Graphics.GraphicsProfile)">
            <summary>
            Checks if render target properties combination is supported.
            </summary>
            <param name="format">The format.</param>
            <param name="depthFormat">The depth format.</param>
            <param name="useMipMap">if set to <c>true</c> [use mip map].</param>
            <param name="multisample">The multisample.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Engine.GraphicInfo.GetRenderTargetSupportedFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@,Microsoft.Xna.Framework.Graphics.DepthFormat@,System.Boolean@,System.Int32@,Microsoft.Xna.Framework.Graphics.GraphicsProfile)">
            <summary>
            Gets the render target supported format.
            </summary>
            <param name="format">The format.</param>
            <param name="depthFormat">The depth format.</param>
            <param name="useMipMap">if set to <c>true</c> [use mip map].</param>
            <param name="multisample">The multisample.</param>
            <param name="GraphicsProfile">The graphics profile.</param>
        </member>
        <member name="M:PloobsEngine.Engine.GraphicInfo.GetBackBufferSupportedFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@,Microsoft.Xna.Framework.Graphics.DepthFormat@,System.Boolean@,System.Int32@,Microsoft.Xna.Framework.Graphics.GraphicsProfile)">
            <summary>
            Gets the back buffer supported format.
            </summary>
            <param name="format">The format.</param>
            <param name="depthFormat">The depth format.</param>
            <param name="useMipMap">if set to <c>true</c> [use mip map].</param>
            <param name="multisample">The multisample.</param>
            <param name="GraphicsProfile">The graphics profile.</param>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.GraphicsAdapter">
            <summary>
            Graphic Adapter
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.UseAnisotropicFiltering">
            <summary>
            Gets a value indicating whether [use anisotropic filtering].
            </summary>
            <value>
            	<c>true</c> if [use anisotropic filtering]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.SamplerState">
            <summary>
            Sampler to be used when possible
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.UseMipMap">
            <summary>
            Gets a value indicating whether [use mip map].
            </summary>
            <value>
              <c>true</c> if [use mip map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.DepthFormat">
            <summary>
            BackBuffer Depth Format
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.MultiSample">
            <summary>
            Back Buffer Multisample
            </summary>
        </member>
        <member name="E:PloobsEngine.Engine.GraphicInfo.OnGraphicInfoChange">
            <summary>
            Occurs when [on graphic info change].
            </summary>
        </member>
        <member name="E:PloobsEngine.Engine.GraphicInfo.DeviceReset">
            <summary>
            Occurs when [device reset].
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.BackBufferHeight">
            <summary>
            BackBufferHeight
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.BackBufferWidth">
            <summary>
            BackBufferWidth
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.FullScreenRectangle">
            <summary>
            FullScreenRectangle
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.HalfPixel">
            <summary>
            HalfPixel (used in DX 9 shaders)
            </summary>
        </member>
        <member name="P:PloobsEngine.Engine.GraphicInfo.Viewport">
            <summary>
            Viewport
            </summary>
        </member>
        <member name="T:PloobsEngine.Material.ForwardDualTextureShader">
            <summary>
            USes the TextureType.MULTITEX1 and the TextureType.Difuse as textures
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardDualTextureShader.Initialize(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="ginfo"></param>
            <param name="factory"></param>
            <param name="obj"></param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardDualTextureShader.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Draw
            </summary>
            <param name="gt">gametime</param>
            <param name="obj">the obj</param>
            <param name="render">The render.</param>
            <param name="cam">The cam.</param>
            <param name="lights"></param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardDualTextureShader.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="T:PloobsEngine.Audio.SoundAudioPlayer">
            <summary>
            SoundPlayer
            </summary>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.#ctor(PloobsEngine.SceneControl.IContentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Audio.SoundAudioPlayer"/> class.
            </summary>
            <param name="cmanager">The cmanager.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.PlaySoundEffect(System.String)">
            <summary>
            Plays the effect song.
            </summary>
            <param name="songName">Name of the song.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.PauseSoundEffect(System.String)">
            <summary>
            Pauses the effect song.
            </summary>
            <param name="songName">Name of the song.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.ResumeSoundEffect(System.String)">
            <summary>
            Resumes the specified song name.
            </summary>
            <param name="songName">Name of the song.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.StopSoundEffect(System.String)">
            <summary>
            Stops the effect song.
            </summary>
            <param name="songName">Name of the song.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.SoundState(System.String)">
            <summary>
            State of the parameter songName
            </summary>
            <param name="songName">Name of the song.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.AddSoundToRepository(System.String,System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Add A Sound Effect to the Repo
            </summary>
            <param name="musicNamePath">filepath</param>
            <param name="musicName">Name used to refer to this effect latter</param>
            <param name="volume">between 0 - 1</param>
            <param name="pitch">between -1 to 1 (octaves)</param>
            <param name="pan">between -1 to 1 (left - right)</param>
            <param name="isLooped">if set to <c>true</c> [is looped].</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.RemoveSoundFromRepository(System.String)">
            <summary>
            Removes the effect from repository.
            </summary>
            <param name="soundEffectName">Name of the sound effect.</param>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.HasSoundEffect(System.String)">
            <summary>
            Determines whether [This Audio Player has] [the specified sound effect name].
            </summary>
            <param name="soundEffectName">Name of the sound effect.</param>
            <returns>
              <c>true</c> if [has the specified sound effect] otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.GetSoundEffectInstance(System.String)">
            <summary>
            Gets the sound effect instance.
            The SimpleSoundEffect MUST BE ALREADY IN THE REPO !!!
            TO CREATE A Non SHARED SIMPLESOUNDEFFECT, USE THE SIMPLESOUNDEFFECT CONSTRUTOR.
            </summary>
            <param name="soundEffectName">Name of the sound effect.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Audio.SoundAudioPlayer.RemoveAllSounds">
            <summary>
            Removes all sounds.
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.BeingRemoved">
            <summary>
            Called when the object is being removed
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.OnUpdate">
            <summary>
            Called on every update
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.OnRecieveMessage">
            <summary>
            called when the object recieves a message
            </summary>
            <param name="Reciever">The reciever.</param>
            <param name="mes">The mes.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.OnHasMoved">
            <summary>
            Called when the object moves
            </summary>
            <param name="Reciever">The reciever.</param>
        </member>
        <member name="T:PloobsEngine.SceneControl.IObject">
            <summary>
            Basic Object 
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.#ctor(PloobsEngine.Material.IMaterial,PloobsEngine.Modelo.IModelo,PloobsEngine.Physics.IPhysicObject)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.IObject"/> class.
            </summary>
            <param name="Material">The material.</param>
            <param name="Modelo">The modelo.</param>
            <param name="PhysicObject">The physic object.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.IObject"/> class.
            Let the user free to implement the IObject the way they want
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.UpdateObject(Microsoft.Xna.Framework.GameTime,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Updates the object.
            </summary>
            <param name="gt">The gt.</param>
            <param name="cam">The cam.</param>
            <param name="luzes">The luzes.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.HandleThisMessageType(PloobsEngine.MessageSystem.SenderType)">
            <summary>
            Handles a message from determined sender type.
            </summary>
            <param name="type">Sender type.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.HandleMessage(PloobsEngine.MessageSystem.Message)">
            <summary>
            Handles the message.
            </summary>
            <param name="mes">The mes.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.RemoveThisObject">
            <summary>
            Removes this object.
            Called internally
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>
            the id
            </returns>
        </member>
        <member name="M:PloobsEngine.SceneControl.IObject.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="E:PloobsEngine.SceneControl.IObject.OnRecieveMessage">
            <summary>
            Occurs when [on recieve message].
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl.IObject.OnBeingRemoved">
            <summary>
            Called when this object is removed from the world
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl.IObject.OnHasMoved">
            <summary>
            Raised when objects moves
            </summary>
        </member>
        <member name="E:PloobsEngine.SceneControl.IObject.OnUpdate">
            <summary>
            Called all the time the object is updated
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.PhysicObject">
            <summary>
            Gets or sets the physic object.
            </summary>
            <value>
            The physic object.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.Modelo">
            <summary>
            Gets or sets the modelo.
            </summary>
            <value>
            The modelo.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.Material">
            <summary>
            Gets or sets the material.
            </summary>
            <value>
            The material.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.WorldMatrix">
            <summary>
            Gets the world matrix.
            </summary>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:PloobsEngine.SceneControl.IObject.IObjectAttachment">
            <summary>
            Gets or sets the Iobject atachtment.
            </summary>
            <value>
            The I object atachtment.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "T:PloobsEngine.SceneControl.ScreenManager" -->
        <member name="M:PloobsEngine.SceneControl.ScreenManager.#ctor(PloobsEngine.Engine.GraphicInfo@,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IContentManager,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Engine.EngineStuff)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.SceneControl.ScreenManager"/> class.
            </summary>
            <param name="GraphicInfo">The graphic info.</param>
            <param name="factory">The factory.</param>
            <param name="contentManager">The content manager.</param>
            <param name="render">The render.</param>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.ScreenManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows each screen to run logic.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.ScreenManager.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Tells each screen to draw itself.
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl.ScreenManager.AddScreen(PloobsEngine.SceneControl.IScreen,PloobsEngine.SceneControl.IScreen,System.Boolean)">
            <summary>
            Adds a new screen to the screen manager.
            </summary>
            <param name="definitiveScreen">The definitive screen.</param>
            <param name="LoadingScreen">The loading screen.</param>
            <param name="loadAndInitScreen">if set to <c>true</c> [load and init definitiveScreen].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.ScreenManager.RemoveScreen(PloobsEngine.SceneControl.IScreen,System.Boolean)">
            <summary>
            Removes a screen from the screen manager. 
            </summary>
            <param name="screen">The screen.</param>
            <param name="cleanUp">if set to <c>true</c> [clean up the screen].</param>
        </member>
        <member name="M:PloobsEngine.SceneControl.ScreenManager.GetScreens">
            <summary>
            Expose an array holding all the screens. We return a copy rather
            than the real master list, because screens should only ever be added
            or removed using the AddScreen and RemoveScreen methods.
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.IAnimatedController">
            <summary>
            Animation Controler Interface
            User interact with animated model by this controller
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.ChangeAnimation(System.String,PloobsEngine.Modelo.Animation.AnimationChangeMode)">
            <summary>
            Changes the animation.
            </summary>
            <param name="animationName">Name of the animation.</param>
            <param name="mode">The interpolation mode.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the controller.
            CAlled by the API
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.ChangeInterpolationMode(PloobsEngine.Modelo.Animation.AnimationInterpolationMode)">
            <summary>
            Changes the interpolation mode.
            </summary>
            <param name="im">The im.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.GetBoneTransformations">
            <summary>
            Gets the bone transformations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.TransformBone(System.String,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms the bone.
            </summary>
            <param name="boneName">Name of the bone.</param>
            <param name="rot">The rot.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.IAnimatedController.GetBoneAbsoluteTransform(System.String)">
            <summary>
            Gets the bone absolute transform.
            </summary>
            <param name="boneName">Name of the bone.</param>
            <returns></returns>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.AnimationChangeMode">
            <summary>
            AnimationChangeMode
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationChangeMode.Blend">
            <summary>
            Use Blending
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationChangeMode.Normal">
            <summary>
            Dont use blending
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.AnimationInterpolationMode">
            <summary>
            interpolations Modes
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationInterpolationMode.No_Interpolation">
            <summary>
            No interpolation, Dont use this !!!
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationInterpolationMode.Linear_Interpolation">
            <summary>
            Linear
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationInterpolationMode.Cubic_Interpolation">
            <summary>
            Cubic
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.Animation.AnimationInterpolationMode.Spherical_Interpolation">
            <summary>
            Spherical
            </summary>
        </member>
        <member name="M:PloobsEngine.SceneControl._2DScene.IObject2DAtachtment.Update(PloobsEngine.SceneControl._2DScene.I2DObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the atachment.
            </summary>
            <param name="obj">The obj.</param>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.TextureInformation.getTexture(PloobsEngine.Modelo.TextureType)">
            <summary>
            Gets one texture of the model.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.TextureInformation.SetTexture(System.String,PloobsEngine.Modelo.TextureType)">
            <summary>
            Sets the texture.
            </summary>
            <param name="textureName">Name of the texture.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.TextureInformation.LoadTexture">
            <summary>
            Load the model
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.TextureInformation.SetTexture(Microsoft.Xna.Framework.Graphics.Texture2D,PloobsEngine.Modelo.TextureType)">
            <summary>
            Sets the texture.
            </summary>
            <param name="tex">The tex.</param>
            <param name="type">The type.</param>
        </member>
        <member name="E:PloobsEngine.Modelo.TextureInformation.OnTextureChange">
            <summary>
            Occurs when [on texture change].
            </summary>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.ParalaxName">
            <summary>
            Gets or sets the name of the paralax texture.
            </summary>
            <value>
            The name of the paralax.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.GlowName">
            <summary>
            Gets or sets the name of the glow texture.
            </summary>
            <value>
            The name of the glow.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.BumpMapName">
            <summary>
            Gets or sets the name of the bump map.
            </summary>
            <value>
            The name of the bump map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.SpecularMapName">
            <summary>
            Gets or sets the name of the specular map.
            </summary>
            <value>
            The name of the specular map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.DiffuseMapName">
            <summary>
            Gets or sets the name of the diffuse map.
            </summary>
            <value>
            The name of the diffuse map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.MultiTexture1MapName">
            <summary>
            Gets or sets the name of the multi texture1 map.
            </summary>
            <value>
            The name of the multi texture1 map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.MultiTexture2MapName">
            <summary>
            Gets or sets the name of the multi texture2 map.
            </summary>
            <value>
            The name of the multi texture2 map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.MultiTexture3MapName">
            <summary>
            Gets or sets the name of the multi texture3 map.
            </summary>
            <value>
            The name of the multi texture3 map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.MultiTexture4MapName">
            <summary>
            Gets or sets the name of the multi texture4 map.
            </summary>
            <value>
            The name of the multi texture4 map.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.TextureInformation.HeightMapName">
            <summary>
            Gets or sets the name of the height map.
            </summary>
            <value>
            The name of the height map.
            </value>
        </member>
        <member name="T:PloobsEngine.Utils.Curve3D">
            <summary>
            Represents a Curve3D 
            using one XNA Curve for each axis
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.#ctor(Microsoft.Xna.Framework.CurveLoopType)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Utils.Curve3D"/> class.
            </summary>
            <param name="CurveLoopType">Type of the curve loop.</param>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Utils.Curve3D"/> class.
            Linear Curve Loop Type
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.SetTangents">
            <summary>
            Sets the tangents.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.SetCurveKeyTangent(Microsoft.Xna.Framework.CurveKey@,Microsoft.Xna.Framework.CurveKey@,Microsoft.Xna.Framework.CurveKey@)">
            <summary>
            Sets the curve key tangent.
            </summary>
            <param name="prev">The prev.</param>
            <param name="cur">The cur.</param>
            <param name="next">The next.</param>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.AddPoint(Microsoft.Xna.Framework.Vector3,System.Single)">
            <summary>
            Adds the point.
            </summary>
            <param name="point">The point.</param>
            <param name="time">The time.</param>
        </member>
        <member name="M:PloobsEngine.Utils.Curve3D.GetPointOnCurve(System.Single)">
            <summary>
            Gets the point on curve.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Utils.PolygonUnion.EdgeIntersects(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Checks if the line segments intersect.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.PolygonUnion.Intersects(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2[])">
            <summary>
            Checks if two polygons intersect.
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.PolygonUnion.ProjectPoly(Microsoft.Xna.Framework.Vector2[],Microsoft.Xna.Framework.Vector2,System.Single@,System.Single@)">
            <summary>
            Projects a polygon onto the axis, giving the maximum and minimum positions.
            </summary>
            <param name="points">Points that are in world space with origin at the centre</param>
        </member>
        <member name="M:PloobsEngine.Physic.PhysicObjects.BepuObject.GravitationalFieldObject.#ctor(BEPUphysics.UpdateableSystems.ForceFields.ForceFieldShape,Microsoft.Xna.Framework.Vector3,System.Single,System.Single,PloobsEngine.Physics.BepuPhysicWorld)">
            <summary>
            Creates a gravitational field.
            </summary>
            <param name="shape">Shape representing the volume of the force field.</param>
            <param name="origin">Location that entities will be pushed toward.</param>
            <param name="multiplier">Represents the gravitational constant of the field times the effective mass at the center of the field.</param>
            <param name="maxForce">Maximum force the field can apply.</param>
            <param name="physicWorld">The physic world.</param>
        </member>
        <member name="M:PloobsEngine.Physic.PhysicObjects.BepuObject.GravitationalFieldObject.CalculateImpulse(BEPUphysics.Entities.Entity,System.Single,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Calculates the gravitational force to apply to the entity.
            </summary>
            <param name="e">Target of the impulse.</param>
            <param name="dt">Time since the last frame in simulation seconds.</param>
            <param name="impulse">Force to apply at the given position.</param>
        </member>
        <member name="P:PloobsEngine.Physic.PhysicObjects.BepuObject.GravitationalFieldObject.Multiplier">
            <summary>
            Gets or sets the gravitational constant of the field times the effective mass at the center of the field.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physic.PhysicObjects.BepuObject.GravitationalFieldObject.MaxForce">
            <summary>
            Gets or sets the maximum force that can be applied by the field.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physic.PhysicObjects.BepuObject.GravitationalFieldObject.Origin">
            <summary>
            Gets or sets the center of the field that entities will be pushed toward.
            </summary>
        </member>
        <member name="P:PloobsEngine.Material2D.Basic2DTextureMaterial.CastShadow">
            <summary>
            Gets or sets a value indicating whether [cast shadow].
            Default true
            </summary>
            <value>
              <c>true</c> if [cast shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.Light.SpotLightPE">
            <summary>
            Deferred Spot Light
            </summary>
        </member>
        <member name="M:PloobsEngine.Light.SpotLightPE.#ctor">
            <summary>
            Serialization 
            </summary>
        </member>
        <member name="M:PloobsEngine.Light.SpotLightPE.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Light.SpotLightPE"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="direction">The direction.</param>
            <param name="coneDecay">The cone decay.</param>
            <param name="lightRadius">The light radius.</param>
            <param name="Color">The color.</param>
            <param name="lightAngleCosine">The light angle cosine.</param>
            <param name="lightIntensity">The light intensity.</param>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.ProjMatrix">
            <summary>
            Gets or sets the proj matrix.
            </summary>
            <value>
            The proj matrix.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.ViewMatrix">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>
            The view matrix.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.LightIntensity">
            <summary>
            Gets or sets the light intensity.
            </summary>
            <value>
            The light intensity.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.LightAngleCosine">
            <summary>
            Gets or sets the light angle cosine.
            </summary>
            <value>
            The light angle cosine.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.LightRadius">
            <summary>
            Gets or sets the light radius.
            </summary>
            <value>
            The light radius.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.ConeDecay">
            <summary>
            Gets or sets the cone decay.
            </summary>
            <value>
            The cone decay.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:PloobsEngine.Light.SpotLightPE.LightType">
            <summary>
            Gets the type of the light.
            </summary>
            <value>
            The type of the light.
            </value>
        </member>
        <member name="F:PloobsEngine.Features.DebugDraw.DebugLine.effect">
            <summary>
            The basic effect used to draw boxes.
            </summary>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLine.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new box.
            Visible by default
            </summary>
            <param name="BoundingBox">The bounding box.</param>
            <param name="color">The box's color.</param>
        </member>
        <member name="M:PloobsEngine.Features.DebugDraw.DebugLine.Draw(PloobsEngine.SceneControl.RenderHelper,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Draws the box.
            </summary>
            <param name="view">The viewing matrix.</param>
            <param name="projection">The projection matrix.</param>
        </member>
        <member name="T:PloobsEngine.IA.WAYPOINTTYPE">
            <summary>
            EXEMPLOS DE TIPOS DE WAYPONIT
            </summary>
        </member>
        <member name="T:PloobsEngine.Utils.InitConfiguration">
            <summary>
            Global Configurations of the app
            Not used yet
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.InitConfiguration.getConf(System.String)">
            <summary>
            Pega uma configuracao do arquivo de configuracao.
            confs sao do tipo confname = value
            </summary>
            <param name="confName">confname</param>
            <returns>value</returns>
        </member>
        <member name="T:PloobsEngine.MessageSystem.Message">
            <summary>
            Message To Be sent
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.Message.#ctor(System.Int32,System.Int32,System.String,PloobsEngine.MessageSystem.Priority,System.Int32,PloobsEngine.MessageSystem.SenderType,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.MessageSystem.Message"/> class.
            </summary>
            <param name="sender">Id of the sender, use -1 to be an undentified sender</param>
            <param name="receiver">Reciever ID, use -1 to send to a Tag group</param>
            <param name="tag">Tag (used to send to a group of entities), if the message will be send to just one reciver, use null here</param>
            <param name="pri">Priority</param>
            <param name="timetodeliver">Time to send the message in MILISECONDS( Use 0 to send in THIS frame and -1 to send NOW)</param>
            <param name="type">Message Type; The engine DONT use this field for NOTHING, its for user control</param>
            <param name="Content">Message Content</param>
            <param name="cod">Message Code, The engine DONT use this field, its for user control</param>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Check">
            <summary>
            Gets or sets the check.
            This is used by the Message deliver to decide id it will check if the
            Reciever exists
            </summary>
            <value>
            The check.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Sender">
            <summary>
            Gets or sets the sender ID.
            </summary>
            <value>
            The sender.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Receiver">
            <summary>
            Gets or sets the receiver ID.
            </summary>
            <value>
            The receiver.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Tag">
            <summary>
            Gets or sets the tag of this message.
            If tag is set, the message will be send to the TAG group, and not to the
            reciever
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Prioridade">
            <summary>
            Gets or sets the Priority.
            </summary>
            <value>
            The prioridade.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Timetodeliver">
            <summary>
            Gets or sets the timetodeliver.
            0 for now
            </summary>
            <value>
            The timetodeliver.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.SenderType">
            <summary>
            Gets or sets the type of the sender.
            </summary>
            <value>
            The type of the sender.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Content">
            <summary>
            Gets or sets the content of the message.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:PloobsEngine.MessageSystem.Message.Cod">
            <summary>
            Gets or sets the message code.
            </summary>
            <value>
            The cod.
            </value>
        </member>
        <member name="T:PloobsEngine.MessageSystem.Priority">
            <summary>
            Message Priority
            </summary>
        </member>
        <member name="F:PloobsEngine.MessageSystem.Priority.URGENT">
            <summary>
            urgent
            </summary>
        </member>
        <member name="F:PloobsEngine.MessageSystem.Priority.HIGH">
            <summary>
            Hight
            </summary>
        </member>
        <member name="F:PloobsEngine.MessageSystem.Priority.MEDIUM">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:PloobsEngine.MessageSystem.Priority.LOW">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:PloobsEngine.MessageSystem.Priority.VERYLOW">
            <summary>
            Very low
            </summary>
        </member>
        <member name="T:PloobsEngine.MessageSystem.SenderType">
            <summary>
            Avaliable Sender Types
            </summary>
        </member>
        <member name="T:PloobsEngine.MessageSystem.Checks">
            <summary>
            Types of checking
            </summary>
        </member>
        <member name="T:PloobsEngine.DataStructure.IPriorityQueue`1">
            <summary>
            Priority queue specification
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.IPriorityQueue`1.Push(`0)">
            <summary>
            Pushes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.IPriorityQueue`1.Pop">
            <summary>
            Pops an item.
            </summary>
            <returns>item popped</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.IPriorityQueue`1.Peek">
            <summary>
            Peeks the top
            </summary>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.IPriorityQueue`1.Update(System.Int32)">
            <summary>
            Updates the specified item i.
            </summary>
            <param name="i">The i.</param>
        </member>
        <member name="T:PloobsEngine.DataStructure.PriorityQueueB`1">
            <summary>
            Priority queue implementation
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.DataStructure.PriorityQueueB`1"/> class.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.DataStructure.PriorityQueueB`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.#ctor(System.Collections.Generic.IComparer{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.DataStructure.PriorityQueueB`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.Push(`0)">
            <summary>
            Push an object onto the PQ
            </summary>
            <param name="O">The new object</param>
            <returns>The index in the list where the object is _now_. This will change when objects are taken from or put onto the PQ.</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.Pop">
            <summary>
            Get the smallest object and remove it.
            </summary>
            <returns>The smallest object</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.Update(System.Int32)">
            <summary>
            Notify the PQ that the object at position i has changed
            and the PQ needs to restore order.
            Since you dont have access to any indexes (except by using the
            explicit IList.this) you should not call this function without knowing exactly
            what you do.
            </summary>
            <param name="i">The index of the changed object.</param>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.Peek">
            <summary>
            Get the smallest object without removing it.
            </summary>
            <returns>The smallest object</returns>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:PloobsEngine.DataStructure.PriorityQueueB`1.RemoveLocation(`0)">
            <summary>
            Removes the item 
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:PloobsEngine.DataStructure.PriorityQueueB`1.Count">
            <summary>
            Gets number of entities.
            </summary>
        </member>
        <member name="P:PloobsEngine.DataStructure.PriorityQueueB`1.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="!:T"/> at the specified index.
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.Animation.AnimatedController">
            <summary>
            Animated Controller concrete
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.#ctor(PloobsEngine.Modelo.Animation.IAnimatedModel,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.Animation.AnimatedController"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="StartAnimationName">Start name of the animation.</param>
            <param name="changeOnlyWhenDifferentAnimation">if set to <c>true</c> [change the current animationonly only when different animation is set].</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.MappActionAnimation(System.String,System.String)">
            <summary>
            Mapps one action to animation.
            When using behaviors for example
            </summary>
            <param name="actionName">Name of the action.</param>
            <param name="animation">The animation.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.TransformBone(System.String,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms the bone.
            </summary>
            <param name="boneName">Name of the bone.</param>
            <param name="rot">The rot.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.GetBoneAbsoluteTransform(System.String)">
            <summary>
            Gets the bone absolute transform.
            </summary>
            <param name="boneName">Name of the bone.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.ChangeAnimation(System.String,PloobsEngine.Modelo.Animation.AnimationChangeMode)">
            <summary>
            Changes the animation.
            </summary>
            <param name="animationName">Name of the animation.</param>
            <param name="mode">The interpolation mode.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the controller.
            CAlled by the API
            </summary>
            <param name="gt">The gt.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.ChangeInterpolationMode(PloobsEngine.Modelo.Animation.AnimationInterpolationMode)">
            <summary>
            Changes the interpolation mode.
            </summary>
            <param name="im">The im.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.Animation.AnimatedController.GetBoneTransformations">
            <summary>
            Gets the bone transformations.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PloobsEngine.Modelo.Animation.AnimatedController.TransitionBetweenAnimationTimeInSeconds">
            <summary>
            Gets or sets the transition between animation time in seconds.
            </summary>
            <value>
            The transition between animation time in seconds.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.Animation.AnimatedController.Speed">
            <summary>
            Gets or sets the animation speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:PloobsEngine.Modelo.Animation.AnimatedController.isLoop">
            <summary>
            Gets or sets a value indicating whether this instance is in loop.
            </summary>
            <value>
              <c>true</c> if this instance is loop; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:PloobsEngine.Material.ForwardGenericBuildInShader`1">
            <summary>    
            Wrapper to xna effects
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardGenericBuildInShader`1.Initialize(PloobsEngine.Engine.GraphicInfo,PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.IObject)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="ginfo"></param>
            <param name="factory"></param>
            <param name="obj"></param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardGenericBuildInShader`1.Draw(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,PloobsEngine.SceneControl.RenderHelper,PloobsEngine.Cameras.ICamera,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Draw
            </summary>
            <param name="gt">gametime</param>
            <param name="obj">the obj</param>
            <param name="render">The render.</param>
            <param name="cam">The cam.</param>
            <param name="lights"></param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardGenericBuildInShader`1.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="M:PloobsEngine.Audio.SimpleSoundEffect.#ctor(PloobsEngine.SceneControl.IContentManager,System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Audio.SimpleSoundEffect"/> class.
            </summary>
            <param name="cmanager">The cmanager.</param>
            <param name="name">The name.</param>
            <param name="volume">The volume.</param>
            <param name="pitch">The pitch(-1 to 1).</param>
            <param name="pan">The pan (-1 to 1).</param>
            <param name="isLooped">if set to <c>true</c> [is looped].</param>
        </member>
        <member name="T:PloobsEngine.Utils.MovingAverage">
            <summary>
            Moving Average class
            </summary>
        </member>
        <member name="F:PloobsEngine.Utils.MovingAverage.m_Data">
            <summary>
            Array of elements
            </summary>
        </member>
        <member name="F:PloobsEngine.Utils.MovingAverage.m_Total">
            <summary>
            Total amount
            </summary>
        </member>
        <member name="F:PloobsEngine.Utils.MovingAverage.m_Size">
            <summary>
            Fixed size of the array
            </summary>
        </member>
        <member name="F:PloobsEngine.Utils.MovingAverage.m_Count">
            <summary>
            How many elements we've got so far
            </summary>
        </member>
        <member name="M:PloobsEngine.Utils.MovingAverage.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="size">Set the fixed size of the array here</param>
        </member>
        <member name="M:PloobsEngine.Utils.MovingAverage.Add(System.Double)">
            <summary>
            Add an element
            </summary>
        </member>
        <member name="P:PloobsEngine.Utils.MovingAverage.Data">
            <summary>
            Get data
            </summary>
        </member>
        <member name="P:PloobsEngine.Utils.MovingAverage.Count">
            <summary>
            Get count
            </summary>
        </member>
        <member name="P:PloobsEngine.Utils.MovingAverage.Value">
            <summary>
            Get value
            </summary>
        </member>
        <member name="T:PloobsEngine.SceneControl.EngineContentManager">
            <summary>
            Content Manager, used to load stuffs like Model, Textures
            Cache the results
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.BatchType">
            <summary>
            Batch Type
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchType.INDEXED">
            <summary>
            Draw Indexed
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchType.NORMAL">
            <summary>
            Draw without index
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchType.INSTANCED">
            <summary>
            Draw Instanced Geometry
            </summary>
        </member>
        <member name="T:PloobsEngine.Modelo.BatchInformation">
            <summary>
            Batch Information
            Contains Draw data from a model (vertices, indexes) and info about how to draw them
            The use should just use the Constructor to change Data, dont use the accessor public methods
            </summary>
        </member>
        <member name="M:PloobsEngine.Modelo.BatchInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.VertexDeclaration,System.Int32,PloobsEngine.Modelo.BatchType,Microsoft.Xna.Framework.Graphics.PrimitiveType)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.BatchInformation"/> class.
            Indexed or Normal
            Use OTHER constructor to created INSTANCED
            </summary>
            <param name="BaseVertex">The base vertex.</param>
            <param name="NumVertices">The num vertices.</param>
            <param name="PrimitiveCount">The primitive count.</param>
            <param name="StartIndexOrVertex">The start index or vertex.</param>
            <param name="StreamOffset">The stream offset.</param>
            <param name="VertexDeclaration">The vertex declaration.</param>
            <param name="VertexStride">The vertex stride.</param>
            <param name="BatchType">Type of the batch.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.BatchInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.VertexDeclaration,System.Int32,Microsoft.Xna.Framework.Graphics.PrimitiveType)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.BatchInformation"/> class.
            Indexed
            </summary>
            <param name="BaseVertex">The base vertex.</param>
            <param name="NumVertices">The num vertices.</param>
            <param name="PrimitiveCount">The primitive count.</param>
            <param name="StartIndex">The start index.</param>
            <param name="StreamOffset">The stream offset.</param>
            <param name="VertexDeclaration">The vertex declaration.</param>
            <param name="VertexStride">The vertex stride.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
        </member>
        <member name="M:PloobsEngine.Modelo.BatchInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.VertexDeclaration,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.PrimitiveType)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Modelo.BatchInformation"/> class.
            INSTACED CONSTRUCTOR
            </summary>
            <param name="BaseVertex">The base vertex.</param>
            <param name="NumVertices">The num vertices.</param>
            <param name="PrimitiveCount">The primitive count.</param>
            <param name="StartIndex">The start index.</param>
            <param name="StreamOffset">The stream offset.</param>
            <param name="VertexDeclaration">The vertex declaration.</param>
            <param name="VertexStride">The vertex stride.</param>
            <param name="instanceCount">The instance count.</param>
            <param name="PrimitiveType">Type of the primitive.</param>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.InstanceCount">
            <summary>
            For Instancing, the number of objects
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.PrimitiveType">
            <summary>
            Primitive Type
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.BatchType">
            <summary>
            Batch Type
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.BaseVertex">
            <summary>
            Base Verter
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.NumVertices">
            <summary>
            Num Vertices
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.PrimitiveCount">
            <summary>
            Primitive COunt
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.StartIndex">
            <summary>
            Start Index
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.StartVertex">
            <summary>
            Start Vertex
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.StreamOffset">
            <summary>
            Stream Offset
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.VertexDeclaration">
            <summary>
            Vertex Declaration
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.VertexStride">
            <summary>
            VertexStride
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.VertexBuffer">
            <summary>
            VertexBuffer
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.InstancedVertexBuffer">
            <summary>
            Instanced VertexBuffer
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.IndexBuffer">
            <summary>
            IndexBuffer
            </summary>
        </member>
        <member name="F:PloobsEngine.Modelo.BatchInformation.ModelLocalTransformation">
            <summary>
            Local Transformation
            </summary>
        </member>
        <member name="T:PloobsEngine.MessageSystem.SystemRecieverMessage">
            <summary>    
            Helper to Handle some message
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.MessageSystem.SystemRecieverMessage"/> class.
            </summary>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.HandleThisMessageType(PloobsEngine.MessageSystem.SenderType)">
            <summary>
            Handles a message from determined sender type.
            </summary>
            <param name="type">Sender type.</param>
            <returns></returns>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.HandleMessage(PloobsEngine.MessageSystem.Message)">
            <summary>
            Handles the message.
            </summary>
            <param name="mes">The mes.</param>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.GetId">
            <summary>
            return the entity id
            </summary>
            <returns>
            the id
            </returns>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.SetId(System.Int32)">
            <summary>
            sets the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:PloobsEngine.MessageSystem.SystemRecieverMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:PloobsEngine.Physics.Bepu.TriangleMeshObject">
            <summary>
            Static Triangle Mesh Physic Object
            </summary>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TriangleMeshObject.#ctor(PloobsEngine.Modelo.IModelo,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3,PloobsEngine.Physics.MaterialDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.TriangleMeshObject"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="pos">The pos.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="materialDescription">The material description.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TriangleMeshObject.#ctor(Microsoft.Xna.Framework.Graphics.Model,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Matrix,Microsoft.Xna.Framework.Vector3,PloobsEngine.Physics.MaterialDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Physics.Bepu.TriangleMeshObject"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="pos">The pos.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="materialDescription">The material description.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TriangleMeshObject.ExtractData(Microsoft.Xna.Framework.Vector3[]@,System.Int32[]@,PloobsEngine.Modelo.IModelo)">
            <summary>
            Helper to get the vertex and index List from the model.
            </summary>
            <param name="vert">The vert.</param>
            <param name="ind">The ind.</param>
            <param name="model">The model.</param>
        </member>
        <member name="M:PloobsEngine.Physics.Bepu.TriangleMeshObject.ApplyImpulse(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Cant Aply Impulse on Static Object
            </summary>
            <param name="position"></param>
            <param name="force">The force.</param>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.StaticMesh">
            <summary>
            Gets or sets the static mesh.
            </summary>
            <value>
            The static mesh.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.PhysicObjectTypes">
            <summary>
            Gets the physic object type.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.FaceVector">
            <summary>
            Vector pointing to the front
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.WorldMatrix">
            <summary>
            Gets the world matrix.
            </summary>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.AngularVelocity">
            <summary>
            Gets or sets the angular velocity.
            </summary>
            <value>
            The angular velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.Velocity">
            <summary>
            Gets velocity. Always Zero cause this object is static
            </summary>
            <value>
            The velocity.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.isMotionLess">
            <summary>
            This object is always motion less
            </summary>
            <value>
            	<c>true</c> if this instance is motion less; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.ObjectOwner">
            <summary>
            Gets or sets the IObject owner.
            </summary>
            <value>
            The IObject owner.
            </value>
        </member>
        <member name="P:PloobsEngine.Physics.Bepu.TriangleMeshObject.BoundingBox">
            <summary>
            Gets the bounding box IN WORLD COORDINATES
            </summary>
        </member>
        <member name="T:PloobsEngine.Material.ForwardSimpleAnimationShader">
            <summary>
            Animation shader with simple effects
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardSimpleAnimationShader.#ctor">
            <summary>
            Serialization
            </summary>
        </member>
        <member name="M:PloobsEngine.Material.ForwardSimpleAnimationShader.#ctor(PloobsEngine.Modelo.Animation.IAnimatedController)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardSimpleAnimationShader"/> class.
            </summary>
            <param name="ac">The ac.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardSimpleAnimationShader.#ctor(PloobsEngine.Modelo.Animation.IAnimatedController,PloobsEngine.SceneControl.IObject,PloobsEngine.Modelo.Animation.IAnimatedController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PloobsEngine.Material.ForwardSimpleAnimationShader"/> class.
            THIS IS A SPECIAL CONSTRUCTOR, it is used to ATACH this shader to a external BONE
            Can be used for example to put a gun in the hand of a character
            </summary>
            <param name="ac">The ac.</param>
            <param name="obj">The obj.</param>
            <param name="Followed">The followed.</param>
            <param name="boneName">Name of the bone.</param>
        </member>
        <member name="M:PloobsEngine.Material.ForwardSimpleAnimationShader.Update(Microsoft.Xna.Framework.GameTime,PloobsEngine.SceneControl.IObject,System.Collections.Generic.IList{PloobsEngine.Light.ILight})">
            <summary>
            Updates this shader
            Called every frame once
            </summary>
            <param name="gt"></param>
            <param name="ent">The ent.</param>
            <param name="lights">The lights.</param>
        </member>
        <member name="P:PloobsEngine.Material.ForwardSimpleAnimationShader.SkinnedEffect">
            <summary>
            CAN BE ONLY CALLED AFTER Adding the IOBJECT TO THE WORLD
            </summary>
        </member>
        <member name="P:PloobsEngine.Material.ForwardSimpleAnimationShader.MaterialType">
            <summary>
            Gets the type of the material.
            </summary>
            <value>
            The type of the material.
            </value>
        </member>
        <member name="M:PloobsEngine.Light2D.ShadowmapResolver.#ctor(PloobsEngine.Engine.GraphicFactory,PloobsEngine.SceneControl.QuadRender,PloobsEngine.Light2D.ShadowmapSize,PloobsEngine.Light2D.ShadowmapSize)">
            <summary>
            Creates a new shadowmap resolver
            </summary>
            <param name="factory">The factory.</param>
            <param name="quadRender">The quad render.</param>
            <param name="maxShadowmapSize">Size of the max shadowmap.</param>
            <param name="maxDepthBufferSize">Size of the max depth buffer.</param>
        </member>
        <member name="T:PloobsEngine.IA.NeuralNetwork.NeuralNetwork">
            <summary>
            Implementation of artificial neural network
            </summary>  
            <remarks>
            <code>
            
            
                                   o
                                   o  o  o  
               INPUT VECTOR =====> o  o  o =====> OUTPUT VECTOR
                                   o  o  o  
                                   o
                                 NERON LAYERS
            
            </code> 
            Each neuron of the layer N-1 is conected to 
            every neuron of the layer N.
            At the begining the neural network needs to
            learn using couples (INPUT, EXPECTED OUTPUT)
            and a learnig algorithm.
            </remarks>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.layers">
            <summary>
            Layers of neuron in the network
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.ni">
            <summary>
            Number of inputs of the network
            (number of inputs of the first layer)
            </summary>
        </member>
        <member name="F:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.la">
            <summary>
            Learning algorithm used by the network
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.#ctor(System.Int32,System.Int32[],PloobsEngine.IA.NeuralNetwork.ActivationFunction,PloobsEngine.IA.NeuralNetwork.LearningAlgorithm)">
            <summary>
            Create a new neural network
            with "inputs" inputs and size of "layers"
            layers of neurones.
            The layer i is made with layers_desc[i] neurones.
            The activation function of each neuron is set to n_act.
            The lerning algorithm is set to learn.
            </summary>
            <param name="inputs">Number of inputs of the network</param>
            <param name="layers_desc">Number of neurons for each layer of the network</param>
            <param name="n_act">Activation function for each neuron in the network</param>
            <param name="learn">Learning algorithm to be used by the neural network</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.#ctor(System.Int32,System.Int32[],PloobsEngine.IA.NeuralNetwork.ActivationFunction)">
            <summary>
            Create a new neural network
            with "inputs" inputs and size of "layers"
            layers of neurones.
            The layer i is made with layers_desc[i] neurones.
            The activation function of each neuron is set to n_act.
            The lerning algorithm is set to default (Back Propagation).
            </summary>
            <param name="inputs">Number of inputs of the network</param>
            <param name="layers_desc">Number of neurons for each layer of the network</param>
            <param name="n_act">Activation function for each neuron in the network</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.#ctor(System.Int32,System.Int32[])">
            <summary>
            Create a new neural network
            with "inputs" inputs and size of "layers"
            layers of neurones.
            The layer i is made with layers_desc[i] neurones.
            The activation function of each neuron is set to default (Sigmoid with beta = 1).
            The lerning algorithm is set to default (Back Propagation).
            </summary>
            <param name="inputs">Number of inputs of the network</param>
            <param name="layers_desc">Number of neurons for each layer of the network</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.randomizeWeight">
            <summary>
            Randomize all neurones weights between -0.5 and 0.5
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.randomizeThreshold">
            <summary>
            Randomize all neurones threholds between 0 and 1
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.randomizeAll">
            <summary>
            Randomize all neurones threholds between 0 and 1
            and weights between -0.5 and 0.5
            </summary>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.setActivationFunction(PloobsEngine.IA.NeuralNetwork.ActivationFunction)">
            <summary>
            Set an activation function to all neurons of the network
            </summary>
            <param name="f">An activation function</param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.setRandomizationInterval(System.Single,System.Single)">
            <summary>
            Set the interval in which weights and threshold will be randomized
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.Output(System.Single[])">
            <summary>
            Compute the value for the specified input
            </summary>
            <param name="input">the input vector</param>
            <returns>the output vector of the neuronal network</returns>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.N_Inputs">
            <summary>
            Get number of inputs of the network
            (network input vector size)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.N_Outputs">
            <summary>
            Get number of output of the network
            (network output vector size)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.N_Layers">
            <summary>
            Get number of inputs of the network
            (network input vector size)
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.LearningAlg">
            <summary>
            Get or set network learning algorithm
            </summary>
        </member>
        <member name="P:PloobsEngine.IA.NeuralNetwork.NeuralNetwork.Item(System.Int32)">
            <summary>
            Get the n th Layer of the network 
            </summary>
        </member>
    </members>
</doc>
